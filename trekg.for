C====================================================================
C                                                                   *
C                            TREK7 MODULE G                         *
C                                                                   *
C            -- CONVERTED TO PC BY: DAN GAHLINGER --                *
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C                                                                   *
C         MISCALLANEOUS ROUTINES                                    *
C                                                                   *
C         ENTEMP    BALOK    TALOS    ENEMY    MOLOCH    DONE       *
C         THOLIA    KNUTH    BLISH    FINNEY   SAURON    MCCOY      *
C         RPAIR                                                     *
C                                                                   *
C====================================================================

C            -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C
C                               - ENTEMP -
C
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C DG NOV. 15/1999 - CALL_LIB$EOL AND SO FORTH ARE NOT PART OF ORIG PRINTOUT
C CALL_LIB$EOL AND SO FORTH HAVE THUS BEEN REMOVED TO REFLECT ORIG SOURCE
C

CV MOVE M-O SHIP
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV MOVE   - REQUESTED SHIP MOVEMENT FLAG
CV ITEMP  - ENGINE TEMPERATURE
CV WARP   - REQUESTED SHIP WARP
CV MA     - DECK STATUS
CV MANUM  - NUMBER OF DAMAGED DECKS
CV TWARP  - AVAILABLE WARP POWER
CV ICHOE  - M-O SHIP
CV INAME  - VESSEL NAME
CV K      - SPECIAL DAMAGE FACTOR "K"
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV I7     - RANDOM ENGINE TEMPERATURE FACTOR
CV I7     - RANDOM ENGINE EXPLOSION PROBABILITIY FACTOR
CV I7     - M-O SHIP INDEX
CV I8     - SUMMED UP DAMAGE FACTOR
CV I8     - M-O SHIP FORTRAN UNIT NUMBER
CV J      - INDEX OF HIT ENGINE
CV IVV    - M-O SHIP DAMAGE FACTOR
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV ITEMP  - ENGINE TEMPERATURE
CV TWARP  - AVAILABLE WARP POWER
CV K      - SPECIAL DAMAGE FACTOR "K"
CV
CV ======
CV STEPS
CV ======
CV 1. ENGINE TEMPERATURE MANAGEMENT
CV 2. POTENTIAL NACELLE EXPLOSION
CV FINISH
CV

      SUBROUTINE ENTEMP(MOVE)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOEING,
     *IGNORE,IO,IGOL(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /F/WARP(4),ITROW(4),ITCCL(4)
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM

CV ==============================
CV ENGINE TEMPERATURE MANAGEMENT
CV ==============================

CV IF MOVE > 0: CALCULATE & INCREASE ENGINE TEMPERATURE
      IF(MOVE.GT.0)GO TO 3331

CV ELSE (MOVE <= 0):

CV IF ENGINE TEMPERATURE = 4000: RETURN (DO NOTHING)
      IF(ITEMP(IT).EQ.4000)GO TO 546

CV OTHERWISE COOL ENGINE DOWN BY 600,
CV BUT NOT BELOW 4000 (SEE LABEL 3332)
      ITEMP(IT)=ITEMP(IT)-600
      GO TO 3332

CV GENERATE RANDOM ENGINE TEMPERATURE FACTOR I7 (75-125)
3331  CALL RANDO(I7,75,125)

CV IF WARP > 6: JUMP TO 3333
      IF(WARP(IT).GT.6.)GO TO 3333

CV CALCULATE NEW ENGINE TEMPERATURE IF WARP <= 6
CV NEW ENGINE TEMPERATURE BASED ON WARP AND ENGINE TEMPERATURE FACTOR I7
      ITEMP(IT)=ITEMP(IT)+(WARP(IT)-6.)*I7
      GO TO 3332

CV CALCULATE NEW ENGINE TEMPERATURE IF WARP > 6
CV DEPENDING ON STATUS OF DECK IDS 29&30
3333  ITEMP(IT)=ITEMP(IT)+(WARP(IT)-6.)*FLOAT(I7)*(FLOAT(MA(IT,29))/9.+
     *1.)*(FLOAT(MA(IT,30))/9.+1.)

CV SET ENGINE MINIMUM TEMPERATURE = 4000
3332  IF(ITEMP(IT).LT.4000)ITEMP(IT)=4000

CV PRINT ENGINE TEMPERATURE
      WRITE(L,3334)ITEMP(IT)
3334  FORMAT(' ENGINE TEMP. = ',I5,' DEGREES')

CV ENGINE TEMPERATURE < 5500: O.K.
      IF(ITEMP(IT).LT.5500)GO TO 546

CV 5500 <= ENGINE TEMPERATURE < 6200: NEAR CRITICAL
      IF(ITEMP(IT).LT.6200)GO TO 3336

CV 6200 <= ENGINE TEMPERATURE < 7500: BEYOND CRITICAL POINT
      IF(ITEMP(IT).GT.6200)GO TO 3335

CV WRITE MESSAGE "ENGINES OVERHEATING"
3336  WRITE(L,3339)
3339  FORMAT(' ENGINES OVERHEATING -TEMPERATURES ARE NEAR CRITICAL')
      GO TO 546

CV WRITE MESSAGE "TEMPERATURES ARE BEYOND CRITICAL POINT"
3335  WRITE(L,3337)
3337  FORMAT(' TEMPERATURES ARE BEYOND CRITICAL POINT')

CV ENGINE TEMPERATURE >= 7500; EXPLOSION IMMINENT
      IF(ITEMP(IT).GE.7500)WRITE(L,3338)
3338  FORMAT(' EXPLOSION IMMINENT!!!')

CV ============================
CV POTENTIAL NACELLE EXPLOSION
CV ============================

CV GENERATE RANDOM PROBABILITIY FACTOR I7 FOR ENGINE EXPLOSION
      CALL RANDO(I7,1,100)

CV IF ENGINE EXPLOSION PROBABILITIY FACTOR I7 > (ITEMP(IT)-6200)/100:
CV RETURN (ENGINE SURVIVES)
      IF(I7.GT.(ITEMP(IT)-6200)/100)GO TO 546

CV ELSE: ENGINE JETTISONED AND EXPLODED

CV CALCULATE FACTOR I8 FROM DAMAGES SO FAR
      I8=MA(IT,29)+MA(IT,30)+1

CV CALCULATE RANDOM NEW DAMAGE FACTOR I7
      CALL RANDO(I7,0,I8)

CV CALCULATE WHICH ENGINE IS HIT
      J=1
      IF(I7.GT.MA(IT,29))J=2
      IF(MA(IT,28+J).EQ.9)J=3-J
      IF(MA(IT,28+J).GT.0)MANUM(IT)=MANUM(IT)-1
      MA(IT,28+J)=9

CV REDUCE AVAILBLE WARP POWER, BUT NOT BELOW 0
      TWARP(IT)=TWARP(IT)-4.5+K(IT,3+J)/2
      IF(TWARP(IT).LT.0)TWARP(IT)=0

CV SET DAMAGE FACTOR K
      K(IT,3+J)=9

CV WRITE MESSAGE "JETTISONNED ... EXPLODED"
      WRITE(L,3340)J,J
3340  FORMAT(' ENGINEERING HERE SIR - MATTER AND ANTI-MATTER ARE NO WIT
     *HIN RED-ZONE PROXIMITY'/' AUTOMATIC RELAYS CUTTING IN..... NACELLE
     *',I2,' JETTISONNED'/' NACELLE',I2,' HAS EXPLODED - DAMAGE REPORT D
     *UE TO PROXIMITY OF BLAST-')
      DO 162 I7=1,4
      IF(ICHOE(I7).EQ.0)GO TO 162
      IF(I7.EQ.IT)GO TO 162
      I8=I7+4
      WRITE(I8,1630)(INAME(IQ0,IT),IQ0=1,3),J
1630  FORMAT(1X,3A4,' NACELLE',I2,' HAS EXPLODED - DAMAGE REPORT-')
162   CONTINUE

CV SET DAMAGE FACTOR
      IVV=10

CV CALL DAMAGE TO M-O SHIP SUBROUTINE GRUP1
      CALL GRUP1(IVV,IT)
546   RETURN
      END

C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C           TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C - BALOK -
C

CV CALCULATION & ANNOUNCEMENT WHAT STARBASE NO # HAS ACHIEVED

CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV IBPSS  - STARBASE OWNER INDEX
CV IJ     - STARBASE OWNER PARTY INDEX
CV DFLCB  - STARBASE DEFLECTOR STRENGTH
CV DFLCT  - M-O SHIP DEFLECTOR STRENGTH
CV DFLCK  - C-O SHIP DEFLECTOR STRENGTH
CV IBASR  - ROW POSITION OF STARBASE
CV IBASC  - COL POSITION OF STARBASE
CV MIN    - NEAREST VESSEL INDEX
CV DISTP  - DISTANCE TO NEAREST VESSEL
CV ICHOE  - M-O SHIP
CV ISIDE  - OPPONENT SIDE NAME
CV IBASE  - STARBASE INDEX
CV INAME  - VESSEL NAME
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV I7     - STARBASE OWNER INDEX
CV I7     - DOOMSDAY BOUNCE OFF FACTOR
CV I7     - M-O SHIP INDEX
CV I8     - M-O SHIP FORTRAN UNIT NUMBER
CV IVV    - RANDOM ATTACK FACTOR
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV -- NONE --
CV

      SUBROUTINE BALOK
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM

CV I7 = OWNER SHIP OF STARBASE
      I7=IBPSS(I)

CV IF STARBASE OWNER PARTY = 0 (NONE): OWNER = 0 (NONE)
      IF(IJ(I7).EQ.0)I7=0

CV CALCULATE NEAREST VESSEL TO STARBASE
      CALL PIKE(IBASR(I),IBASC(I),I7)

CV IF NO NEAREST VESSEL (MIN=0): RETURN
      IF(MIN.EQ.0)GO TO 1

CV IF DISTANCE TO NEAREST VESSEL > 20: RETURN
      IF(DISTP.GT.20.)GO TO 1

CV ELSE: DISTANCE TO NEAREST VESSEL <= 20:

CV REDUCE STARBASE DEFLECTOR STRENGTH BY 5.0 (WHY?)
      DFLCB(I)=DFLCB(I)-5.0

CALCULATE RANDOM ATTACK FACTOR (IVV) IN RANGE 1 TO 100
      CALL RANDO(IVV,1,100)

CV IF RANDOM ATTACK FACTOR (IVV) <= DISTANCE TO NEAREST VESSEL * 2.5:
CV RETURN
      IF(IVV.LE.DISTP*2.5)GO TO 1

CV ELSE: RANDOM ATTACK FACTOR (IVV) > DISTANCE TO NEAREST VESSEL * 2.5

CV =======
CV EAGLES
CV =======

CV IF NEAREST VESSEL = EAGLE: 2
      IF(MIN.GT.14)GO TO 2


CV ==========
CV M-O SHIPS
CV ==========

CV IF NEAREST VESSEL = NO M-O SHIP: S
      IF(MIN.GT.4)GO TO 3

CV LOOP OVER ALL M-O SHIPS (I7)
      DO 4 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 4

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "<PARTY> STARBASE <NUMBER> HAS SCORED A HIT ON THE
CV <NEAREST VESSEL (M-O SHIP)> ..."
      WRITE(I8,5)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I),
     *(INAME(IQ0,MIN),IQ0=1,3)
5     FORMAT(/1X,3A4,' STARBASE',I3,' HAS SCORED A HIT ON THE ',3A4,'-DA
     *MAGE REPORT-')

CV NEXT M-O SHIP
4     CONTINUE

CV CALCULATE DAMAGES ON M-O SHIP CONSIDERING DEFLECTOR STRENGTH
CV WITH SEVERITY FACTOR "50"
      CALL GRUP1(LIRPA(DFLCT(MIN),50),MIN)

CV RETURN
      GO TO 1

CV ============================================
CV NEAREST VESSEL = NEITHER EAGLE NOR M-O SHIP
CV ============================================

CV IF NEAREST VESSEL = C-O SHIP: 6
3     IF(MIN.GT.6)GO TO 6

CV ==========================
CV NEAREST VESSEL = STARBASE
CV ==========================

      MIN=MIN-4

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 7 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 7

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE "STARBASE <X> HIT STARBASE <Y>" MESSAGE TO M-O SHIP
      WRITE(I8,8)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I),
     *(ISIDE(IQ0,MIN),IQ0=1,3),IBASE(MIN)
8     FORMAT(/1X,3A4,' STARBASE',I3,' HIT ',3A4,' STARBASE',I3,
     *'-DAMAGE REPORT-')

CV NEXT M-O SHIP
7     CONTINUE

CV CALCULATE DAMAGES ON STARBASE CONSIDERING DEFLECTOR STRENGTH
      CALL GRUP2(LIRPA(DFLCB(MIN)/3.,50),MIN)

CV RETURN
      GO TO 1

CV ==============================
CV NEAREST VESSEL = ANY C-O SHIP
CV ==============================

6     MIN=MIN-6

CV IF NEAREST VESSEL IS NOT DOOMSDAY: 15
      IF(MIN.NE.7)GO TO 15

CV ==========================
CV NEAREST VESSEL = DOOMSDAY
CV ==========================

CV CALCULATE RANDOM "DOOMSDAY BOUNCE OFF FACTOR" (I7) IN RANGE 1 TO 3
      CALL RANDO(I7,1,3)

CV IF "BOUNCE OFF FACTOR" (I7) = 2 SKIP "BOUNCE OFF" (15)
      IF(I7.EQ.2)GO TO 15

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 16 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 16

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE "STARBASE <NUMBER> PHASERS BOUNCED OFF DOOMSDAY MACHINE"
CV MESSAGE TO M-O SHIP
      WRITE(I8,17)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I)
17    FORMAT(/1X,3A4,' STARBASE',I3,' PHASERS BOUNCED OFF DOOMSDAY
     * MACHINE')

CV NEXT M-O SHIP
16    CONTINUE

CV RETURN
      GO TO 1

CV ===============================================
CV NEAREST VESSEL = ANY C-O SHIP EXECEPT DOOMSDAY
CV ===============================================

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
15    DO 9 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 9

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE "STARBASE <NUMBER> HIT <SHIP NAME>" MESSAGE TO M-O SHIP
      WRITE(I8,18)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I),(IENM2(IV,MIN),IV=1,4)
18    FORMAT(/1X,3A4,' STARBASE',I3,' HIT ',4A4,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
9     CONTINUE

CV CALCULATE DAMAGES ON C-O SHIP CONSIDERING DEFLECTOR STRENGTH
      CALL GRUP3(LIRPA(DFLCK(MIN),50),MIN)

CV RETURN
      GO TO 1

CV =======================
CV NEAREST VESSEL = EAGLE
CV =======================

2     MIN=MIN-14

CV INCREASE STARBASE DEFLECTOR STRENGTH BY 4.9 (WHY?)
      DFLCB(I)=DFLCB(I)+4.9

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 10 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 10

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE "STARBASE <NUMBER> DESTROYED EAGLE <EAGLE NAME>" MESSAGE TO M-O SHIP
      WRITE(I8,11)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I),MIN
11    FORMAT(/1X,3A4,' STARBASE',I3,' DESTROYED EAGLE',I3)

CV NEXT M-O SHIP
10    CONTINUE

CV DO EAGLE DESTRUCTION
      CALL BOOM(MIN)

CV RETURN
1     RETURN
      END


C- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 ---
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C          TYPE-EXACT CHCEK 04/25/2000 BY: D.G.
C- TALOS -
C

CV CALCULATION & ANNOUNCEMENT OF ION STORM DAMAGE TO STARBASE

      SUBROUTINE TALOS
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 13 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 13

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE "ION STORM DAMAGE TO <PARTY> STARBASE <NUMBER>" MESSAGE TO M-O SHIP
      WRITE(I8,14)(ISIDE(IQ0,I),IQ0=1,3),IBASE(I)
14    FORMAT(/' ION STORM DAMAGE TO ',3A4,' STARBASE',I3,' AS FOLLOWS-')

CV NEXT M-O SHIP
13    CONTINUE

CV CALCULATE RANDOM DAMAGE BASE NUMBER (IV) IN RANGE 1 TO 20
      CALL RANDO(IV,1,20)

CV CALCULATE DAMAGE NUMBER (IVV) FROM DEFLECTOR STRENGTH
CV AND RANDOM DAMAGE BASE NUMBER
      IVV=ALOG((101.-DFLCB(I)/3.)*IV)/0.700619195-3.

CV CALCULATE DAMAGES ON STARBASE OWNER PARTY I
      CALL GRUP2(IVV,I)

CV NEXT M-O SHIP
      RETURN

      END


C - DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C          TYPE-EXACT CHCEK 04/25/2000 BY: D.G.
C
C EEEEE   N   N EFEEE M   M Y   Y
C E       NN  N E     MM MM  Y Y
C EEEE    N N N EEEE  M M M   Y
C E       N  NN E     M   M   Y
C EEEEE   N   N EEEEE M   M   Y
C

CV CALCULATION & ANNOUNCEMENT WHAT AN C-O SHIP HAS ACHIEVED

      SUBROUTINE ENEMY
      LOGICAL BLISH
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)
      COMMON /TOM/ITOM
      LOGICAL MOLOCH

CV ?
      KOENIG=0

CV ?
      JTK=0

CV LOOP OVER ALL C-O SHIPS (I)
1101  DO 1100 I=1,8
      ISTAT=0

CV IF C-O SHIP = MOONBASE: SKIP EAGLE ACTIONS (DUNE)
      IF(I.NE.8)GO TO 11010

CV MANAGE EAGLE ACTIONS
      CALL DUNE

CV IF C-O SHIP NOT IN GAME: NEXT C-O SHIP
11010 IF(ICHOS(I).EQ.0)GO TO 1100

CV GO TO LABEL ACCORDING TO C-0 SHIP INDEX (I)
107   GO TO (1103,1104,1105,1106,1107,1109,1108,11090),I

CV 1 = KLINGONS
1103  CALL RANDO(IV,45,110)
      GO TO 1109

CV 2 = ROMULANS
1104  CALL RANDO(IV,30,100)
      GO TO 1109

CV 3 = THOLIANS
1105  CALL RANDO(IV,60,90)
      GO TO 1109

CV 4 = GORNS
1106  CALL RANDO(IV,35,90)
      GO TO 1109

CV 5 = ORIONS
1107  CALL RANDO(IV,50,100)
      GO TO 1109

CV 7= DOOMSDAY
1108  CALL RANDO(IV,100,200)
      GO TO 1109

CV 8 = MOONBASE
11090 IV=50

CV 6 = KZINTI

CV =========================================================================
CV DECIDE WHETHER TO ATTACK CURRENT NEAREST VESSEL OR LAST NEAREST VESSEL ?
CV =========================================================================

CV CALCULATE CURRENT NEAREST VESSEL TO C-O SHIP
1109  CALL PIKE(IKLNR(I),IKLNC(I),IBPSB(I))

CV IF NO NEAREST VESSEL: CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      IF(MIN.EQ.0)GO TO 232

CV IF DISTANCE LAST TURN >= CURRENT DISTANCE TO NEAREST VESSEL:
CV ATTACK CURRENT NEAREST VESSEL (3390)
      IF(DIST(I).GE.DISTP)GO TO 3390

CV IF "LAST TURNS NEAREST VESSEL" IS ONE OF:
CV    - NEAREST M-O SHIP: NOT IN GAME OR DESTRUCTED
CV    - NO NEAREST STARBASE IN GAME
CV    - NEAREST C-O SHIP: NOT IN GAME, NO CREW OR DESTRUCTED)
CV    - NO NEAREST EAGLE IN GAME"
CV : ATTACK CURRENT NEAREST VESSEL (3390)
      IF(MOLOCH(IWHO(I)))GO TO 3390

CV =======================================
CV SWITCH TO "ATTACK LAST NEAREST VESSEL"
CV =======================================

CV ELSE: DISTANCE TO NEAREST VESSEL = DISTANCE LAST TURN
      DISTP=DIST(I)

CV SET "NEAREST VESSEL" TO "LAST TURNS NEAREST VESSEL"
      MIN=IWHO(I)

CV SET NUMBER OF PARTICIPANTS IN GAME TO "6"
      ISTAT=6

CV ===================================
CV ATTACK CURRENT/LAST NEAREST VESSEL
CV ===================================

CV ========
CV ROMULAN
CV ========

CV IF C-O SHIP IS NOT ROMULAN: SKIP ROMULAN SENSOR RANGE CALCULATION
3390  IF(I.NE.2)GO TO 378

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 380 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).NE.1)GO TO 380

CV IF DISTANCE BETWEEN M-O SHIP AND ROMULAN SHIP > 5: NEXT M-O SHIP
      IF(DI(IENTR(I7),IENTC(I7),IKLNR(2),IKLNC(2)).GT.5.)GO TO 380

CV ELSE: DISTANCE BETWEEN M-O SHIP AND ROMULAN SHIP <= 5:

CV SET ROMULAN SHIP VISIBLE
      INVIS(I7)=1

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP
      I8=I7+4

CV WRITE MESSAGE "... NOW WITHIN SENSOR RANGE"
      WRITE(I8,381)
381   FORMAT(' THE ROMULAN SHIP IS NOW WITHIN SENSOR RANGE')

CV SET ROMULAN STRATEGY (KILLR) TO "ATTACK"
      KILLR=2

CV NECT M-O SHIP
380   CONTINUE

CV IF ROMULAN STRATEGY (KILLR) = 1 (NEUTRAL): 339
      IF(KILLR.NE.1)GO TO 339

CV IF DISTP > 10: NEXT C-O SHIP (1100)
      IF(DISTP.GT.10.)GO TO 1100

CV ELSE: DISTP <= 10: SET ROMULAN STRATEGY (KILLR) TO "ATTACK"
      KILLR=2
      GO TO 339

CV ========
CV THOLIAN
CV ========

CV IF C-O SHIP IS THOLIAN: THOLIA
378   IF(I.EQ.3)CALL THOLIA

CV =========
CV DOOMSDAY
CV =========

CV IF C-O SHIP IS NOT DOOMSDAY: 379
      IF(I.NE.7)GO TO 379

CV ELSE C-O SHIP IS DOOMSDAY

CV IF ...: NEXT C-O SHIP
      IF(KILLD.EQ.1.AND.DISTP.GT.7.)GO TO 1100
      KILLD=1
      GO TO 339

CV =======
CV KZINTI
CV =======
379   IF(I.NE.6)GO TO 339

CV IF DISTANCE TO NEAREST VESSEL > KILLZ (KZINTI KILL DISTANCE?)
CV AND KZINTI DEFLECTOR STRENGTH = 100: NEXT C-O SHIP
      IF(DISTP.GT.KILLZ.AND.DFLCK(6).EQ.100.)GO TO 1100

CV ELSE: KZINTI SENSOR & STASIS FIELD
      CALL KNUTH

CV =========================
CV OTHER C-O SHIPS: 1,4,5,8
CV =========================

CV IF NO NEAREST VESSEL: NEXT C-O SHIP
339   IF(MIN.EQ.0)GO TO 1100

CV IF DISTANCE TO NEAREST VESSEL > 25: NEXT C-O SHIP
      IF(DISTP.GT.25.)GO TO 1100

CV =======
CV KZINTI
CV =======

      IF(I.NE.6)GO TO 33900

CV IF SPECIAL KZINTI ACTION = TRUE: NEXT C-O SHIP
360   IF(BLISH(JTK))GO TO 1100

CV ELSE: SPECIAL KZINTI ACTION =

CV CALCULATE RANDOM DAMAGE FACTOR (IVV) IN RANGE 1 TO 100
33900 CALL RANDO(IVV,1,100)

CV IF RANDOM DAMAGE FACTOR IVV <= 3. * DISTANCE TO TARGET:
CV CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      IF(IVV.LE.DISTP*3.)GO TO 232

CV NEAREST VESSEL IS NOT M-O SHIP: 340
      IF(MIN.GT.4)GO TO 340

CV SET MI TO NEAREST VESSEL INDEX
      MI=MIN

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 341 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 341

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP (I8)
      I8=I7+4

CV WRITE MESSAGE "<NAME OF C-O SHIP> HAS SCORED A HIT ON THE
CV <NEAREST VESSEL NAME>"
      WRITE(I8,342)(IENM2(J,I),J=1,4),(INAME(IQ0,MI),IQ0=1,3)
342   FORMAT(/1X,4A4,' HAS SCORED A HIT ON THE ',3A4,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
341   CONTINUE

CV CALCULATE M-O SHIP DAMAGE
      CALL GRUP1(LIRPA(DFLCT(MI),IV),MI)

CV CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      GO TO 232

CV ==========
CV STARBASES
CV ==========

CV IF VESSEL INDEX > 6: 343
340   IF(MIN.GT.6)GO TO 343
      MI=MIN-4

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 344 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 344

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP (I8)
      I8=I7+4

CV WRITE MESSAGE "<NAME OF C-O SHIP> HAS HIT STARBASE <STARBASE NUMBER>"
      WRITE(I8,330)(IENM2(J,I),J=1,4),(ISIDE(IQ0,MI),IQ0=1,3),IBASE(MI)
330   FORMAT(/1X,4A4,' HAS HIT ',3A4,' STARBASE',I3,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
344   CONTINUE

CV CALCULATE STARBASE DAMAGE
      CALL GRUP2(LIRPA(DFLCB(MI)/3.,IV),MI)

CV CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      GO TO 232

CV ==========
CV C-O SHIPS
CV ==========

343   IF(MIN.GT.14)GO TO 345
      MI=MIN-6

CV ==================================
CV DOOMSDAY "BOUNCE OFF" CALCULATION
CV ==================================

CV IF NEAREST VESSEL IS NOT DOOMSDAY: SKIP "BOUNCE OFF" CALCULATION
      IF(MI.NE.7)GO TO 3460

CV CALCULATE RANDOM "BOUNCE OFF" FACTOR I8 IN RANGE 1 TO 3
      CALL RANDO(I8,1,3)

CV IF RANDOM "BOUNCE OFF" FACTOR = 2 (33% PROBABILITY):
CV FIRE HITS DOOMSDAY MACHINE
      IF(I8.EQ.2)GO TO 3460

CV ELSE: FIRE BOUNCED OFF DOOMSDAY MACHINE

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 3461 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 3461

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP (I8)
      I8=I7+4

CV WRITE MESSAGE "<C-O SHIP NAME> FIRE BOUNCED OFF DOOMSDAY MACHINE"
      WRITE(I8,3462)(IENM2(J,I),J=1,4)
3462  FORMAT(/1X,4A4,' FIRE BOUNCED OFF DOOMSDAY MACHINE')

CV NEXT M-O SHIP
3461  CONTINUE

CV CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      GO TO 232

CV ========================
CV C-O SHIPS
CV ========================

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
3460  DO 346 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 346

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP (I8)
      I8=I7+4

CV WRITE MESSAGE "<NAME OF C-O SHIP> HAS SCORED A HIT ON THE
CV <NEAREST VESSEL NAME>"
      WRITE(I8,347)(IENM2(J,I),J=1,4),(IENM2(J,MI),J=1,4)
347   FORMAT(/1X,4A4,' HAS SCORED A HIT ON ',4A4,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
346   CONTINUE

CV CALCULATE C-O SHIP DAMAGE
      CALL GRUP3(LIRPA(DFLCK(MI),IV),MI)

CV CHECK IF C-O IS KZINTI, NEXT C-O SHIP
      GO TO 232

CV =======
CV EAGLES
CV =======

345   MI=MIN-14

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 348 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 348

CV CALCULATE FORTRAN UNIT NUMBER OF M-O SHIP (I8)
      I8=I7+4

CV WRITE MESSAGE "<NAME OF C-O SHIP> DESTROYED EAGLE <EAGLE INDEX>"
      WRITE(I8,349)(IENM2(J,I),J=1,4),MI
349   FORMAT(/1X,4A4,' DESTROYED EAGLE',I3)

CV NEXT M-O SHIP
348   CONTINUE

CV EAGLE DESTRUCTION
338   CALL BOOM(MI)

CV ====================
CV SPECIAL CASE KZINTI
CV ====================

CV IF C-O SHIP = KZINTI: 360
232   IF(I.EQ.6)GO TO 360

CV NEXT C-O SHIP
1100  CONTINUE

CV RETURN
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C    TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C - MOLOCH -
C

CV NEAREST VESSEL STATUS EVALUATION

CV MOLOCH = TRUE IF:
CV - NEAREST M-O SHIP: NOT IN GAME OR DESTRUCTED
CV - NO NEAREST STARBASE IN GAME
CV - NEAREST C-O SHIP: NOT IN GAME, NO CREW OR DESTRUCTED)
CV - NO NEAREST EAGLE IN GAME

      LOGICAL FUNCTION MOLOCH(MIN)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)

CV SET DEFAULT RETURN VALUE TO "FALSE"
      MOLOCH=.FALSE.

CV IF NEAREST VESSEL IS NOT AN M-O SHIP: CHECK OTHER VESSELS (1)
      IF(MIN.GT.4)GO TO 1

CV ELSE: NEAREST VESSEL IS AN M-O SHIP

CV IF NEAREST M-O SHIP STATUS IS 1 OR 2 (IN GAME OR NO CREW):
CV RETURN WITH MOLOCH=.FALSE.
      IF(ICHOE(MIN).NE.0.AND.ICHOE(MIN).NE.3)RETURN

CV ELSE NEAREST M-O SHIP STATUS IS 0 OR 3 (NOT IN GAME OR DESTRUCTED):
CV MOLOCH=.TRUE.
10    MOLOCH=.TRUE.

CV RETURN
      RETURN

CV =========
CV STARBASE
CV =========

CV IF NEAREST VESSEL > 6: C-0 SHIP OR EAGLE
1     IF(MIN.GT.6)GO TO 2

CV IF STARBASE STATUS IS 1, 2, OR 3 (IS OR WAS IN GAME,
CV REGARDLESS OF CREW): RETURN
      IF(ICHOB(MIN-4).NE.0)RETURN

CV ELSE: NO NEAREST STARBASE IN GAME: MOLOCH=.TRUE.
      GO TO 10

CV =========
CV C-O SHIP
CV =========

CV IF NEAREST VESSEL = EAGLE: PROCESS EAGLE
2     IF(MIN.GT.14)GO TO 3

CV IF C-O SHIP IS IN GAME: RETURN
      IF(ICHOS(MIN-6).EQ.1)RETURN

CV ELSE: NEAREST C-O SHIP = 0, 2, OR 3 (IS NOT IN GAME,
CV NO CREW OR DESTRUCTED): MOLOCH=.TRUE.
      GO TO 10

CV ======
CV EAGLE
CV ======

CV IF EAGLE STATUS IS 1, 2, OR 3 (IS OR WAS IN GAME,
CV REGARDLESS OF CREW):
3     IF(IGLER(MIN-14).NE.0)RETURN

CV ELSE: NO NEAREST EAGLE IN GAME: MOLOCH=.TRUE.
      GO TO 10
      END

C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C    TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C - DUNE -
C

CV EAGLES EFFECTS

      SUBROUTINE DUNE
      DIMENSION ISID(3,3)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBABC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)
      COMMON /TOM/ITOM
      DATA ISID/'FEDE','RATI','ON  ','KLIN','GON ','    ',
     *'MOON','BASE','    '/

CV IF NUMBER OF EAGLES OUT = 0: KOENIG=3 (?)
      IF(NUMOUT.EQ.0)KOENIG=3

CV =================================
CV LOOP OVER KOENIG FOR KOENIG TO 3
CV =================================

CV INCREMENT KOENIG (1/2/3/4, DEPENDING ON START VALUE OF KOENIG)
1110  KOENIG=KOENIG+1

CV GO TO LABELS ACCORDING TO KOENIG
      GO TO (315,318,316),KOENIG

CV IF KOENIG=4: RETURN (1100)
      GO TO 1100

CV ==========================================================================
CV KOENIG=1 CHOOSE RANDOM RANDOM MOONBASE OPPPONENT PARTY AND CALCULATE HITS
CV ==========================================================================

CV CALCULATE RANDOM MOONBASE OPPPONENT PARTY IN RANGE 1 TO 2
315   CALL RANDO(IS,1,2)

CV SET IV TO NUMBER OF EAGLES UNDER CONTROL OF RANDOM MOONBASE
CV OPPPONENT PARTY "IS" (NUME)
323   IV=NUME(IS)

CV IF NUMBER OF EAGLES UNDER CONTROL OF RANDOM MOONBASE
CV OPPPONENT PARTY "IS" (NUME) = 0
CV : INCREMENT KOENIG (1110) AND RESTART DUNE
320   IF(NUME(IS).EQ.0)GO TO 1110

CV LOOP OVER EAGLES (I7) FOR 1 TO LAUNCHED EAGLES
322   DO 319 I7=1,LAUNCH

CV IF EAGLE ROW <> 0 AND EAGLE PARTY = RANDOM MOONBASE OPPPONENT PARTY:
CV CALCULATE BOARDED EAGLES HIT AT M-O SHIP (321)
      IF(IGLER(I7).NE.0.AND.IBPSE(I7).EQ.IS)GO TO 321

CV NEXT LAUNCHED EAGLE
319   CONTINUE

CV ======================================================
CV KOENIG=2 SWITCH TO THE OTHER PARTY AND CALCULATE HITS
CV ======================================================

CV "IS" WAS 2 NOW 1
CV "IS" WAS 1 NOW 2
318   IS=3-IS

CV PROCESS THE OTHER PARTY
      GO TO 323

CV =====================================================
CV KOENIG=3 POST-PROCESSING AFTER BOTH PARTIES ARE DONE
CV =====================================================

CV
316   IS=0

CV SET IV TO EAGLES SENT OUT SO FAR - (SURVIVING EAGLES OF PARTY 1
CV + SURVIVING EAGLES OF PARTY 2)
CV IV = NUMBER OF EAGLES DESTROYED
      IV=NUMOUT-NUME(1)-NUME(2)

CV NUMBER OF EAGLES DESTROYED = 0: INCREMENT KOENIG (1110) AND RESTART DUNE
      IF(IV.EQ.0)GO TO 1110

CV ELSE: AT LEAST ONE EAGLE DESTROYED: RESTART "LOOP OVER EAGLES" (322)
      GO TO 322

CV =========================================
CV CALCULATE BOARDED EAGLES HIT AT M-O SHIP
CV =========================================

CV CALCULATE NEAREST VESSEL OF EAGLE (I7)
321   CALL PIKE(IGLER(I7),IGLEC(I7),IBPSE(I7))

CV IF NO NEAREST VESSEL: INCREMENT KOENIG (1110) AND RESTART DUNE
      IF(MIN.EQ.0)GO TO 1110

CV CALCULATE ??? FACTOR IV FROM "NUMBER OF EAGLES DESTROYED"
CV AND "DISTANCE TO NEAREST VESSEL"
CV MORE EAGLES DESTROYED: IV RISES
CV GREATER DISTANCE TO NEAREST VESSEL: IV FALLS
      IV=FLOAT(IV)*20.*(1.0-DISTP*0.045)

CV IF ...: INCREMENT KOENIG (1110) AND RESTART DUNE
      IF(IV.LE.0)GO TO 1110

CV
      IF(KOENIG.EQ.3)IS=3

CV IF NEAREST VESSEL IS NOT AN M-O SHIP: 324
      IF(MIN.GT.4)GO TO 324

CV SET MI TO M-O SHIP INDEX
      MI=MIN

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 325 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 325

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "<PARTY NAME> BOARDED EAGLES HIT <M-O SHIP NAME>"
      WRITE(I8,326)(ISID(IQ0,IS),IQ0=1,3),(INAME(IQ0,MI),IQ0=1,3)
326   FORMAT(/1X,3A4,' BOARDED EAGLES HIT ',3A4,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
325   CONTINUE

CV CALCULATE M-O SHIP DAMAGE FROM ...
      CALL GRUP1(LIRPA(DFLCT(MI),IV),MI)

CV INCREMENT KOENIG (1110) AND RESTART DUNE
      GO TO 1110

CV ======================
CV OTHER VESSELS (MIN>4)
CV ======================

CV IF VESSEL INDEX > 6: OTHER VESSELS (328)
324   IF(MIN.GT.6)GO TO 328

CV ============================
CV VESSEL = STARBASE (MIN=5,6)
CV ============================

CV SET STARBASE INDEX (MI) TO VESSEL INDEX-4
      MI=MIN-4

CV LOOP OVER M-O SHIP I7 FOR 1 TO 4
      DO 329 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 329

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "<PARTY NAME> BOARDED EAGLES HIT <PARTY NAME>
CV STARBASE <STARBASE NUMBER>"
      WRITE(I8,3300)(ISID(IQ0,IS),IQ0=1,3),(ISIDE(IQ0,MI),IQ0=1,3),
     *IBASE(MI)
3300  FORMAT(/1X,3A4,' BOARDED EAGLES HIT ',3A4,' STARBASE',I3,'-DAMAGE
     * REPORT-')

CV NEXT M-O SHIP
329   CONTINUE

CV CALCULATE STARBASE DAMAGE FROM DEFLECTOR STRENGTH, ...
      CALL GRUP2(LIRPA(DFLCB(MI)/3.,IV),MI)

CV INCREMENT KOENIG (1110) AND RESTART DUNE
      GO TO 1110

CV ======================
CV OTHER VESSELS (MIN>6)
CV ======================

CV IF VESSEL INDEX > 14: OTHER VESSELS (332)
328   IF(MIN.GT.14)GO TO 332

CV ==================================
CV VESSEL = C-O SHIP (MIN=7,8,...,14)
CV ==================================

CV SET C-O SHIP INDEX (MI) TO VESSEL INDEX-6
      MI=MIN-6

CV IF VESSEL = DOOMSDAY: DAMAGE FACTOR = 1/3
      IF(MI.EQ.7)IV=IV/3

CV LOOP OVER M-O SHIP I7 FOR 1 TO 4
      DO 333 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 333

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "<PARTY NAME> BOARDED EAGLES HIT <C-O SHIP NAME>"
      WRITE(I8,334)(ISID(IQ0,IS),IQ0=1,3),(IENM2(J,MI),J=1,4)
334   FORMAT(/1X,3A4,' BOARDED EAGLES HIT ',4A4,'-DAMAGE REPORT-')

CV NEXT M-O SHIP
333   CONTINUE

CV CALCULATE C-O SHIP DAMAGE FROM DEFLECTOR STRENGTH, ...
      CALL GRUP3(LIRPA(DFLCK(MI),IV),MI)

CV INCREMENT KOENIG (1110) AND RESTART DUNE
      GO TO 1110

CV ==================================
CV VESSEL = EAGLE (MIN=15,16,...,40)
CV ==================================

CV SET EAGLE INDEX (MI) TO VESSEL INDEX-14
332   MI=MIN-14

CV LOOP OVER M-O SHIP I7 FOR 1 TO 4
      DO 336 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 336

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "<PARTY NAME> BOARDED EAGLES DESTROYED <EAGLE NUMBER>"
      WRITE(I8,337)(ISID(IQ0,IS),IQ0=1,3),MI
337   FORMAT(/1X,3A4,' BOARDED EAGLES DESTROYED EAGLE ',I2)

CV NEXT M-O SHIP
336   CONTINUE

CV EAGLE "MI" DESTRUCTION
      CALL BOOM(MI)

CV ==================================

CV INCREMENT KOENIG (1110) AND RESTART DUNE
      GO TO 1110

CV KOENIG=4

1100  RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C TYPE-EXACT CHECKED 04/25/2000 BY: D.G.
C
C - THOLIA -
C

CV WEB ACTIONS (THOLIANS & KZINTI)

CV
CV CALLED ONLY FROM TREKG/ENEMY AND TREKG/KNUTH
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV IWEBZ  - RANGE OF KZINTI WEB
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV NN     - WEB OWNER INDEX (THOLIAN =1 / KZINTI=2)
CV IDIM   - !!! NOT A FORTRAN FUNCTION !!! WEB RANGE OF OWNER (1/2)
CV IWHE   - WEB OWNER NAMES
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV

      SUBROUTINE THOLIA
      DIMENSION IWHE(3,2),IDIM(2)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)

CV SET IWHE TO WEB OWNER NAMES AND WEB RANGE OF OWNER "1" (THOLIAN) TO 8
      DATA IWHE/'THOL','IAN ','    ','KZIN','TI  ','    '/,IDIM(1)/8/

CV SET WEB RANGE OF OWNER "2" (KZINTI) TO "IWEBZ" (RANGE OF KZINTI WEB)
      IDIM(2)=IWEBZ

CV SET WEB OWNER INDEX (NN) = I/3 (THOLIAN I=3 NN=1/ KZINTI I=6 NN=2)
      NN=I/3

CV IF WEB OWNER NN CAUGHT IN A WEB: RETURN
      IF(IWEB(NN).NE.0)GO TO 232

CV IF ?: RETURN
      IF(ISTAT.EQ.6)GO TO 232

CV IF ?: RETURN
      IF(DISTP.GT.IDIM(NN))GO TO 232

CV =============================================
CV MANAGE WEB TRAPPING OF FEDERATION PARTY VESSELS
CV =============================================

CV IF NEAREST VESSEL IS NOT A FEDERATION PARTY VESSEL:
CV MANAGE WEB TRAPPING OF KLINGON PARTY VESSELS (229)
      IF(MIN.GT.4)GO TO 229

CV ?
      IF(IWEB(3-NN).EQ.MIN)GO TO 232

CV LOOP OVER M-O SHIPS FOR 1 TO 4
      DO 228 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 228

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "THE <M-O SHIP NAME> IS TRAPPED IN A <WEB OWNER> WEB"
      WRITE(I8,1102)(INAME(IQ0,MIN),IQ0=1,3),(IWHE(IQ0,NN),IQ0=1,3)
1102  FORMAT(' THE ',3A4,' IS TRAPPED IN A ',3A4,'WEB')

CV NEXT M-O SHIP
228   CONTINUE

CV ?
      IWEB(NN)=MIN

CV RETURN
      GO TO 232

CV =============================================
CV MANAGE WEB TRAPPING OF KLINGON PARTY VESSELS
CV =============================================

CV SET IV TO C-O VESSEL INDEX
229   IV=MIN-6

CV IF IV < 1 (MIN <= 6) FEDERATION SHIP OR FEDERATION STARBASE: RETURN
      IF(IV.LT.1)GO TO 232

CV IF IV = 7 (DOOMSDAY): RETURN
      IF(IV.EQ.7)GO TO 232

CV IF IV > 8 (EAGLE): RETURN
      IF(IV.GT.8)GO TO 232

CV ELSE IV = 0, 2-6, 8 (KLINGON STARBASE, C-O SHIP OR MOONBASE)

CV ? : RETURN
      IF(IWEB(3-NN).EQ.MIN-2)GO TO 232

CV LOOP OVER M-O SHIPS FOR 1 TO 4
      DO 227 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 227

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "THE <C-O SHIP NAME> IS TRAPPED IN A <WEB OWNER> WEB"
      WRITE(I8,314)(IENM2(J,IV),J=1,4),(IWHE(IQ0,NN),IQ0=1,3)
314   FORMAT(' THE ',4A4,' IS TRAPPED IN A',3A4,'WEB')

CV NEXT M-O SHIP
227   CONTINUE

CV SET "CAUGHT IN WEB OF" FLAG TO MIN-2 (?)
      IWEB(NN)=MIN-2

232   RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C - KNUTH -
C

CV KZINTI SENSOR & STASIS FIELD

      SUBROUTINE KNUTH
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)


      KILLZ=100


      IF(IARMZ(5).EQ.0)GO TO 363


      DO 382 I7=1,4


      INVIZ(I7)=0


      IF(ICHOE(I7).NE.1)GO TO 382


      IF(DI(IENTR(I7),IENTC(I7),IKLNR(6),IKLNC(6)).GT.ICLOZ)GO TO 382


      INVIZ(I7)=1


      I8=I7+4


      WRITE(I8,383)
383   FORMAT(' THE KZINTI SHIP IS NOW WITHIN SENSOR RANGE')


382   CONTINUE


363   IF(IARMZ(3).EQ.0.OR.IWEB(2).NE.0)GO TO 364


      CALL THOLIA


364   IF(IARMZ(6).EQ.0)GO TO 1100


      IF(DISTP.GT.IABSZ)GO TO 1100


      IF(MIN.GT.14)GO TO 1100


      IF(MIN.GT.4)GO TO 367


      DO 365 I7=1,4


      IF(ICHOE(I7).EQ.0)GO TO 365


      I8=I7+4


      WRITE(I8,366)(INAME(IQ0,MIN),IQ0=1,3)
366   FORMAT(/1X,3A4,' IS WITHIN RANGE OF KZINTI STASIS FIELD')


365   CONTINUE


      PHASR(MIN)=PHASR(MIN)-ISTAZ


      DFLCT(MIN)=DFLCT(MIN)-ISTAZ/100.


      TWARP(MIN)=TWARP(MIN)-ISTAZ/1000.


      IF(PHASR(MIN).LT.0)PHASR(MIN)=0


      IF(TWARP(MIN).LT.0)TWARP(MIN)=0


      GO TO 1100


367   IF(MIN.GT.6)GO TO 368


      MI=MIN-4


      DO 369 I7=1,4


      IF(ICHOE(I7).EQ.0)GO TO 369


      I8=I7+4


      WRITE(I8,370)(ISIDE(IQ0,MI),IQ0=1,3),IBASE(MI)
370   FORMAT(/1X,3A4,' STARBASE',I3,' IS WITHIN RANGE OF KZINTI STASIS F
     *IELD')


369   CONTINUE


      DFLCB(MI)=DFLCB(MI)-ISTAZ/100.


      GO TO 1100


368   MI=MIN-6


      IF(MI.EQ.7)GO TO 1100


      DO 372 I7=1,4


      IF(ICHOE(I7).EQ.0)GO TO 372


      I8=I7+4


      WRITE(I8,373)(IENM2(J,MI),J=1,4)
373   FORMAT(/1X,4A4,' IS WITHIN RANGE OF KZINTI STASIS FIELD')


372   CONTINUE


      DFLCK(MI)=DFLCK(MI)-ISTAZ/100.


1100  RETURN
      END


C       -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C                       - BLISH -
C DG: NOTE - THIS MODULE IS DEDICATED IN MEMORY OF THE LATE JAMES BLISH
C

CV KZINTI WARSHIP ACTIONS
CV "JT" IN COMMON BLOCK ON PURPOSE !!!

      LOGICAL FUNCTION BLISH(JTK)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JT,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)


      BLISH=.FALSE.

CV INCREMENT KZINTI SPECIAL WEAPON INDEX (JTK)
360   JTK=JTK+1


      GO TO (359,356,1100),JTK

CV ===============
CV INDUCTION BEAM
CV ===============

CV IF NO INDUCTION BEAM: NEXT KZINTI SPECIAL WEAPON INDEX (360)
359   IF(IARMZ(1).EQ.0)GO TO 360

CV
      IV=INDUZ

CV LOOP OVER M-O SHIP (I7) FOR 1 TO 4
      DO 357 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 357

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE MESSAGE "KZINTI WARSHIP FIRING INDUCTION BEAM"
      WRITE(I8,358)
358   FORMAT(/' KZINTI WARSHIP FIRING INDUCTION BEAM')

CV NEXT M-O SHIP
357   CONTINUE

CV ???
      GO TO 33900

CV IF NO X-RAY LASER CANNON: NEXT KZINTI SPECIAL WEAPON INDEX (360)
356   IF(IARMZ(2).EQ.0)GO TO 360

CV
      IF(.NOT.MOLOCH(MIN))GO TO 355


      CALL PIKE(IKLNR(6),IKLNC(6),IBPSB(6))


      IF(MIN.EQ.0)GO TO 360


355   IV=IXRYZ


      DO 361 I7=1,4


      IF(ICHOE(I7).EQ.0)GO TO 361


      I8=I7+4


      WRITE(I8,362)
362   FORMAT(/' KZINTI WARSHIP FIRING X-RAY LASER CANNON')


361   CONTINUE


      GO TO 33900

CV IF NO KZINTI SPECIAL WEAPON USED: RETURN WITH "BLISH=TRUE"
1100  BLISH=.TRUE.

CV IF GOTO 33900: RETURN WITH "BLISH=FALSE"
33900 RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C              TYPE-EXACT CHECK 04/24/2000 BY: D.G.
C
C - FINNEY -
C

CV ION STORM DAMAGES TO M-O SHIPS

      SUBROUTINE FINNEY(MI)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM
      DATA FUDGE/0.700619195/

CV RESET M-O SHIP HIT BY ION STORM FLAG (ION)
      ION(MI)=0

CV LOOP OVER M-O SHIPS I7 FOR 1 TO 4
      DO 376 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 376

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I8=I7+4

CV WRITE INTRODUCTORY MESSAGE "ION STORM DAMAGE TO"
      WRITE(I8,377)(INAME(IQ0,MI),IQ0=1,3)
377   FORMAT(/' ION STORM DAMAGE TO ',3A4)

CV NEXT M-O SHIP
376   CONTINUE

CV CALCULATE RANDOM DAMAGE FACTOR IV IN RANGE 1 TO 20
      CALL RANDO(IV,1,20)

CV CALCULATE DAMAGE FACTOR IVV FROM M-O SHIP DEFLECTOR STRENTGH (DFLCT)
CV AND RANDOM DAMAGE FACTOR IV
      IVV=ALOG((101.-DFLCT(MI))*IV)/FUDGE-3.

CV CALL M-O SHIP DAMAGE ROUTINE
      CALL GRUP1(IVV,MI)

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C
C - SAURON -
C

CV M-O SHIP TAKING ITS TURN

CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV IT     - INDEX OF M-O SHIP THAT TAKES ITS TURN
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV J      - M-O SHIP LOOP COUNTER
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV
CV ======
CV STEPS
CV ======
CV 1. TELL ALL SHIPS WHOSE TURN IT IS NOT TO STANDBY
CV 2. POTENTIAL DOCKING AT STARBASE
CV 3. POTENTIAL ENGINE SHUTDOWN
CV 4. POTENTIAL ENGINE RESTART
CV 5. POTENTIAL REPAIR
CV 6. POTENTIAL NACELLES RIP OFF
CV 7. CALCULATE SPECIAL DECK DAMAGE FACTORS FOR ENTERPRISE/POTEMPKIN
CV 8. CALCULATE SPECIAL DECK DAMAGE FACTORS FOR HAVOC/CARNAGE
CV 9. POTENTIAL COIL BURNOUT/COIL REPAIR
CV

      SUBROUTINE SAURON
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /G/ZAP(4),ICOLA(4),IROWA(4),LOCK(4),ICOIL(4)
      COMMON /J/KODE(2,8),STATIC(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM

CV
      IDOK=0

CV ===============================================
CV TELL ALL SHIPS WHOSE TURN IT IS NOT TO STANDBY
CV ===============================================

CV LOOP OVER M-O SHIPS
      DO 131 J=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(J).EQ.0)GO TO 131

CV IF CURRENT M-O SHIP ID = OWNER OF M-O SHIP IN TURN
CV (DON'T TELL M-O SHIP THAT'S IN TURN TO STANDBY)
      IF(IBPSC(IT).EQ.J)GO TO 131

CV SET FORTRAN UNIT NUMBER TO M-O SHIP INDEX+4
      I=J+4

CV WRITE MESSAGE "PLEASE STANDBY ..."
      WRITE(I,132)(INAME(IQ0,IT),IQ0=1,3)
132   FORMAT(' PLEASE STANDBY WHILE THE ',3A4,' TAKES ITS TURN')

CV NEXT M-O SHIP
131   CONTINUE

CV ==============================
CV POTENTIAL DOCKING AT STARBASE
CV ==============================

CV LOOP OVER STARBASES I FOR 1 TO 2
      DO 1 I=1,2

CV
      IF(ICHOB(I).NE.1)GO TO 1

CV
      IF(IBPSS(I).NE.IS)GO TO 1

CV IF DISTANCE OF M-O SHIP TO ITS STARBASE IS >=2: SKIP DOCKING
      IF(DI(IENTR(IT),IENTC(IT),IBASR(I),IBASC(I)).GE.2)GO TO 1

CV
      IDOK=1

CV ELSE: DOCKING AT STARBASE
      CALL MCCOY

CV NEXT STARBASE
1     CONTINUE

CV ==========================
CV POTENTIAL ENGINE SHUTDOWN
CV ==========================

CV IF AVAILABLE WARP >= 0.5: SKIP ENGINE SHUTDOWN
2330  IF(TWARP(IT).GE.0.5)GO TO 422

CV IF SHIP UNMOVABLE: 423
      IF(NOMOV(IT).EQ.1)GO TO 423

CV SET SHIP UNMOVABLE AND PRINT MESSAGE
      NOMOV(IT)=1
      WRITE(L,421)
421   FORMAT(' WARP ENERGY IS UNDER 0.5 SO THE WARP ENGINES HAVE BEEN SH
     *UT DOWN'/' TO CONSERVE POWER')
      ITEMP(IT)=0

CV
      GO TO 423

CV =========================
CV POTENTIAL ENGINE RESTART
CV =========================

CV SHIP MOVABLE AGAIN
422   IF(NOMOV(IT).EQ.0)GO TO 423

CV SET SHIP MOVABLE
      NOMOV(IT)=0

CV RESET ENGINE TEMPERATURE TO 4000
      ITEMP(IT)=4000

CV
      WRITE(L,424)
424   FORMAT(' ENGINEERING HERE SIR - WE''VE ENGAGED ENGINE RESTART CYCL
     *E'/' AND SHOULD BE ABLE TO MOVE NOW')

CV =================
CV POTENTIAL REPAIR
CV =================

CV IF IGO (REPAIR POSSIBLE FLAG)= 0: SKIP REPAIR (23302)
423   IF(IGO(IT).EQ.0)GO TO 23302

CV IF CREW < 100: SKIP REPAIR (23302)
      IF(NDEAD(IT).LT.100)GO TO 23302

CV IF DOCKING FLAG SET: SKIP REPAIR (23302)
      IF(IDOK.EQ.1)GO TO 23302

CV IF NUMBER OF DAMAGED DECKS (MANUM) = 0 (NONE): REPAIR FOLLOW-UP (23303)
      IF(MANUM(IT).EQ.0)GO TO 23303

CV CALCULATE RANDOM REPAIR FACTOR I7 (1 TO 4*REPAIRABILITY FACTOR (IGO))
CV THE BIGGER I7, THE MORE REPAIR
      CALL RANDO(I7,1,4*IGO(IT))
      WRITE(L,425)
425   FORMAT(' DAMAGE CONTROL PARTIES COMMENCING REPAIRS')

CV IF NUMBER OF DAMAGED DECKS >8: SKIP REPAIR
429   IF(MANUM(IT).GT.8)GO TO 426

CV LOOP OVER M-O SHIP DECKS FOR 1 TO 33
428   DO 427 I=1,33

CV IF DECK NOT DAMAGED: NEXT DECK
      IF(MA(IT,I).EQ.0)GO TO 427

CV DECREMENT REPAIR FACTOR I7
      I7=I7-1

CV IF REPAIR FACTOR I7 < 0: REPAIR FOLLOW-UP (23303)
      IF(I7.LT.0)GO TO 23303

CV CONDUCT REPAIR
      CALL RPAIR

CV IF ALL DECKS OK: REPAIR FOLLOW-UP (23303)
      IF(MANUM(IT).EQ.0)GO TO 23303

CV NEXT DECK
427   CONTINUE

CV GO TO REPAIR FOLLOW-UP (23303)
      GO TO 23303

CV CALCULATE RANDOM DECK INDEX I
426   CALL RANDO(I,1,33)

CV IF NO DAMAGE ON DECK INDEX I, RECALCULATE I
      IF(MA(IT,I).EQ.0)GO TO 426

CV ELSE (SOME DAMAGE ON DECK INDEX I): REDUCE REPAIR FACTOR (I7) BY 1
      I7=I7-1

CV IF REPAIR FACTOR<0: REPAIR FOLLOW-UP (23303)
      IF(I7.LT.0)GO TO 23303

CV CONDUCT REPAIR ON DECK INDEX I
      CALL RPAIR

CV IF NUMBER OF DAMAMGED DECKS < 8: 426?
      IF(MANUM(IT).LT.8)GO TO 426

CV GO TO 426 ANYWAY - WHY?
      GO TO 426

CV =================
CV REPAIR FOLLOW-UP
CV =================

CV IF REPAIRABILITY FLAG (IGO) =1: SKIP RESET / UPGRADE STRENGTH VALUES
23303 IF(IGO(IT).EQ.1)GO TO 23302

CV ================================
CV RESET / UPGRADE STRENGTH VALUES
CV ================================

CV IF PHASER POWER + DEFLECTOR STRENGTH*100 + WARP POWER*1000 >= 26000:
CV SKIP RESET / UPGRADE STRENGTH VALUES
      IF(PHASR(IT)+DFLCT(IT)*100.+TWARP(IT)*1000.0.GE.26000.)GO TO 23302

CV IF PHASER POWER < 6000: INCREASE PHASER POWER BY 500
      IF(PHASR(IT).LT.6000.)PHASR(IT)=PHASR(IT)+500.

CV INCREASE DEFLECTOR STRENGTH BY 10
      DFLCT(IT)=DFLCT(IT)+10.

CV INCREASE WARP POWER BY 1
      TWARP(IT)=TWARP(IT)+1.

CV LIMIT DEFLECTOR STRENGTH TO 100
      IF(DFLCT(IT).GT.100.)DFLCT(IT)=100.

CV LIMIT WARP POWER TO 10
      IF(TWARP(IT).GT.10.)TWARP(IT)=10.

CV ===========================
CV POTENTIAL NACELLES RIP OFF
CV ===========================

CV LOOP OVER BOTH NACELLES (I)
23302 DO 405 I=1,2

CV CALCULATE AT WHICH SPEED NACELLE MIGHT RIP OFF
      HIVEL(IT,I)=10.-MA(IT,I+30)

CV TWO CONDITIONS WHICH SUPPRESS WARNING MESSAGE
      IF(MA(IT,I+30).EQ.0.OR.MA(IT,I+26).EQ.9)GO TO 405

CV PRINT WARNING MESSAGE
      WRITE(L,406)1,HIVEL(IT,I)
406   FORMAT(' ** NOTE **- NACELLE',I2,' MAY RIP OFF IF WARP SPEED EXCEE
     *DS',F6.2)

CV NEXT NACELLE
405   CONTINUE

CV PUT PORT NACELLE (29) DAMAGE INDEX INTO SPECIAL DECK DAMAGE FACTOR K(IT,4)
      K(IT,4)=MA(IT,29)

CV PUT STARPORT NACELLE (30) DAMAGE INDEX INTO
CV SPECIAL DECK DAMAGE FACTOR K(IT,5)
      K(IT,5)=MA(IT,30)

CV PUT IMPULSE ENGINE (28) DAMAGE INDEX INTO SPECIAL DECK DAMAGE FACTOR K(IT,6)
      K(IT,6)=MA(IT,28)

CV IF SHIP TYPE = HAVOC/CARNAGE (2): 144
      IF(JS.EQ.2)GO TO 144

CV ===============================================================
CV CALCULATE SPECIAL DECK DAMAGE FACTORS FOR ENTERPRISE/POTEMPKIN
CV ===============================================================

      K(IT,1)=MA(IT,23)
      K(IT,2)=MA(IT,14)
      K(IT,14)=MA(IT,3)

CV REDUCE MAP RADIUS BY DAMAGE OF STARBOARD NACELLE SUPPORT PYLON
      NOMAP(IT)=15-MA(IT,33)

CV COIL BURNOUT
      GO TO 145

CV ========================================================
CV CALCULATE SPECIAL DECK DAMAGE FACTORS FOR HAVOC/CARNAGE
CV ========================================================

144   K(IT,1)=MA(IT,13)
      K(IT,2)=MA(IT,14)
      K(IT,14)=MA(IT,29)+MA(IT,30)

CV REDUCE MAP RADIUS BY DAMAGE OF DECK 10-SECONDARY HULL-OBSERVATION LOUNGES
      NOMAP(IT)=15-MA(IT,13)

CV ===================================
CV POTENTIAL COIL BURNOUT/COIL REPAIR
CV ===================================

CV IF COIL BURNOUT ALREADY SET: RETURN (234)
145   IF(ICOIL(IT).EQ.0)GO TO 234

CV ELSE CALCULATE RANDOM COIL BURNOUT VALUE I7
CV IN RANGE 1 TO 7-IGO
      CALL RANDO(I7,1,7-IGO(IT))

CV IF RANDOM VALUE I7 > 2: COIL BURNOUT
      IF(I7.GT.2)GO TO 234

CV ELSE COIL OK
      ICOIL(IT)=0

CV
      WRITE(L,4020)
4020  FORMAT(' REPAIRS COMPLETE - PHASERS ARE NOW OPERATIVE')

234   RETURN
      END


C            -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C TYPE-EXACT CHECK 04/25/2000 BY: D.G.
C                                - MCCOY -
C -- NOV./1999 -DG: I WOULD LIKE TO DEDICATE THIS COMMENT IN MEMORY OF THE
C LATE DEFOREST KELLEY WHO PASSED AWAY ONLY SOME MONTHS AGO.  OUR THOUGHTS
C AND OUR HEARTS WILL BE WITH YOU ALWAYS.  MR. KELLEY WILL BE SADLY MISSED.
C I THINK MR. KELLEY PASSED AWAY AUG/1999 AT THE AGE OF 78

CV DOCKING & REPAIR AT STARBASE/PHASERS OK

      SUBROUTINE MCCOY
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /G/ZAP(4),ICOLA(4),IROWA(4),LOCK(4),ICOIL(4)
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)

CV
      WRITE(L,2)(INAME(IQ0,IT),IQ0=1,3),IBASE(I)
2     FORMAT(' THE ',3A4,' IS DOCKED AT STARBASE ',I2/' REPAIRS COMMENCI
     *NG-')

CV =============
CV DECK REPAIRS
CV =============

CV LOOP OVER M-O DECKS I7 FOR 1 TO 33
      DO 3 I7=1,33

CV REDUCE DECK DAMAGE INDEX BY 3
      MA(IT,I7)=MA(IT,I7)-3

CV IF DECK DAMAGE INDEX > 0: RETURN
      IF(MA(IT,I7).GT.0)GO TO 3

CV IF DECK DAMAGE INDEX = -3: DECK DAMAGE INDEX = 0
      IF(MA(IT,I7).EQ.-3)GO TO 4

CV DECREMENT NUMBER OF DAMAGED DECKS
      MANUM(IT)=MANUM(IT)-1

CV DECK DAMAGE INDEX = 0
4     MA(IT,I7)=0

CV NEXT M-O DECK
3     CONTINUE

CV IF DAMAGE TO DECK 29 = 6: INCREMENT NUMBER OF DECKS
      IF(MA(IT,29).EQ.6)MANUM(IT)=MANUM(IT)+1

CV IF DAMAGE TO DECK 30 = 6: INCREMENT NUMBER OF DECKS
      IF(MA(IT,30).EQ.6)MANUM(IT)=MANUM(IT)+1

CV IF SUM OF RESOURCES >= 26000: SKIP ENHANCING RESOURCES
      IF(PHASR(IT)+DFLCT(IT)*100.+TWARP(IT)*1000.0.GE.26000.)GOTO 5

CV ==================
CV ENHANCE RESOURCES
CV ==================

CV ELSE (SUM OF RESOURCES < 26000): ENHANCE RESOURCES

CV INCREASE DEFLECTOR BY 10.
      DFLCT(IT)=DFLCT(IT)+10.

CV IF PHASER < 6000: INCREASE PHASER BY 500.
      IF(PHASR(IT).LT.6000.)PHASR(IT)=PHASR(IT)+500.

CV INCREASE AVAILABLE WARP BY 1.
      TWARP(IT)=TWARP(IT)+1.

CV LIMIT DEFLECTOR TO 100.
      IF(DFLCT(IT).GT.100.)DFLCT(IT)=100.

CV LIMIT AVAILABLE WARP TO 10.
      IF(TWARP(IT).GT.10.)TWARP(IT)=10.

CV IF COIL NO BURNOUT: RETURN
5     IF(ICOIL(IT).EQ.0)GO TO 7

CV RESET COIL BURNOUT
      ICOIL(IT)=0

CV WRITE MESSAGE
      WRITE(L,14)
14    FORMAT(' PHASERS NOW OPERATIVE')

CV RETURN
7     RETURN
      END

C            -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C
C            -- CONVERTED TO PC BY: DAN GAHLINGER --
C
C                                - RPAIR -
C
C THIS WAS HAND-TYPED 21/APR/2000 BY: D.G.

CV DECK REPAIR ACTIONS

      SUBROUTINE RPAIR
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)

CV NO REPAIRS FOR TOTALLY DESTROYED DECKS 29 & 30
CV (PORT/STARBORD WARP DRIVE ENGINE NACELLE)
CV THIS IS FITTING FOR THE FEDERATION SHIPS ONLY
      IF(I.EQ.29.AND.MA(IT,29).EQ.9)RETURN
      IF(I.EQ.30.AND.MA(IT,30).EQ.9)RETURN

CV CALCULATE RANDOM REPAIR FACTOR (I8; 1-5)
      CALL RANDO(I8,1,5)

CV REDUCE DAMAGE BY REPAIR FACTOR I8
      MA(IT,I)=MA(IT,I)-I8

CV IF SOME DAMAGE LEFT OVER (MA>0): RETURN
      IF(MA(IT,I).GT.0)RETURN

CV IF RESULTING DAMAGE <=0: SET DAMAGE TO 0
CV (PREVENT NEGATIVE NUMBERS)
      MA(IT,I)=0

CV REDUCE NUMBER OF DAMAGED DECKS BY 1
      MANUM(IT)=MANUM(IT)-1

      RETURN
      END
