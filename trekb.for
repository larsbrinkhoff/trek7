C==========================================================
C
C TREK7   MODULE B
C CONVERTED TO PC BY: DAN GAHLINGER
C ENTIRE MODULE TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C USER COMMAND ROUTINES
C
C AREX    CANCEL  CHEKOV  DEFLOC  NODEFL  GODOT
C GOLLUM  INFO    INST    UHURA   ORWELL  BLOCH
C SCOTT   STONE   ECCLE   TRACLC  NOTRAC  VULCAN
C MRESS   SHADOW
C
C=========================================================


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C AREX -
C
CV COMMAND "COURSE"

      SUBROUTINE AREX
      LOGICAL CYRANO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(6)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /F/WARP(4),ITROW(4),ITCOL(4)

CV IF AVAILABLE WARP <> 0: SKIP "NO WARP LEFT" MESSAGE
      IF(TWARP(IT).NE.0.)GO TO 15
      WRITE(L,625)
625   FORMAT(' NO WARP LEFT - BREAK OUT THE OARS')
      RETURN

CV IF ONE OF THE TWO "CO" PARAMETERS (A/B) IS MISSING: ASK (150)
15    IF(A.EQ.0.OR.B.EQ.0)GO TO 150

CV CALCULATE WARP AND TARGET COORDINATES
      WARP(IT)=A
      ITCOL(IT)=B/100.
      ITROW(IT)=B-ITCOL(IT)*100

CV IF TARGET OUTSIDE OF 60X60
CV OR WARP > AVAILABLE WARP
CV OR WARP < 0 (JUST TO CATCH TYPOS):
CV MESSAGE AND RETURN
      IF(CYRANO(ITROW(IT),ITCOL(IT)).OR.WARP(IT).GT.TWARP(IT).OR.WARP(IT
     *).LT.0)GO TO 6581
      RETURN

CV ASK FOR WANTED WARP
150   WRITE(L,508)TWARP(IT)
508   FORMAT(' ENTER WARP FACTOR - BETWEEN 0 AND ',F10.7,': '$)
      READ(L,24,ERR=6580)WARP(IT)

CV UNUSED FORMAT, MAYBE FOR READ ABOVE?
24    FORMAT(F4.0)

CV WRITE CHOSEN WARP
CV      WRITE(L,99)WARP(IT)
CV99    FORMAT(' WARP =',F10.2)

CV IF WARP > AVAILABLE WARP OR WARP < 0:
151   IF(WARP(IT).GT.TWARP(IT).OR.WARP(IT).LT.0)GO TO 6581

CV ASK TARGET COORDINATES
      WRITE(L,506)
506   FORMAT(' ENTER TARGET COORDINATES: '$)
      READ(L,507,ERR=6580)ITCOL(IT),ITROW(IT)
507   FORMAT(2I2)

CV IF TARGET OUTSIDE OF 60X60: MESSAGE AND RETURN
      IF(CYRANO(ITCOL(IT),ITROW(IT)))GO TO 6581

658   RETURN

6580  CALL ILLDAT

6581  CALL OOPS(L)

CV SET WARP TO "0."
      WARP(IT)=0.
      GO TO 658
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C CANCEL -
C
CV COMMAND CANCEL
      SUBROUTINE CANCEL(IBORD)
      DIMENSION IGOK(5)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(6)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /G/ZAP(4),ICOLA(4),IROWA(4),LOCK(4),ICOIL(4)
      COMMON /H/ANGLE(4),RANG(4),LOCKT(4)
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)
      DATA IGOK/'T','P','B','Y','D'/

      IF(IGOL(1).EQ.'C')GO TO 67210
      IF(IGOL(1).NE.IBLK)GO TO 6720

67210 WRITE(L,6704)
6704  FORMAT(' ENTER COMMANDS YOU WISH CANCELLED (P,T,B,Y,D, H FOR
     * HELP)')
6708  READ(L,6705)(IGOL(I),I=1,6)
6705  FORMAT(6A1)

CV IF 1ST CHARACTER OF COMMAND <> H: SKIP HELP
6720  IF(IGOL(1).NE.'H')GO TO 6706

CV WRITE HELP MESSAGE
      WRITE(L,6707)
6707  FORMAT(' ENTER A STRING OF LETTERS REPRESENTING THE COMMANDS YOU W
     *ISH CANCELLED-'/' ''P'' TO CANCEL PHASER, ''T'' FOR TORPEDO/DISRUP
     *TOR'/' ''B'' FOR BOARD, ''Y'' FOR YANK, ''D'' FOR DEFLECT')
      GO TO 6708

CV LOOP OVER ALL CHARACTERS (OPUP TO 6) IN CANCEL STRING IGOL
6706  DO 6711 I7=1,6

CV LOOP OVER ALL 5 CHARACTERS IN CANCEL COMMANDS IGOK
      DO 6709 I=1,5

CV GO TO CORRESPONDING LABELS
      IF(IGOL(I7).EQ.IGOK(I))GO TO (671,6712,674,6700,6701),I

CV NEXT CHARACTER IN CANCEL COMMANDS IGOK
6709  CONTINUE

      RETURN

CV ==============
CV CANCEL PHASER
CV ==============

CV IF PHASER NOT LOCKED: NEXT ELEMENT IN CANCEL STRING
6712  IF(LOCK(IT).NE.1)GO TO 6711

CV RESET LOCK
      LOCK(IT)=0

CV RESET PHASER POWER
      PHASR(IT)=PHASR(IT)+ZAP(IT)

CV WRITE RESET MESSAGE
      WRITE(L,672)
672   FORMAT(' PHASER COMMAND CANCELLED')

CV NEXT ELEMENT IN CANCEL STRING
      GO TO 6711

CV ===============
CV CANCEL TORPEDO
CV ===============

CV IF TORPEDO NOT LOCKED: NEXT ELEMENT IN CANCEL STRING
671   IF(LOCKT(IT).NE.1)GO TO 6711

CV RESET LOCK
      LOCKT(IT)=0

CV RESET NUMBER OF TORPEDOES
      IPHOT(IT)=IPHOT(IT)+1

CV WRITE RESET MESSAGE
      WRITE(L,673)
673   FORMAT(' TORPEDO/DISRUPTOR COMMAND CANCELLED')

CV NEXT ELEMENT IN CANCEL STRING
      GO TO 6711

CV =============
CV CANCEL BOARD
CV =============

CV RESET BOARDING
674   IBORD=0

CV WRITE RESET MESSAGE
      WRITE(L,675)
675   FORMAT(' BOARD COMMAND CANCELLED')

CV NEXT ELEMENT IN CANCEL STRING
      GO TO 6711

CV ============
CV CANCEL YANK
CV ============

CV RESTORE PULL/YANK
6700  IPULL(IT)=0

CV WRITE RESET MESSAGE
      WRITE(L,6702)
6702  FORMAT(' YANK COMMAND CANCELLED')

CV NEXT ELEMENT IN CANCEL STRING
      GO TO 6711

CV ===============
CV CANCEL DEFLECT
CV ===============

CV RESET PUSH/DEFLECT
6701  IPUSH(IT)=0

CV WRITE RESET MESSAGE
      WRITE(L,6703)
6703  FORMAT(' DEFLECT COMMAND CANCELLED')

CV NEXT ELEMENT IN CANCEL STRING
6711  CONTINUE

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - CHEKOV -
C
CV TORPEDO HANDLING ROUTINE - LOCKING ON TARGET
      SUBROUTINE CHEKOV
      LOGICAL LOKI
      DIMENSION IBOLT(4,2)
      COMMON /A/IT,IS,II(2),IJ,I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /H/ANGLE(4),RANG(4),LOCKT(4)
      DATA IBOLT/'PHOT','ON T','ORPE','DOES','DISR','UPTO','R BO','LTS'/

CV IF TORPEDOES ALREADY LOCKED: RETURN
      IF(LOKI(LOCKT(IT)))RETURN

CV IF TORPEDO(ES) STILL AVAILABLE
      IF(IPHOT(IT).GT.0)GO TO 71

75    WRITE(L,72)(IBOLT(I,JS),I=1,4)
72    FORMAT(' THERE ARE NO ',4A4,' LEFT')
      RETURN

71    DISTP=ANGLE(IT)

CV MAXIMUM TORPEDO RANGE = 10
      RANG(IT)=10.

CV IF ANGLE NOT PRE-SET (A=0) IN MAIN: ASK FOR IT
      IF(A.EQ.0)GO TO 7100

CV SET ANGLE TO PRE-SET VALUE FROM MAIN
      ANGLE(IT)=A*1.0

CV SKIP INTERACTIVE ANGLE INPUT
      GO TO 711

CV WRITE NUMBER OF AVAILABLE TORPEDOES
CV AND ASK FOR ANGLE
7100  WRITE(L,73)IPHOT(IT),(IBOLT(I,IT),I=1,4)
73    FORMAT(' YOU HAVE',I3,1X,4A4/' ENTER ANGLE: ')
77    READ(L,24,ERR=130)ANGLE(IT)
24    FORMAT(F6.0)

CV DECREMENT NUMBER OF AVAILABLE TORPEDOES
711   IPHOT(IT)=IPHOT(IT)-1

CV LOCK TORPEDO ON TARGET
      LOCKT(IT)=1
      WRITE(L,3)
3     FORMAT(' WEAPON LOCKED ON TARGET')

      RETURN

130   ANGLE(IT)=DISTP
      CALL OOPS(L)
      CALL ILLDAT
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K. 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - DEFLOC
C
CV DEFLECTOR TARGET SETTING
      SUBROUTINE DEFLOC
      LOGICAL LOKI,NODEFL,CYRANO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)
      IF(LOKI(IPUSH(IT)))RETURN
      IF(NODEFL(IT))RETURN
      IF(A.EQ.0.OR.B.EQ.0)GO TO 61
      PUSH(IT)=A
      IPUSHC(IT)=B/100.
      IPUSHR(IT)=B-IPUSHC(IT)*100.
      GO TO 62
61    WRITE(L,21)DISTP
21    FORMAT(' RANGE OF BEAM IS',F4.0,' UNITS'/' ENTER TARGET COORDINATE
     *S: '$)
      A=0
      READ(L,22,ERR=250)IPUSHC(IT),IPUSHR(IT)
22    FORMAT(2I2)
62    IF(CYRANO(IPUSHR(IT),IPUSHC(IT)))GO TO 23
33    NA=MAP(IPUSHR(IT),IPUSHC(IT))
      IF(NA.EQ.IGLE)GO TO 267

CV IF NA IS A MINE OF IT: 267
      IF(NA.EQ.IM(IT))GO TO 267
      GO TO 330
267   IF(A.NE.0)GO TO 63
      WRITE(L,53)
53    FORMAT(' ENTER DISTANCE YOU WISH TO PUSH OBJECT: '$)
      READ(L,29,ERR=250)PUSH(IT)
29    FORMAT(F5.0)
63    WRITE(L,56)PUSH(IT)
56    FORMAT(' THIS WILL USE ',F11.7,' UNITS OF DEFLECTOR SHIELD
     * ENERGY')
      GO TO 57
330   IF(A.NE.0)GO TO 57
      WRITE(L,34)
34    FORMAT(' ENTER THE AMOUNT OF DEFLECTOR SHIELD ENERGY YOU WISH TO U
     *SE'/' (ENTER A NEGATIVE NUMBER FOR HELP)')
      READ(L,29,ERR=250)PUSH(IT)
57    IF(PUSH(IT).EQ.0)GO TO 23
      IF(PUSH(IT).GT.DFLCT(IT))GO TO 264
      IF(PUSH(IT).GT.0)GO TO 35
      WRITE(L,36)
36    FORMAT(' IF THE TARGET IS A SHIP-'/' THE AMOUNT OF ENERGY (E) ENTE
     *RED WILL SLOW THE ATTACKING ENEMY'/' SHIP''S SPEED BY A FACTOR OF
     * 2**(-E/5)'/' EG. 5 WILL CUT THE SHIP''S SPEED IN HALF, '/' 10 WILL
     * SLOW IT TO 1/4 SPEED, 15 WILL SLOW IT TO 1/8 SPEED' //' IF THE TA
     *RGET IS AN EAGLE OR MINE-'/' 1 UNIT OF DEFLECTOR SHIELD ENERGY IS
     * NEEDED FOR EACH UNIT THIS OBJECT'/' IS PUSHED AWAY'//' IF THE TAR
     *GET IS EMPTY SPACE OR AN ION STORM- NOTHING WILL HAPPEN'//' IF THE
     * TARGET IS A STAR, DOOMSDAY MACHINE OR MOONBASE ALPHA-'/' NOTHING
     * WILL HAPPEN AS THE TARGET IS TOO MASSIVE FOR THE DEFLECTORS'/' TO
     * HANDLE')
      PUSH(IT)=0.
      IF(A.NE.0)GO TO 61
      GO TO 33
35    IPUSH(IT)=1
      WRITE(L,37)
37    FORMAT(' DEFLECTORS LOCKED ON TARGET')
      RETURN
264   WRITE(L,265)
265   FORMAT(' NOT ENOUGH ENERGY TO LOCK BEAM')
      GO TO 23
250   CALL ILLDAT
23    CALL OOPS(L)
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - NODEFL -
C
CV CHECK NAVIGATIONAL DEFLECTOR DESTRUCTION (TRUE = DESTROYED)
      LOGICAL FUNCTION NODEFL(IT)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)
      NODEFL=.FALSE.

CV NAVIGATIONAL DEFLECTOR DECK ID = 32 ON ENTERPRISE AND POTEMPKIN
      I7=32

CV IF SHIP INDEX > 2 (HAVOC OR CARNAGE) : I7 (DEFLECTOR DECK ID) = 8
      IF(IT.GT.2)I7=8

CV CALCULATE DEFLECTOR DISTANCE FROM DEFLECTOR DECK DAMAGE
6     DISTP=9-MA(IT,I7)
      IF(MA(IT,I7).EQ.0)DISTP=10.

CV IF DEFLECTOR NOT DESTROYED (<>9): RETURN
      IF(MA(IT,I7).NE.9)RETURN

CV MESSAGE DEFLECTOR DESTROYED
4     WRITE(L,5)
5     FORMAT(' NAVIGATIONAL DEFLECTOR HAS BEEN DESTROYED')

      IPUSH(IT)=0

CV SET NAVIGATIONAL DEFLECTOR DESTRUCTION FLAG
      NODEFL=.TRUE.
      RETURN
      END


C       -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C               - GODOT -
C
C- LET'S GO
C- WE CAN'T
C- WHY NOT?
C- WE'RE WAITING FOR
CV
CV DRAWING THE MAP
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV NOMAP  - MAXIMUM MAP RADIUS OF CALLER M-O SHIP
CV IENTR  - CALLER M-O SHIP ROW POSITION
CV IENTC  - CALLER M-O SHIP COL POSITION
CV IT     - CALLER M-O SHIP ID
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV NC     - CONTENT OF MAP POSITION
CV DISTP  - WANTED MAP RADIUS
CV N      - RESULT MAP RADIUS
CV I7     - MINIMUM MAP ROW
CV I8     - MAXIMUM MAP ROW
CV IV     - MINIMUM MAP COL
CV IVV    - MAXIMUM MAP COL
CV J      - COL COUNTER / ROW COUNTER
CV JTK    - MAP POSITION (CONSECUTIVE NUMBERING ACROSS ALL POSITIONS)
CV LEN2   - SYMBOL AT MAP POSITION JTK
CV LEN    - HEADER/FOOTER COL CONTENT
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV

      SUBROUTINE GODOT
      DIMENSION LEN(61),LEN2(61)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)

CV IF RADIUS GIVEN IN COMBINED COMMAND = 0 (INVALID): QUERY
      IF(A.EQ.0)GO TO 5171

CV RADIUS VALID: JUMP OVER QUERY
      DISTP=A
      GO TO 51702

CV QUERY RADIUS
5171  WRITE(L,121)NOMAP(IT)
121   FORMAT(' ENTER RADIUS OF MAP - BETWEEN 1 AND',I3,': '$)
      READ(L,24,ERR=5170)DISTP
24    FORMAT(F5.0)

CV SET N TO MAP RADIUS
51702 N=DISTP

CV IF QUERIED RADIUS VALUE VALID: CALCULATE AND PRINT MAP
      IF(N.GE.1.AND.N.LE.NOMAP(IT))GO TO 550

CV ELSE (QUERIED RADIUS VALUE INVALID): ERROR HANDLING AND RETURN
51701 CALL OOPS(L)
      RETURN

CV QUERIED RADIUS ANSWER INVALID (EG. LETTER): ERROR HANDLING AND RETURN
5170  CALL ILLDAT
      GO TO 51701

CV ========================
CV CALCULATE AND PRINT MAP
CV ========================

CV MINIMUM MAP ROW (I7) = CALLER ROW POSITION - RADIUS
550   I7=IENTR(IT)-N

CV MAXIMUM MAP ROW (I8) = CALLER ROW POSITION + RADIUS
      I8=IENTR(IT)+N

CV MINIMUM MAP COL (IV) = CALLER COL POSITION - RADIUS
      IV=IENTC(IT)-N

CV MAXIMUM MAP COL (IVV) = CALLER COL POSITION + RADIUS
      IVV=IENTC(IT)+N

CV SET MINIMUM OF MINIMUM MAP ROW (I7) TO 1
      IF(I7.LT.1)I7=1

CV =============
CV FULL MAP MOD
CV =============
CV      I7=1

CV SET MAXIMUM OF MAXIMUM MAP ROW (I8) TO 60
      IF(I8.GT.60)I8=60

CV =============
CV FULL MAP MOD
CV =============
CV      I8=60


CV SET MINIMUM OF MINIMUM MAP COL (IV) TO 1
      IF(IV.LT.1)IV=1

CV =============
CV FULL MAP MOD
CV =============
CV      IV=1

CV SET MAXIMUM OF MAXIMUM MAP COL (IVV) TO 60
      IF(IVV.GT.60)IVV=60

CV =============
CV FULL MAP MOD
CV =============
CV      IVV=60

CV ================================
CV WRITE COL COORDINATES ABOVE MAP
CV ================================

CV LOOP OVER COLS (J) FOR IV TO IVV
      DO 552 J=IV,IVV

552   LEN(J-IV+1)=J-(J/10)*10
      WRITE(L,5175)(LEN(J),J=1,IVV-IV+1)
5175  FORMAT(3X,61I1)

CV ============================================
CV WRITE MAP WITH ROW COORDINATES LEFT & RIGHT
CV ============================================

CV ==============================
CV OUTER LOOP OVER ROWS J (5173)
CV ==============================

CV LOOP OVER ROWS (J) FOR 1 TO I8-I7+1
      DO 5173 J=1,I8-I7+1

CV IV1 = MAP ROW - J + 1
CV (EG. I8=30 => IV1=30,29,28,27,28,27,26,25,24,23,22,21,20,19, ...)
      IV1=I8-J+1

CV JTK = IV/10
CV (EG. => JTK =3,2,2,2,2,2,2,2,2,2,2,1, ...)
      JTK=IV1/10

CV ENCODE NUMBER JTK TO CHARACTER NB
      ENCODE(1,5174,NB)JTK

CV JTK=IV1-JTK*10
CV (EG. 0,9,8,7,6,5,4,3,2,1,0,9, ...)
      JTK=IV1-JTK*10

CV ENCODE NUMBER JTK TO CHARACTER NA
      ENCODE(1,5174,NA)JTK

CV FORMAT FOR ENCODING
5174  FORMAT(I1)
      JTK=0

CV =============================
CV INNER LOOP OVER COLS I (100)
CV =============================

CV LOOP OVER C0L (I) RANGE MINIMUM COL (IV) TO MAXIMUM COL (IVV)
      DO 100 I=IV,IVV

CV INCREMENT JTK
      JTK=JTK+1

CV PUT INTO NC WHAT IS IN MAP AT COL IV1 / ROW I
      NC=MAP(IV1,I)

CV SAVE WHAT IS IN MAP(IV1,I) FOR LATER USE
      LEN2(JTK)=NC

CV IF MAP CONTENT (NC) IS ILBK (BLANK=EMPTY): NEXT MAP COLUMN I (100)
      IF(NC.EQ.IBLK)GO TO 100

CV IF MAP CONTENT (NC) IS III (ION STORM): NEXT MAP COLUMN I (100)
      IF(NC.EQ.III)GO TO 100

CV IF MAP CONTENT (NC) IS ISTAR (STAR/STARBASE): NEXT MAP COLUMN I (100)
      IF(NC.EQ.ISTAR)GO TO 100

CV IF MAP CONTENT (NC) IS NOT IENM1(2) (ROMULAN): SPECIAL HANDLINGS_1
      IF(NC.NE.IENM1(2))GO TO 101

CV IF ROMULAN SHIP IS INVISIBLE: NEXT MAP COLUMN I (100)
CV (DON'T SHOW HIDDEN ROMULANS))
      IF(INVIS(IT).EQ.1)GO TO 100

CV ELSE: MAP COLUMN IS BLANK
      LEN2(JTK)=IBLK

CV IF ROMULAN IN ION STORM: MAP CONTENT = ION STORM (III)
CV (DON'T SHOW HIDDEN ROMULANS))
      IF(ISPOK(2).EQ.1)LEN2(JTK)=III

CV NEXT MAP COLUMN I (100)
      GO TO 100

CV ============================
CV ROMULAN SPECIAL HANDLINGS_1
CV ============================

CV IF OBJECT AT POSITION IS NOT KZINTI: MINE HANDLINGS (102)
101   IF(NC.NE.IENM1(6))GO TO 102

CV =========================
CV KZINTI SPECIAL HANDLINGS
CV =========================

CV IF KZINTI SHIP IS NOT CLOAKED: NEXT MAP COLUMN I (100)
      IF(IARMZ(5).NE.1)GO TO 100

CV IF ROW OF KZINTI <> ROW OF MAP POSITION: NEXT MAP COLUMN I (100)
      IF(IKLNR(6).NE.J)GO TO 100

CV IF COL OF KZINTI <> COL OF MAP POSITION: NEXT MAP COLUMN I (100)
      IF(IKLNC(6).NE.I)GO TO 100

CV IF INVISIBILITY FLAG OF ? = 1: NEXT MAP COLUMN I (100)
      IF(INVIZ(IT).EQ.1)GO TO 100

CV DRAW BLANK IN MAP AT JTK

      LEN2(JTK)=IBLK

CV IF KZINTI IN ION STORM SET ION STORM SYMBOL IN ITS PLACE
      IF(ISPOK(6).EQ.1)LEN2(JTK)=III

CV NEXT I
      GO TO 100

CV ===============
CV MINE HANDLINGS
CV ===============

CV IM(X) = MINE OF X: NEXT MAP COLUMN I (100)
102   IF(NC.LT.IM(1))GO TO 100
      IF(NC.GT.IM(4))GO TO 100

CV IF MINE IS "FOREIGN": DRAW BLANK INTO MAP (103)
      IF(NC.NE.IM(IT))GO TO 103

CV DRAW "OWN" MINE IN MAP AT JTK
      LEN2(JTK)='M'

CV NEXT I
      GO TO 100

CV ===============

CV DRAW BLANK IN MAP AT JTK
103   LEN2(JTK)=IBLK

CV NEXT I
100   CONTINUE

CV ====================================
CV END OF INNER LOOP OVER COLS I (100)
CV ====================================

CV WRITE LEFT ROW AXIS, LEN2(I) [MAP ROW SYBOLS], RIGHT ROW AXIS TENNER,ONER
5173  WRITE(L,5172)IV1,(LEN2(I),I=1,JTK),NB,NA

CV =====================================
CV END OF OUTER LOOP OVER ROWS J (5173)
CV =====================================

5172  FORMAT(I3,63A1)

CV =====================================
CV WRITE COL COORDINATES UNDERNEATH MAP
CV =====================================

      WRITE(L,5175)(LEN(J),J=1,IVV-IV+1)

      RETURN
      END

C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C   -- CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C   - GOLLUM -
C
C- MY PRECIOUS

CV PRINT EAGLE POSTIONS (5 IN A ROW)
      SUBROUTINE GOLLUM
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /U/LAUNCH,NUMOUT,NUME(2)
      IF(NUMOUT.EQ.0)RETURN
      WRITE(L,302)
302   FORMAT(' EAGLES-'/)

CV SET EAGLE PRINT POSITION (I7) = 0
      I7=0

CV LOOP OVER EAGLES FOR 1 TO LAUNCH
      DO 301 I=1,LAUNCH

CV IF EAGLE AT ROW "0" (NO LONGER IN GAME): SKIP PRINTING POSITION
      IF(IGLER(I).EQ.0)GO TO 301

CV NEXT PRINT POSITION
      I7=I7+1

CV PRINT EAGLE POSITION
      WRITE(L,303)I,IGLEC(I),IGLER(I)
303   FORMAT('+',I2,' - (',I2,',',I2,')  '$)

CV IF PRINT POSITION <> 5: NEXT EAGLE
      IF(I7.NE.5)GO TO 301

CV IF PRINT POSITION = 5: RESET PRINT POSITION TO 0
      I7=0

CV PRINT NEW LINE
      WRITE(L,304)
304   FORMAT(/' '$)

CV NEXT EAGLE
301   CONTINUE

CV PRINT NEW LINE
      WRITE(L,304)

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C
C                       - INFO
C
CV GET INFO ("IN" COMMAND)
      SUBROUTINE INFO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NGSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)
      WRITE(L,587)(INAME(IQ0,IT),IQ0=1,3),DFLCT(IT),IENTC(IT),IENTR(IT),
     *NDEAD(IT)
587   FORMAT(23X,'DEFLECTORS POSITION'/1X,3A4,13X,F5.1,4X,'(',I2,',',I2,
     *')',5X,'CREW REMAINING=',I4)

CV LOOP OVER ALL MANUALLY OPERATED SHIPS
      DO 770 N=1,4

CV IF NOT IN GAME (0) OR HAVOC (3): GOTO 770 (NO WRITE)
      IF(ICHOE(N).EQ.0.OR.ICHOE(N).EQ.3)GO TO 770
      IF(N.EQ.IT)GO TO 770

CV WRITE SHIP, AVAILABLE DEFLECTOR STRENGTH AND POSITION
      WRITE(L,771)(INAME(IQ0,N),IQ0=1,3),DFLCT(N),IENTC(N),IENTR(N)
771   FORMAT(1X,3A4,13X,F5.1,4X,'(',I2,',',I2,')')

770   CONTINUE

CV LOOP OVER ALL BASES
      DO 772 N=1,2

CV IF NOT IN GAME: GOTO 772 (NO WRITE)
      IF(ICHOB(N).EQ.0)GO TO 772
      WRITE(L,773)(ISIDE(IQ0,N),IQ0=1,3),IBASE(N),DFLCB(N),IBASC(N),
     *IBASR(N)
773   FORMAT(1X,3A4,' STARBASE ',I2,1X,F5.1,4X,'(',I2,',',I2,')')

772   CONTINUE

CV LOOP OVER ALL COMPUTER OPERATED ENEMIES
      DO 760 N=1,8

CV IF NOT IN GAME: GOTO 760 (NO WRITE)
      IF(ICHOS(N).EQ.0)GO TO 760

CV WRITE ENEMY INFORMATIONS
      IF(N.NE.6.AND.IBPSB(N).EQ.IS)GO TO 761
      GO TO (761,762,761,761,763,764,763,761),N

761   WRITE(L,755)(IENM2(I,N),I=1,4),DFLCK(N),IKLNC(N),IKLNR(N)
755   FORMAT(1X,4A4,7X,F5.1,4X,'(',I2,',',I2,')')
      GO TO 760

762   IF(INVIS(IT).EQ.1)GO TO 761
      WRITE(L,757)(IENM2(I,2),I=1,4)
757   FORMAT(1X,4A4,7X,'UNKNOWN  UNKNOWN')
      GO TO 760

763   WRITE(L,756)(IENM2(I,N),I=1,4),IKLNC(N),IKLNR(N)
756   FORMAT(1X,4A4,7X,'UNKNOWN  (',I2,',',I2,')')
      GO TO 760

764   IF(IARMZ(4).EQ.1.AND.IMAGZ.GT.0)GO TO 91


      IF(IARMZ(5).EQ.1.AND.INVIZ(IT).EQ.0)GO TO 91


      WRITE(L,755)(IENM2(I,6),I=1,4),DFLCK(6),IKLNC(6),IKLNR(6)
      GO TO 760

91    WRITE(L,757)(IENM2(I,6),I=1,4)
760   CONTINUE
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C IIIII N   N SSSSS TTTTT
C   I   NN  N S       T
C   I   N N N SSSSS   T
C   I   N  NN     S   T
C IIIII N   N SSSSS   T
C

CV COMMAND "HELP"
      SUBROUTINE INST
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)

      WRITE(L,3)
3     FORMAT(' HERE ARE YOUR COMMANDS TO THE SHIP. '/' TYPE IN THE WORD O
     *R ITS FIRST TWO LETTERS TO INITIATE THE DESIRED ACTION'/
     *' HELP - PRINT THESE INSTRUCTIONS'/
     *' TRANSFER - TRANSFER OF ENERGY FROM ONE SYSTEM TO ANOTHER'/
     *' PHASER LOCK PHASER BANKS ON TARGET'/
     *' TORPEDO LOCK PHOTON TORPEDOES/DISRUPTORS ON TARGET'/
     *' MINE - SET THE RANGE AT WHICH A TORPEDO BECOMES A MINE'/
     *' YANK - LOCK TRACTOR BEAM ON TARGET'/
     *' DEFLECT - LOCK DEFLECTOR BEAM ON TARGET'/
     *' RESET - RESET PHASERS + TORPEDOES/DISRUPTORS ONTO TARGETS PREVIO
     *USLY SET')
      WRITE(L,5)
5     FORMAT(' BOARD - PREPARE TO TRANSPORT A BOARDING PARTY'/
     *' CANCEL - CANCELS PHASER, TORPEDO, BOARD, YANK AND/OR DEFLECT COM
     *MANDS'/
     *' COURSE - SET A NEW COURSE'/
     *' GO - MOVE AND FIRE WEAPONRY IN ANY SEQUENCE')
      WRITE(L,4)
4     FORMAT(' MAP - PRINT A MAP OF YOUR SURROUNDINGS'/
     *' INFO - TYPE OUT STATUS OF SHIPS IN THE GAME'/
     *' EAGLE   TYPE OUT POSITION OF EAGLES'/
     *' SPOCK   GIVES PROBABILITIES AND DISTANCES'/
     *' CREW - GIVES NUMBER OF CREW ON YOUR SHIP AND ON BOARDED SHIPS'/
     *' DAMAGE - ALL DECKS REPORT DAMAGE FACTORS'/
     *' ENEMY   ADD ANOTHER ENEMY SHIP TO THE GAME'/
     *' RADIO   USE SUBSPACE RADIO TO CONTACT OTHER MANUALLY-OPERATED
     * SHIPS'/
     *' ATTACK - STARBASE OR BOARDED VESSELS ATTACK'/
     *' CEASE   STARBASE OR BOARDED VESSELS STOP ATTACKING'/
     *' NOSTOP - DO NOT STOP THE GAME WHEN ALL THE ENEMIES HAVE BEEN DEF
     *EATED'/
     *' SURRENDER - SURRENDER'/)
      WRITE(L,800)
800   FORMAT('  IF YOU WISH TO ENTER THE COORDINATES (60,60) OR (1, 1),
     *'/' TYPE 6060 OR 0101.')
      WRITE(L,801)
801   FORMAT( ' THE RANGE OF A PHOTON TORPEDO OR DISRUPTOR BOLT IS 10 UNI
     *TS'/' NOTE ALSO THAT THERE IS A MAXIMUM AMOUNT OF DAMAGE THAT CAN
     * BE DONE'/' WHEN A PHASER BEAM IS FIRED. THUS YOU ARE ADVISED NOT
     * TO WASTE YOUR ENERGY'/' BY FIRING TOO MUCH AT A TIME. I ADVISE AB
     *OUT 500 UNITS PER SHOT')
32    WRITE(L,33)
33    FORMAT(' IF WE ENTER AN ION STORM WE WILL RECEIVE DAMAGE'/' AND O
     *UR SPEED WILL BE CUT IN HALF')
      WRITE(L,38)
38    FORMAT(' ENEMY STRATEGY AND STRENGTH-')
34    WRITE(L,37)
35    FORMAT(' KLINGONS ALWAYS ATTACK'/' ROMULANS RETREAT WHEN YOUR SHIE
     *LDS EXCEED THEIRS BY 20,'/' AND DO NOT TRAVEL ON A DIRECT COURSE
     * TO OR FROM YOU WHEN ATTACKING'/' OR RETREATING'/' THOLIANS ALW
     *AYS ATTACK, BUT HALT WHEN THEY ARE 8 UNITS AWAY AND USE THEIR WEB',
     */' GORNS RETREAT UNTIL THEIR SHIELDS ARE GREATER THAN YOURS BY 25',
     */' ORIONS MAKE CLOSE PASSES AT US AND FIRE WHEN THEY''RE CLOSEST'/
     *' THE DOOMSDAY MACHINE EATS STARS, MINES, AND US'/' MOONBASE ALPHA
     * LAUNCHES 5 WAVES OF 5 EAGLES')
36    WRITE(L,35)
37    FORMAT(' ENEMY',12X,'WARP FIREPOWER'//' KLINGONS',9X,'7-9 450-110
     *0'/' ROMULANS',9X,'7-9 300-1000'/' THOLIANS',9X,'5-10 600-900'/'
     *GORNS',12X,'11  350-900'/' ORIONS',11X,'12    500-1100'/' KZINTI
     *',11X,'PLAYER PROGRAMMABLE'/' DOOMSDAY MACHINE ??? 1000-2000'/' M
     *OONBASE ALPHA  0    500'/' EAGLES',11X,'2.9  200'//' FIREPOWER IS
     * GIVEN IN EQUIVALENT ENTERPRISE PHASER UNITS')
      RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - UHURA -
C
CV COMMAND "RADIO"
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV A      - YANK STRENGTH WANTED
CV IT     - ACTING M-O SHIP INDEX
CV L      -
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV NA     - ENTERED COMMUNICATIONS COMMAND (T,R,J,D,HELP,STOP)
CV JCOMS  - LIST OF AVAILABLE COMMUNICATIONS COMMAND
CV          JCOMS/'T','R','J','D','H'/
CV I7     - AVAILABLE COMMUNICATIONS COMMAND INDEX
CV I7     - CHOSEN COMMUNICATIONS COMMAND INDEX
CV DISTP  - PHASER ENERGY FOR JAMMING SUBSPACE, REQUESTED
CV DISTP  - JAMMING SUBSPACE BOOSTING FACTOR, GAINED
CV MIN    - RADIO ENCRYPTION CODE
CV HARLAN - INTERFERENCE LEVEL
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV
      SUBROUTINE UHURA
      INTEGER JCOMS(5)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,MES(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /J/KODE(2,8),STATIC(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM
      DATA JCOMS/'T','R','J','D','H'/

CV ASK FOR REQUESTED COMMUNICATIONS COMMAND, READ COMMAND (NA)
      WRITE(L,1)
1     FORMAT(' ENTER COMMUNICATIONS COMMAND (T,R,J,D,HELP,
     *STOP): '$)
43    READ(L,14)NA

CV LOOP OVER AVAILABLE COMMANDS (I7) FOR 1 TO 5
      DO 40 I7=1,5

CV IF REQUESTED COMMAND = LOOPED AVAILABLE COMMAND:
CV GO TO CORRESPONDING LABELS
      IF(NA.EQ.JCOMS(I7))GO TO (4,4,6,7,41),I7

CV I7 STORES THE INDEX OF THE REQUESTED COMMAND

CV NEXT AVAILABLE COMMAND
40    CONTINUE

CV "STOP" COMMAND AND ALL UNKNOWN COMMANDS GO HERE
      RETURN

CV ==============
CV HELP HANDLING
CV ==============

41    WRITE(L,42)
42    FORMAT(' ENTER ''T'' FOR SHIP-TO-SHIP TRANSMISSION'/' ''R'' FOR SH
     *IP-TO-SHIP RECEPTION'/' ''J'' TO JAM SUBSPACE FREQUENCIES'/' ''D''
     * TO ACTIVATE DISTRESS SIGNAL')
      GO TO 43

CV ILLEGAL ENTRIES GO HERE
200   CALL ILLDAT
      GO TO 20

CV =============================
CV D - DISTRESS SIGNAL HANDLING
CV =============================

CV LOOP OVER M-O SHIPS (I) FOR 1 TO 4
7     DO 8 I=1,4

CV IF LOOPED M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I).EQ.0)GO TO 8

CV IF LOOPED M-O SHIP IS CURRENT M-O SHIP (IT): NEXT M-O SHIP
      IF(I.EQ.IT)GO TO 8

CV ELSE: LOOPED M-O SHIP IS TO BE INFORMED ABOUT DISTRESS SIGNAL

CV CALCULATE LOOPED M-O SHIP FORTRAN UNIT NUMBER
      I7=I+4

CV INFORM LOOPED M-O SHIP ABOUT DISTRESS SIGNAL
      WRITE(I7,9)(INAME(IQ0,IT),IQ0=1,3)
9     FORMAT(' WE ARE RECEIVING A DISTRESS SIGNAL FROM THE ',3A4)

CV NEXT M-O SHIP
8     CONTINUE

CV CONFIRM DISTRESS SIGNAL SENT, RETURN
      WRITE(L,10)
10    FORMAT(' DISTRESS SIGNAL TRANSMITTED')
      RETURN

CV =====================
CV J - JAMMING HANDLING
CV =====================

CV ASK FOR PHASER ENERGY FOR JAMMING SUBSPACE (DISTP), READ
6     WRITE(L,11)
11    FORMAT(' ENTER PHASER ENERGY YOU WISH TO EXPEND JAMMING SUBSPACE C
     *OMMUNICATIONS')
      READ(L,12,ERR=200)DISTP
12    FORMAT(F7.0)

CV IF REQUESTED PHASER ENERGY > AVAILABLE PHASER ENERGY
CV OR RECLAIMED JAMMING > SET JAMMING SET:
CV ERROR MESSAGE, RETURN
      IF(DISTP.GT.PHASR(IT).OR.DISTP.LT.-STATIC(IT))GO TO 20

CV ADD REQUESTED JAMMING TO SET JAMMING
      STATIC(IT)=STATIC(IT)+DISTP

CV REDUCE AVAILABLE PHASER ENERGY BY AMOUNT USED OR
CV INCREASE AVAILABLE PHASER ENERGY BY AMOUNT RECLAIMED
      PHASR(IT)=PHASR(IT)-DISTP

CV RESULTING JAMMING FACTOR = SET JAMMING / 5
      DISTP=STATIC(IT)/5.

CV SET MINIMUM RESULTING JAMMING FACTOR TO 1
      IF(DISTP.LT.1.)DISTP=1.

      WRITE(L,13)DISTP
13    FORMAT(' THIS WILL BOOST SUBSPACE INTERFERENCE LEVELS BY A MAXIMUM
     * OF ',F6.1,' TIMES NORMAL')
      RETURN

CV ====================================
CV T - TRANSMIT / R - RECEIVE HANDLING
CV ====================================

4     WRITE(L,5)
5     FORMAT(' ENTER SHIP YOU WISH TO CONTACT (E,P,H,C): '$)
      READ(L,14)NA
14    FORMAT(A1)

CV LOOP OVER M-O SHIPS (I) FOR 1 TO 4
      DO 15 I=1,4

CV IF ADDRESSED SHIP = M-O SHIP: SKIP TO ADDRESSED M-O SHIP FOUND (16)
      IF(NA.EQ.IEE(I))GO TO 16

CV NEXT M-O SHIP
15    CONTINUE

CV ADDRESSED M-O SHIP NOT FOUND, ERROR MESSAGE, RETURN
20    CALL OOPS(L)
      RETURN

CV ADDRESSED M-O SHIP FOUND

CV IF ADDRESSED M-O SHIP FOUND <> CURRENT M-O SHIP:
CV SKIP ERROR MESSAGE (18)
16    IF(I.NE.IT)GO TO 18

CV ELSE: ERROR MESSAGE, RETURN
      WRITE(L,19)
19    FORMAT(' YOU''RE TALKING TO YOURSELF !?!')
      GO TO 20

CV IF ADDRESSED M-O SHIP NOT IN GAME: ERROR MESSAGE, RETURN
18    IF(ICHOE(I).NE.1)GO TO 20

CV SET SUBSPACE INTERFERENCE LEVEL TO 1
      AJUST=1.

CV LOOP OVER SET JAMMINGS OF M-O SHIPS (IV) FOR 1 TO 4
      DO 21 IV=1,4

CV IF SET JAMMING OF ACTING M-O SHIP IS 0:
CV SKIP SUBSPACE INTERFERENCE LEVEL CALCULATION FROM SET JAMMING (STATIC)
      IF(STATIC(IT).EQ.0)GO TO 21

CV CALCULATE SUBSPACE INTERFERENCE LEVEL MULTIPLICATOR "DISTP"
CV FROM:
CV - SET JAMMING (STATIC) OF JAMMING SHIPS
CV - DISTANCE BETWEEN JAMMING AND ADDRESSED SHIPS

      DISTP=STATIC(IV)/1000.*(200.-DI(IENTR(IV),IENTC(IV),IENTR(IT),IENT
     *C(IT))-DI(IENTR(IV),IENTC(IV),IENTR(I),IENTC(I)))

CV SET MINIMUM DISTP TO 1
      IF(DISTP.LT.1.)DISTP=1.

CV SUBSPACE INTERFERENCE LEVEL MULTIPLIED WITH DISTP
      AJUST=AJUST*DISTP

21    CONTINUE

CV CALCULATE INFLUENCE OF ION STORM (ISPOT) ON INTERFERENCE LEVEL
      AJUST=AJUST*DI(IENTR(I),IENTC(I),IENTR(IT),IENTC(IT))*(ISPOT(IT)+1
     *)*(ISPOT(I)+1)*2.5

CV IF DOOMSDAY MACHINE IN GAME OR INTERFERENCE LEVEL (AJUST) > 100:
CV AJUST = 100 (MAXIMUM INTERFERENCE)
      IF(ICHOS(7).EQ.1.OR.AJUST.GT.100.)AJUST=100.

CV WRITE INTERFERENCE LEVEL, ASK FOR PHASER ENERGY TO BE USED (DISTP)
23    WRITE(L,22)AJUST
22    FORMAT(' SUBSPACE INTERFERENCE LEVEL=',F6.2,'% -ENTER PHASER ENERG
     *Y TO BE USED: '$)
      READ(L,12,ERR=200)DISTP


      IF(DISTP.GT.PHASR(IT).OR.DISTP.LE.0.)GO TO 20


      HARLAN=AJUST*AJUST/(5.0*DISTP)


      IF(HARLAN.GT.AJUST)HARLAN=AJUST

CV WRITE INTERFERENCE LEVEL, ASK FOR CODE (MIN)
      WRITE(L,24)HARLAN
24    FORMAT(' INTERFERENCE LEVEL NOW=',F6.2,'% -ENTER CODE (0=HAILING F
     *REQ) TO 8,STOP): '$)
      READ(L,2,ERR=200)MIN
2     FORMAT(I1)

CV REDUCE AVAILABLE PHASER ENERGY BY AMOUNT USED
      PHASR(IT)=PHASR(IT)-DISTP

CV IF CODE < 0 OR CODE > 8: ERROR MESSAGE, RETURN
      IF(MIN.LT.0.OR.MIN.GT.8)GO TO 20

CV IF CODE = 0 OR PARTY = ALLY: SKIP ERROR MESSAGE, RETURN (38)
      IF(MIN.EQ.0.OR.IS.EQ.(IBPSC(I)+1)/2)GO TO 38

CV ELSE: ERROR MESSAGE, RETURN
      WRITE(L,39)
39    FORMAT(' BUT THE OTHER SHIP WON''T BE ABLE TO UNDERSTAND YOU!')
      GO TO 20

CV =====
CV SEND
CV =====

CV IF COMMAND = "RECEIVE": SKIP TO ASK ADDRESSED SENDER TO SEND (25)
38    IF(I7.EQ.2)GO TO 25

CV ASK FOR MESSAGE TO SEND
      WRITE(L,26)
26    FORMAT(' ENTER YOUR MESSAGE (80 CHARACTERS MAX.)')

CV SET READER FORTRAN UNIT NUMBER TO ACTIVE M-O SHIP
      I8=L

CV GO TO MESSAGE READ (27)
      GO TO 27

CV ========
CV RECEIVE
CV ========

CV SET READER FORTRAN UNIT NUMBER TO ADDRESSED SENDER M-O SHIP
25    I8=IBPSC(I)+4

CV ASK ADDRESSED SENDER TO SEND
      WRITE(I8,28)(INAME(IQ0,IT),IQ0=1,3)
28    FORMAT( ' ENTER ANY MESSAGE YOU HAVE FOR THE ',3A4,' (80 CHARACTERS
     * MAX.)')

CV ==============================
CV SEND & RECEIVE COMMON ACTIONS
CV ==============================

27    READ(I8,29)MES
29    FORMAT(80A1)

CV ================
CV PROCESS MESSAGE
CV ================

CV ================================================
CV CORRUPT MESSAGE ACCORDING TO INTERFERENCE LEVEL
CV ================================================

CV NUMBER OF CHARACTERS TO CORRUPT (N) = 80% OF INTERFERENCE LEVEL
      N=HARLAN*0.8

CV LIMIT NUMBER OF CHARACTERS TO CORRUPT (N) TO RANGE 1-150
      IF(N.LT.1)N=1
      IF(N.GT.150)N=150

CV LOOP OVER CHARACTERS (IV) IN RANGE 1 TO NUMBER OF CHARACTERS TO CORRUPT
      DO 32 IV=1,N

CV CALCULATE RANDOM ASCII-NUMBER (JTK) IN RANGE 32 TO 93
      CALL RANDO(JTK,32,93)

CV DOUBLE RANDOM ASCII-NUMBER (JTK) (WHY???) DISABLED UNTIL FURTHER NOTICE
CV      JTK=JTK*2

CV CALCULATE RANDOM MESSAGE CHARACTER INDEX (ISTAT) IN RANGE 1 TO 80
      CALL RANDO(ISTAT,1,80)

CV DECODE 5 DIGITS OF RANDOM ASCII-NUMBER (JTK)
CV INTO MESSAGE CHARACTER AT RANDOM INDEX ISTAT
      DECODE(5,320,JTK)MES(ISTAT)
320   FORMAT(A5)

CV NEXT CHARACTER (IV)
32    CONTINUE

CV =============
CV SEND/RECEIVE
CV =============

CV IF COMMAND "RECEIVE": WRITE MESSAGE TO ACTIVE M-O SHIP (33)
      IF(I7.EQ.2)GO TO 33

CV =====
CV SEND
CV =====

CV CALCULATE FORTRAN UNIT NUMBER OF ADDRESSED M-O SHIP
      I8=IBPSC(I)+4

CV WRITE MESSAGE TO ADDRESSED M-O SHIP
      WRITE(I8,34)(INAME(IQ0,IT),IQ0=1,3),MES
34    FORMAT(' MESSAGE FROM THE ',3A4/1X,80A1)
      GO TO 35

CV ========
CV RECEIVE
CV ========

CV WRITE MESSAGE TO ACTIVE M-O SHIP
33    WRITE(L,34)(INAME(IQ0,I),IQ0=1,3),MES

CV ====================================
CV SEE WHICH OTHER M-O SHIPS, NEITHER:
CV - NOT IN GAME
CV - ACTIVE
CV - ADDRESSED
CV WILL GET THE MESSAGE BY BROKEN CODE
CV OR BECCAUSE IT IS NOT ENCRYPTED (0)
CV ====================================

CV LOOP OVER M-O SHIPS (JTK) IN RANGE 1 TO 4
35    DO 36 JTK=1,4

CV IF LOOPED M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(JTK).NE.1)GO TO 36

CV IF LOOPED M-O SHIP = ACTIVE M-O SHIP: NEXT M-O SHIP
      IF(JTK.EQ.IT)GO TO 36

CV IF LOOPED M-O SHIP = ADDRESSED M-O SHIP: NEXT M-O SHIP
      IF(JTK.EQ.I)GO TO 36

CV IF CODE=0 (NOT ENCRYPTED): 37
      IF(MIN.EQ.0)GO TO 37

CV IF OPPONENT PARTY = ... : 37
      IF(IS.EQ.(IBPSC(JTK)+1)/2)GO TO 37

CV IF OPPONENT CODE IS BROKEN: SKIP ... (37)
      IF(KODE(IS,MIN).EQ.1)GO TO 37

CV CALCULATE RANDOM ??? (IV) IN RANGE 1 TO 10
      CALL RANDO(IV,1,10)

CV IF IV IS >1 : SKIP MESSAGE INTERCEPTION (90% PROBABLITY),
CV NEXT M-O SHIP
      IF(IV.GT.1)GO TO 36

CV ELSE: SET OPPONENT CODE FLAG TO "BROKEN"
      KODE(IS,MIN)=1

CV SENDER (I8) = ACTIVE M-O SHIP (IT)
37    I8=IT

CV RECEIVER (ISTAT) = ADDRESSED M-O SHIP (I)
      ISTAT=I

CV IF COMMAND = "SEND": 370
      IF(I7.EQ.1)GO TO 370

CV ELSE: COMMAND = "RECEIVE"

CV SENDER (I8) = ADDRESSED M-O SHIP (IT)
      I8=I

CV RECEIVER ID (ISTAT) = ACTIVE M-O SHIP (IT)
      ISTAT=IT

CV CALCULATE FORTRAN UNIT NUMBER OF OPPONENT
370   N=IBPSC(JTK)+4

      WRITE(N,380)(INAME(IQ0,I8),IQ0=1,3),(INAME(IQ0,ISTAT),IQ0=1,3),MES
380   FORMAT(' WE HAVE INTERCEPTED AND DECODED THE FOLLOWING MESSAGE'/
     *' FROM THE ',3A4,' TO THE ',3A4/1X,80A1)

CV NEXT M-O SHIP (JTK)
36    CONTINUE
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - ORWELL -
C

CV BOARDING COMMAND
      SUBROUTINE ORWELL(IBORD,NUM,IROW,ICOL)
      LOGICAL CYRANO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(6)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)

CV SET OPPONENT PARTY INDEX (JTK) TO DOOMSDAY ? (7)
      JTK=7

CV IF SHIP TYPE = 2 (HAVOC/CARNAGE): XXX (JTK) = 26
      IF(JS.EQ.2)JTK=26

CV PUT DAMAGE FACTOR OF TRANSPORTERS DECK INTO "I7"
      I7=MA(IT,JTK)+1

CV IF DAMAGE FACTOR OF TRANSPORTERS DECK = 1:
CV SKIP WRITE WARNING MESSAGE "... A NUMBER OF YOUR PARTY MAY NOT SURVIVE ..."
      IF(I7.EQ.1)GO TO 15

CV WRITE WARNING MESSAGE "... A NUMBER OF YOUR PARTY MAY NOT SURVIVE ..."
      WRITE(L,20)I7
20    FORMAT(' THE DECK CONTAINING THE TRANSPORTERS HAS RECEIVED'/
     *' DAMAGE FACTOR',I3,'. IF THIS IS VERY LARGE,  A NUMBER OF'/
     *' YOUR PARTY MAY NOT SURVIVE THE TELEPORTATION.')

CV IF ANY OF THE COMMAND PARAMETERS A AND B IS EMPTY:
CV ASK FOR BOTH COMMAND PARAMETERS
15    IF(A.EQ.0.OR.B.EQ.0)GO TO 12

CV CALCULATE BOARDING PARAMTERS FROM COMMAND PARAMETERS A AND B
      NUM=A
      ICOL=B/100
      IROW=B-ICOL*100

CV GO TO CHECK TARGET POSITION (13)
      GO TO 13

CV ASK/READ "NUMBER OF CREW"
12    WRITE(L,1)
1     FORMAT(' BOARDING PARTY PREPARATION - ENTER NUMBER OF CREW'/
     *' TO BE TRANSPORTED DOWN (ENTER A NEGATIVE AMOUNT IF CREW IS TO BE
     * BEAMED UP)')
      READ(L,4,ERR=14)NUM
4     FORMAT(I)

CV ASK/READ "TARGET POSITION"
      WRITE(L,8)
8     FORMAT(' ENTER CO-ORDINATES OF TARGET')
      READ(L,9,ERR=14)ICOL,IROW
9     FORMAT(2I2)

CV IF TARGET POSITION OUT OF 60X60: ERROR, RETURN
13    IF(CYRANO(IROW,ICOL))GO TO 10

CV SET BOARDING FLAG "IBORD" TO "BOARD" (1)
      IBORD=1
      RETURN

CV ERROR MESSAGE & RETURN
14    CALL ILLDAT
10    CALL OOPS(L)
5     RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C BLOCH -
C
C- I HAVE THE HEART OF A CHILD
C- (I KEEP IT IN A JAR ON MY DESK)

CV RE-LOCK WEAPONS ON TARGET
      SUBROUTINE BLOCH
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /G/ZAP(4),ICOLA(4),IROWA(4),LOCK(4),ICOIL(4)
      COMMON /H/ANGLE(4),RANG(4),LOCKT(4)

      IF(LOCK(IT).NE.0)GO TO 901

      IF(ICOIL(IT).EQ.1)GO TO 908

      IF(PHASR(IT)-ZAP(IT).LT.0)GO TO 902

CV LOCK PHASER ON TARGET
      LOCK(IT)=1

CV DECREASE PHASER ENERGY BY ZAP(IT) = AMOUNT USED???
      PHASR(IT)=PHASR(IT)-ZAP(IT)

      WRITE(L,903)
903   FORMAT(' PHASERS RE-LOCKED ON TARGET')
      GO TO 901

902   WRITE(L,904)
904   FORMAT('-NOT ENOUGH ENERGY TO RE-LOCK PHASERS')
      GO TO 901

908   WRITE(L,909)
909   FORMAT(' MAIN COIL BURNOUT - PHASERS UNDER REPAIR')

901   IF(LOCKT(IT).NE.0)RETURN

      IF(IPHOT(IT).LE.0)GO TO 905
      LOCKT(IT)=1
      IPHOT(IT)=IPHOT(IT)-1

      IF(JS.EQ.1)GO TO 900

      WRITE(L,910)
910   FORMAT(' DISRUPIOR BOLTS RE-LOCKED ON TARGET')
      RETURN

900   WRITE(L,906)
906   FORMAT(' PHOTON TORPEDOES RE-LOCKED ON TARGET')
      RETURN

905   IF(JS.EQ.1)GO TO 911

      WRITE(L,912)
912   FORMAT(' NO DISRUPTOR BOLTS LEFT')
      RETURN

911   WRITE(L,907)
907   FORMAT(' NO PHOTON TORPEDOES LEFT')
      RETURN
      END


C       -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K7
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C       SSSS   CCCC  OOO  TTTTT TTTTT
C       S     C     O   O   T     T
C        SSS  C     O   O   T     T
C           S C     O   O   T     T
C       SSSS   SSSS  OOO    T     T

CV TRANSFER COMMAND
      SUBROUTINE SCOTT
      INTEGER TRANS(8)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      DATA TRANS/'PW','WP','WD','DW','PD','DP','TD','DD'/

625   WRITE(L,600)DFLCT(IT),PHASR(IT),TWARP(IT),IPHOT(IT)
600   FORMAT(' DEFLECTORS=',F11.7,', PHASERS=',F13.7,', WARP=',F10.7,
     *', TORPS=',I3)

6320  IF(DFLCT(IT).LT.0)DFLCT(IT)=0
632   WRITE(L,6331)
6331  FORMAT(' ENTER PW,WP,WD,DW,PD,DP,TD,DD,HELP,STOP: '$)
      ZAP=0.
      READ(L,92,ERR=6461)NA,ZAP
92    FORMAT(A2,1X,F)

      IF(NA.EQ.'HE')GO TO 651

      IF(NA.EQ.'ST')GO TO 6

      IF(NA.EQ.'**')GO TO 700

      IF(NA.EQ.'??')GO TO 625

627   DO 636 I=1,8
      IF(TRANS(I).EQ.NA)GO TO 635

636   CONTINUE
      GO TO 646

6461  CALL ILLDAT

      IF(NA.EQ.'HE')GO TO 651

      IF(NA.EQ.'ST')GO TO 6
      GO TO 646

635   IF(ZAP.NE.0)GO TO 628
      WRITE(L,634)
634   FORMAT(' TYPE IN AMOUNT YOU WISH TO TRANSFER: '$)
660   READ(L,24,ERR=6461)ZAP
24    FORMAT(F8.0)

628   IF(ZAP.LT.0.AND.I.NE.8)GO TO 646
      GO TO (637,638,639,640,641,642,643,6601),I

646   CALL OOPS(L)
6     RETURN

637   IF(ZAP.GT.PHASR(IT))GO TO 646
      ZAP=ZAP/1000.
      IF(TWARP(IT)+ZAP.GT.10.)ZAP=10.-TWARP(IT)
      TWARP(IT)=TWARP(IT)+ZAP
      PHASR(IT)=PHASR(IT)-1000.*ZAP
      GO TO 6320

638   IF(ZAP.GT.TWARP(IT))GO TO 646
      TWARP(IT)=TWARP(IT)-ZAP
      PHASR(IT)=PHASR(IT)+ZAP*1000.
      GO TO 6320

639   IF(ZAP.GT.TWARP(IT))GO TO 646
      ZAP=ZAP*10
      IF(DFLCT(IT)+ZAP.GT.100.)ZAP=100.-DFLCT(IT)
      DFLCT(IT)=DFLCT(IT)+ZAP
      TWARP(IT)=TWARP(IT)-ZAP/10.
      GO TO 6320

640   IF(ZAP.GT.DFLCT(IT))GO TO 646
      ZAP=ZAP/10.
      IF(TWARP(IT)+ZAP.GT.10.)ZAP=10.-TWARP(IT)
      TWARP(IT)=TWARP(IT)+ZAP
      DFLCT(IT)=DFLCT(IT)-ZAP*10.
      GO TO 6320

641   IF(ZAP.GT.PHASR(IT))GO TO 646
      ZAP=ZAP/100.
      IF(DFLCT(IT)+ZAP.GT.100.)ZAP=100.-DFLCT(IT)
      DFLCT(IT)=DFLCT(IT)+ZAP
      PHASR(IT)=PHASR(IT)-ZAP*100.
      GO TO 6320

642   IF(ZAP.GT.DFLCT(IT))GO TO 646
      DFLCT(IT)=DFLCT(IT)-ZAP
      PHASR(IT)=PHASR(IT)+ZAP*100.
      GO TO 6320

643   IF(ZAP.GT.FLOAT(IPHOT(IT)))GO TO 646
      IF(DFLCT(IT)+6.*ZAP.GT.100.)ZAP=IFIX((100.-DFLCT(IT))/6.)
      DFLCT(IT)=DFLCT(IT)+6.*ZAP
      IPHOT(IT)=IPHOT(IT)-IFIX(ZAP)
      GO TO 6320

651   WRITE(L,650)
650   FORMAT(' TYPE IN 2 LETTERS (A2) - 1ST LETTER IS THE SYSTEM YOU WIS
     *H TO TRANSFER ENERGY FROM'/' AND THE 2ND LETTER IS WHERE YOU WISH
     * TO TRANSFER IT TO'/' (WARP ENGINES (W) , PHASER BANKS (P), TORPEDO /DIS
     *RUPTOR BANKS (T) DEFLECTOR SHIELDS(D))'/' (PW,WP,WD,DW,PD,DP,TD'/)
38    WRITE(L,39)
39    FORMAT(' 1 WARP = 10 DEFLECTOR SHIELD UNITS = 1000 PHASER UNITS'/
     *' 1 PHOTON TORPEDO = 6 DEFLECTOR SHIELD UNITS')
      WRITE(L,6500)
6500  FORMAT(' THE ''DD'' COMMAND TRANSFERS DEFLECTOR SHIELD ENERGY BETW
     *EEN SHIPS'/' AS LONG AS YOU ARE WITHIN ONE UNIT OF EACH OTHER. '/
     *' WHEN ASKED TO TYPE IN THE AMOUNT OF ENERGY, TYPE A POSITIVE NUMB
     *ER'/' TO GIVE THE OTHER SHIP THAT AMOUNT OF ENERGY FROM YOUR DEFLE
     *CTORS. '/' TYPE A NEGATIVE NUMBER TO TAKE THAT AMOUNT OF ENERGY FRO
     *M'/' THE OTHER SHIP AND PUT IT IN YOUR DEFLECTORS (YOU CAN ONLY TA
     *KE'/' ENERGY FROM A BOARDED SHIP). '/' YOU''LL ALSO BE ASKED TO ENT
     *ER THE LETTER OF THE SHIP YOU WISH'/' TO TRANSFER ENERGY WITH - TY
     *PE ''K'' FOR KLINGON, ''R'' FOR ROMULAN'/' ''Z'' FOR KZINTI, ETC.'
     *//' IF YOU TYPE ''**'', YOU CAN TRANSFER ENERGY, PERSONNEL AND TOR
     *PEDOES WITH STARBASE')
      GO TO 632

6601  WRITE(L,661)
661   FORMAT( ' ENTER LETTER OF SHIP YOU WISH TO TRANSFER ENERGY
     * WITH: '$)
      READ(L,93)NA
93    FORMAT(A1)

      DO 662 I=1,8

      IF(IENM1(I).EQ.NA)GO TO 663

662   CONTINUE
      GO TO 6460

663   IF(ICHOS(I).EQ.0)GO TO 646

      IF(DI(IKLNC(I),IKLNR(I),IENTC(IT),IENTR(IT)).LT.2.)GO TO 665

672   WRITE(L,664)
664   FORMAT(' SHIP OUT OF RANGE')
      GO TO 6320

665   IF(ZAP.LT.0)GO TO 666

      IF(ZAP.GT.DFLCT(IT))GO TO 646

      IF(DFLCK(I)+ZAP.GT.100.)ZAP=100.-DFLCK(I)

667   DFLCK(I)=DFLCK(I)+ZAP

678   DFLCT(IT)=DFLCT(IT)-ZAP
      GO TO 6320

666   IF(IBPSB(I).NE.IS)GO TO 646

      IF(DFLCK(I)+ZAP.LT.0)GO TO 646

      IF(DFLCT(IT)-ZAP.GT.100.)ZAP=DFLCT(IT)-100.
      GO TO 667

6460  DO 670 I=1,4

      IF(IEE(I).EQ.NA)GO TO 671

670   CONTINUE

      GO TO 646

671   IF(ICHOE(I).EQ.0.OR.ICHOE(I).EQ.3)GO TO 646

      IF(DI(IENTR(I),IENTC(I),IENTR(IT),IENTC(IT)).GE.2.)GO TO 672

      IF(ZAP.LT.0)GO TO 676

      IF(ZAP.GT.DFLCT(IT))GO TO 646

      IF(DFLCT(I)+ZAP.GT.100.)ZAP=100.-DFLCT(I)

677   DFLCT(I)=DFLCT(I)+ZAP
      GO TO 678

676   IF((IBPSC(I)+1)/2.NE.IS)GO TO 646

      IF(ICHOE(I).EQ.1)GO TO 646

      IF(DFLCT(I)+ZAP.LT.0)GO TO 646

      IF(DFLCT(IT)-ZAP.GT.100.)ZAP=DFLCT(IT)-100.
      GO TO 677

700   DO 701 I=1,2

      IF(ICHOB(I).EQ.0)GO TO 701

      IF(IBPSS(I).NE.IS)GO TO 701

      IF(DI(IENTR(IT),IENTC(IT),IBASR(I),IBASC(I)).GE.2.)GO TO 701

      CALL STONE
      GO TO 6320

701   CONTINUE

      WRITE(L,702)
702   FORMAT(' WE ARE NOT DOCKED AT OUR STARBASE')
      GO TO 6320
      END


C - DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - STONE -
C

CV EXCHANGE OF CREW AND EQUIPMENT / WEAPONS WITH STARBASE
      SUBROUTINE STONE
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /B/NDEAB(2),IPHOB(2),IONB(2),IGOB(2),IFIB(2)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)

7     WRITE(L,5)NDEAB(I),NDEAD(IT)
5     FORMAT( ' TYPING A NEGATIVE NUMBER TO THE NEXT 3 QUESTIONS WILL CAU
     *SE THOSE THINGS TO BE'/' TRANSFERRED FROM YOU TO THE STARBASE'/' W
     *E HAVE',I5,' PERSONNEL, YOU HAVE ',I4,/' HOW MANY DO YOU WISH TO R
     *EINFORCE YOUR SHIP? '$)
      IV=1
      READ(L,6,ERR=13)I7
6     FORMAT(I)

      IF(I7.GT.NDEAB(I).OR.I7.GT.NDEAD(IT))GO TO 7
      NDEAD(IT)=NDEAD(IT)+I7
      NDEAB(I)=NDEAB(I)-I7

      IF(NDEAB(I).GT.0)ICHOB(I)=1
10    WRITE(L,8)DFLCB(I),DFLCT(IT)
8     FORMAT(' OUR DEFLECTORS=',F11.7,', YOUR DEFLECTORS=',F11.7/' BY HO
     *W MUCH DO YOU WISH TO BOOST YOUR SHIELDS? '$)
      IV=2
      READ(L,9,ERR=13)DISTP
9     FORMAT(F7.0)

      IF(DISTP.GT.DFLCB(I).OR.DISTP.GT.DFLCT(IT))GO TO 10

      IF(DFLCT(IT)+DISTP.GT.100.)DISTP=100.-DFLCT(IT)

      IF(DFLCB(I)-DISTP.GT.300.)DISTP=DFLCB(I)-300.
      DFLCT(IT)=DFLCT(IT)+DISTP
      DFLCB(I)=DFLCB(I)-DISTP

12    WRITE(L,11)IPHOB(I),IPHOT(IT)
11    FORMAT(' WE HAVE ',I2,' PHOTON TORPEDOES/DISRUPTOR BOLTS, YOU HAVE
     *',I3/' HOW MANY DO YOU WISH? '$)
      IV=3
      READ(L,6,ERR=13)I7

      IF(I7.GT.IPHOB(I).OR.I7.GT.IPHOT(IT))GO TO 12
      IPHOT(IT)=IPHOT(IT)+I7
      IPHOB(I)=IPHOB(I)-I7

1     CONTINUE

      RETURN

13    CALL ILLDAT
      GO TO (7,10,12),IV
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - ECCLE -
C

CV REQUEST FOR A NEW COMPUTER-CONTROLLED ENEMY
      SUBROUTINE ECCLE(NANU)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LL2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /S/IBPOB(8),IBPOE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)

CV ENEMY REQUEST ALREADY BEEN VETOED: MESSAGE AND RETURN
      IF(NANU.EQ.1)GO TO 720

CV MESSAGE
      WRITE(L,705)
705   FORMAT(' PLEASE STANDBY......')

CV ==================================
CV ASK OTHER M-O SHIPS FOR AGREEMENT
CV ==================================

CV LOOP OVER ALL M-O SHIPS (I) FOR 1 TO 4
      DO 704 I=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP (704)
      IF(ICHOE(I).NE.1)GO TO 704

CV IF M-O SHIP = INVOKING SHIP (IT): NEXT M-O SHIP (704)
      IF(I.EQ.IT)GO TO 704

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      N=IBPSC(I)+4

CV ASK FOR AGREEMENT, READ ANSWER (NA)
      WRITE(N,703)
703   FORMAT(' A REQUEST HAS BEEN MADE FOR A NEW COMPUTER-CONTROLLED ENE
     *MY. DO YOU AGREE?')
      READ(N,702)NA
702   FORMAT(A1)

CV IF NEW ENEMY DENIED: INFORM OTHERS AND RETURN
      IF(NA.NE.'Y')GO TO 701

CV NEXT M-O SHIP
704   CONTINUE

CV =================================
CV ASK FOR AND PROCESS WISHED ENEMY
CV =================================

CV ASK FOR WISHED ENEMY, READ ANSWER (NA)
      WRITE(L,716)
716   FORMAT(' ENTER THE LETTER STANDING FOR THE ENEMY YOU WISH IN THE G
     *AME'/' (''K'' FOR KLINGON, ETC. ) ENTER A ''?'' IF YOU WISH AN ENE
     *MY CHOSEN AT RANDOM')
      READ(L,702)NA

CV LOOP OVER C-O SHIPS (I) FOR 1 TO 8
      DO 717 I=1,8

CV DATA IENM1/'K','R','T','G','O','Z','D','A'/

CV IF CHOSEN ENEMY SHIP (NA) = IN AVAILABLE ENEMY SHIPS:
CV PROCESS ENEMY (718)
      IF(NA.EQ.IENM1(I))GO TO 718

CV NEXT C-O SHIP
717   CONTINUE

CV =====================
CV PREPARE RANDOM ENEMY
CV =====================

CV CHOSEN ENEMY SHORTCUT (NA) = NOT IN AVAILABLE ENEMIES
CV => PREPARE RANDOM ENEMY

CV GET NUMBER OF ENEMIES (EXECEPT FOR DOOMSDAY MACHINE)
7070  I7=0
      DO 706 I=1,7
706   I7=I7+ICHOS(I)

CV ALL ENEMIES ALREADY IN THE GAME: MESSAGE AND RETURN
      IF(I7.GE.6)GO TO 712

CV GET RANDOM NUMBER FROM 1-7, BUT NOT 6 (KZINTI)
707   CALL RANDO(I,1,7)
      IF(I.EQ.6)GO TO 707

CV =================================
CV PROCESS ENEMY (WISHED OR RANDOM)
CV =================================

CV IF C-O SHIP ALREADY IN GAME: 7070
718   IF(ICHOS(I).EQ.1)GO TO 7070

CV CALCLUATE RANDOM C-O SHIP POSITION
708   CALL RANDO(IKLNR(I),2,59)
      CALL RANDO(IKLNC(I),2,59)

CV WHAT IS IN THE CALCULATED POSITION?
      NA=MAP(IKLNR(I),IKLNC(I))

CV IF POSTION IS NOT EMPTY AND NOT AN ION STORM: REPEAT CALCULATION
CV => ANOTHER OBJECT IS IN THIS PLACE!
      IF(NA.NE.IBLK.AND.NA.NE.III)GO TO 708

CV IF NEW ENEMY IS NOT A MOONBASE GOTO 600
      IF(I.NE.8)GO TO 600

CV IF CALCULATED POSITION IS AN ION STORM: REPEAT CALCULATION
      IF(NA.EQ.III)GO TO 708

CV IF NO MORE EAGLES OUT: GOTO 600
      IF(NUMOUT.EQ.0)GO TO 600

CV ONE OR MORE EAGLES STILL OUT: INFO MESSAGE AND RETURN
      WRITE(L,601)
601   FORMAT(' YOU MUST GET RID OF ALL EAGLES BEFORE YOU CAN'/
     *'    FIGHT ANOTHER MOONBASE')
      RETURN

CV PREPARE NEW ENEMY VESSEL INDEX "I"
600   ICHOS(I)=1
      DFLCK(I)=100.
      IONK(I)=0
      ISPOK(I)=0
      IBPSB(I)=0

CV IF NEW ENEMY IS NOT DOOMSDAY: VESSEL HAS NO STARBASE
      IF(I.NE.7)IBPOB(I)=0
      IGOCO(I)=1
      JTK=1

CV IF NEW ENEMY IS NOT KZINTI: SKIP SPECIAL KZINTI PREPARATIONS (719)
      IF(I.NE.6)GO TO 719

CV ============================
CV SPECIAL KZINTI PREPARATIONS
CV ============================

      CALL KZIN

      CALL NIVEN

      GO TO 710

CV IF NEW ENEMY IS NOT MOONBASE: SKIP SPECIAL MOONBASE PREPARATIONS (709)
719   IF(I.NE.8)GO TO 709

CV ==============================
CV SPECIAL MOONBASE PREPARATIONS
CV ==============================

      DFLCK(8)=70.
      LAUNCH=0

CV HOW DOES THIS MAKE SENSE WHEN INSTRUCTION ABOVE SETS LAUNCH TO "0"???
      IF(LAUNCH.GE.25)GO TO 709

CV MANAGE EAGLES
      CALL LEGUIN(0,0)

CV SET ION STORM FLAGS
709   CALL ASIMOV(NA,I)

CV ========================
CV FINISH CREATE NEW ENEMY
CV ========================

CV PUT NEW ENEMY INTO MAP
      MAP(IKLNR(I),IKLNC(I))=IENM1(I)

CV ANNOUNCE NEW ENEMY
710   WRITE(L,711)(IENM2(IV,I),IV=1,4)
711   FORMAT(' REINFORCEMENTS ARE IN THE FORM OF A SHINY NEW'//10X,4A4/)
      I3=I3+1

CV NO LONGER A SHAKEDOWN CRUISE, RETURN
      ISHAK=0
      IF(NOSTOP.EQ.2)NOSTOP=1
      RETURN

CV MESSAGE: ALL ENEMIES ALREADY IN THE GAME
712   WRITE(L,714)
714   FORMAT(' WHY DON''T YOU TRY FIGHTING THE ENEMIES YOU ALREADY
     * HAVE?')
      RETURN

CV INFORM ABOUT ENEMY VETO
701   DO 700 N=1,4
      IF(ICHOE(N).NE.1)GO TO 700
      IV=N+4
      WRITE(IV,715)
715   FORMAT(' REQUEST FOR ENEMY VETOED')
700   CONTINUE
      NANU=1
      RETURN


720   WRITE(L,721)
721   FORMAT(' REQUEST HAS ALREADY BEEN VETOED - TRY AGAIN NEXT TURN')
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7 -
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C        - TRACLC
C

CV YANK COMMAND
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV A      - YANK STRENGTH WANTED
CV B      - TARGET COORDINATES
CV DISTP  - RANGE OF YANK BEAM
CV IM     - INDEX OF M-O SHIP SHORTCUT (E/P/H/C) (IM/'1','2','3','4')
CV IT     - ACTING M-O SHIP INDEX
CV IPULL  - YANK BEAM LOCKED FLAG
CV L      - ACTING M-O SHIP FORTRAN UNIT
CV MAP    - MAP MATRIX
CV NOTRAC - TRACTOR BEAM OK FLAG
CV TWARP  - AVAILABLE WARP ENERGY
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV -- NOT YET DOCUMENTED --
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV IPULL  - YANK BEAM LOCKED FLAG
CV PULL   - YANK STRENGTH SET (IN WARP)
CV IPULLC - YANK TARGET COL
CV IPULLR - YANK TARGET ROW
CV
      SUBROUTINE TRACLC
      LOGICAL LOKI,NOTRAC,CYRANO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAKNOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISURR(4)
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)

CV IF YANK BEAM ALREADY LOCKED: RETURN
      IF(LOKI(IPULL(IT)))RETURN


      IF(NOTRAC(IT))RETURN

CV IF NEITHER PULL STRENGTH (A) NOR TARGET (B) GIVEN: ASK (58)
      IF(A.EQ.0.OR.B.EQ.0)GO TO 58

CV ELSE: BOTH VALUES GIVEN

CV CALCULATE PULL VALUES FROM A AND B
      PULL(IT)=A
      IPULLC(IT)=B/100.
      IPULLR(IT)=B-IPULLC(IT)*100.

CV SKIP ASKING FOR TARGET
      GO TO 59

CV EITHER PULL STRENGTH (A) OR TARGET (B) NOT GIVEN

CV WRITE RANGE OF YANK BEAM AND ASK FOR TARGET COORDINATES
58    WRITE(L,21)DISTP
21    FORMAT(' RANGE OF BEAM IS', F4.0, ' UNITS'/' ENTER TARGET COORD
     *INATES:  '$)

CV SET A=0 IN CASE B=0, BUT NOT A=0,
CV SO THAT A WILL BE ASKED IF B=0 REGARDLESS OF THE VALUE OF A
      A=0

CV READ TARGET COORDINATES
      READ(L,22,ERR=250)IPULLC(IT),IPULLR(IT)
22    FORMAT(2I2)

CV IF TARGET COORDINATES OUT OF GAME AREA (60X60):
CV ERROR MESSAGE; RETURN
59    IF(CYRANO(IPULLR(IT),IPULLC(IT)))GO TO 23

CV GET MAP CONTENT AT PULL TARGET COORDINATES INTO NA
26    NA=MAP(IPULLR(IT),IPULLC(IT))

CV ===============================================
CV PROCEDURE FOR PULLABLE OBJECTS (EAGLES, MINES)
CV ===============================================

CV IF TARGET = EAGLE: 261
      IF(NA.EQ.IGLE)GO TO 261

CV IF TARGET = (OWN?) MINE ?
      IF(NA.EQ.IM(IT))GO TO 261

CV ELSE: NOT A PULLABLE OBJECT: PROCEDURE FOR NOT PULLABLE OBJECTS (260)
      GO TO 260

CV IF WARP ENERGY GIVEN: SKIP ASK FOR DISTANCE TO PULL
261   IF(A.NE.0)GO TO 60

CV ASK FOR DISTANCE TO PULL
      WRITE(L,50)
50    FORMAT(' ENTER DISTANCE YOU WISH TO PULL OBJECT: '$)
      READ(L,29,ERR=250)PULL(IT)

CV CALCULATE AND WRITE NEEDED WARP ENERGY (1/10TH OF DISTANCE)
60    PULL(IT)=PULL(IT)/10.
      WRITE(L,51)PULL(IT)
51    FORMAT(' THIS WILL USE ',F10.7,' UNITS OF WARP ENERGY')

CV PROCEED WITH PROCESS WANTED WARP ENERGY (52)
      GO TO 52

CV ===================================
CV PROCEDURE FOR NOT PULLABLE OBJECTS
CV ===================================

CV IF WARP ENERGY TO USE (A) IS ALREADY GIVEN: SKIP ASKING FOR IT (52)
260   IF(A.NE.0)GO TO 52

CV ASK FOR WARP ENERGY TO USE
      WRITE(L,28)
28    FORMAT(' ENTER THE AMOUNT OF WARP ENERGY YOU WISH TO USE'/' (ENTER
     *  A NEGATIVE NUMBER FOR HELP)')
      READ(L,29,ERR=250)PULL(IT)
29    FORMAT(F5.0)

CV ==================================
CV PROCESS WANTED/NEEDED WARP ENERGY
CV ==================================

CV IF WARP ENERGY = 0: WRITE INVALID VALUE MESSAGE; RETURN
52    IF(PULL(IT).EQ.0)GO TO 23

CV IF WARP ENERGY > AVAILABLE WARP ENERGY:
CV WRITE "NOT ENOUGH ENERGY ..." MESSAGE; RETURN
      IF(PULL(IT).GT.TWARP(IT))GO TO 264

CV IF WARP ENERGY > 0: LOCK TRACTOR (40)
      IF(PULL(IT).GT.0)GO TO 40

CV ELSE (WARP ENERGY < 0): WRITE HELP
      WRITE(L,41)
41    FORMAT(/' IF THE TARGET IS A SHIP-'/' THE AMOUNT OF ENERGY (E) ENTE
     *RED WILL SLOW THE RETREATING ENEMY'/' SHIP''S SPEED BY A FACTOR OF
     * 2**(-E/0. 5) '/' EG. 0.5 WILL CUT THE SHIP''S SPEED IN HALF, '/'
     *1.0 WILL SLOW IT TO 1/4 SPEED, 1.5 WILL SLOW IT TO 1/8 SPEED'//'
     *IF THE TARGET IS AN EAGLE OR MINE-'/' 0.1 UNITS OF WARP ENERGY
     *ARE NEEDED FOR EACH UNIT THIS OBJECT IS PULL-ED IN'//' IF THE
     *TARGET IS EMPTY SPACE OR AN ION STORM- NOTHING WILL HAPPEN'//' IF
     * THE TARGET IS A STAR, DOOMSDAY MACHINE OR MOONBASE ALPHA-'/'
     *NOTHING WILL HAPPEN AS THE TARGET IS TOO MASSIVE FOR THE
     *TRACTORS TO HANDLE'/)

CV SET WARP ENERGY TO 0
      PULL(IT)=0.

CV IF WARP ENERGY WAS GIVEN: PROCEED AT 58
CV => WRITE RANGE OF YANK BEAM AND ASK FOR TARGET COORDINATES
      IF(A.NE.0)GO TO 58

CV ELSE: 26
      GO TO 26

CV SET TRACTOR LOCKED FLAG
40    IPULL(IT)=1

CV WRITE "TRACTORS LOCKED ..." MESSAGE
      WRITE(L,42)
42    FORMAT(' TRACTORS LOCKED ON TARGET')
      RETURN

264   WRITE(L,265)
265   FORMAT(' NOT ENOUGH ENERGY TO LOCK BEAM')
      GO TO 23

CV OBSOLETE PDP-10 ROUTINE
250   CALL ILLDAT

CV HANDLING FOR "ILLEGAL VALUE" ERROR
23    CALL OOPS(L)
      RETURN
      END


C       -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C                       - NOTRAC -
C

CV ABANDONMENT OF TRACTOR BEAM (YANK) BECAUSE OF DAMAGE TO RELEVANT DECKS

      LOGICAL FUNCTION NOTRAC(IT)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      COMMON /P/IPULL(4),IPUSH(4),PULL(4),PUSH(4),IPULLR(4),IPULLC(4),
     *IPUSHR(4),IPUSHC(4)

CV TRACTOR BEAM OK
      NOTRAC=.FALSE.

CV TRACTOR BEAM DECK = 27 ON ENTERPRISE AND POTEMPKIN
      I7=27

CV TRACTOR BEAM DECK = 4 ON HAVOC AND CARNAGE
      IF(IT.GT.2)I7=4

CV CALCULATE RANGE OF YANK BEAM (DISTP) FROM TRACTOR BEAM DECK DAMAGE
6     DISTP=9-MA(IT,I7)

CV IF NO DAMAGE TO TRACTOR BEAM DECK: RANGE OF YANK BEAM (DISTP)=10
      IF(MA(IT,I7).EQ.0)DISTP=10.

CV IF NOT COMPLETELY DESTROYED: SKIP DESTRUCTION MESSAGE, RETURN
      IF(MA(IT,I7).NE.9)RETURN

CV WRITE DESTRUCTION MESSAGE
      WRITE(L,3)
3     FORMAT(' TRACTOR BEAM MACHINERY ROOM HAS BEEN DESTROYED')

CV SET TRACTOR BEAM STRENGTH TO "0"
      IPULL(IT)=0

CV SET TRACTOR BEAM DESTRUCTION FLAG TO "TRUE"
      NOTRAC=.TRUE.

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C -       VULCAN -
C

CV SPOCK COMMAND
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV L      - ACTING M-O SHIP FORTRAN UNIT
CV MA     - DECK STATUS(SHIP ID,DECK ID), 0-9; 0: NO DAMAGE; > 0: MORE DAMAGE
CV I7     - COL POSITION OF ACTING M-O SHIP
CV I8     - ROW POSITION OF ACTING M-O SHIP
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV PONFAR - SPOCK SUBCOMMANDS DATA PONFAR/'HE','WE','WA','PH','DO','DI'/
CV NA     - SPOCK SUBCOMMAND GIVEN
CV I7     - PROB. OF US LOOSING STEERING CONTROL AND VEERING OFF COURSE
CV DISTP  - DISTANCE TO TARGET
CV AJUST  - PROBABILITY OF A PHASER HIT AT DISTANCE DISTP
CV N      - COL POSITION OF TARGET
CV IV     - ROW POSITION OF TARGET
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV -- NONE --

      SUBROUTINE VULCAN
      INTEGER PONFAR(6)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /O/MA(4,33),K(4,14),NOMAP(4),MANUM(4),HIVEL(4,2),ITEMP(4),
     *NOMOV(4)
      DATA PONFAR/'HE','WE','WA','PH','DO','DI'/

      WRITE(L,1)
1     FORMAT(' SPOCK HERE, CAPTAIN.....')
2     WRITE(L,201)
201   FORMAT(' ENTER WEB,WARP,PHASER,DOOM,DIST,HELP FOR HELP,STOP
     * TO STOP')
8     READ(L,4)NA
4     FORMAT(A2)

      DO 9 I=1,10

      IF(PONFAR(I).EQ.NA)GO TO (10,20,23,24,26,28),I

9     CONTINUE

      IF(NA.EQ.'ST')GO TO 200

      GO TO 6

10    WRITE(L,5)
5     FORMAT(' ENTER ''WEB'' TO LIST PROBABILITIES IF CAUGHT IN A WEB'/
     *' ''WARP'' FOR ENGINE PROBABILITIES'/
     *' ''PHASER'' FOR PROBS. OF PHASERS AND TORPEDOES/DISRUPTORS'/
     *' ''DOOM'' FOR PROBABILITES FOR DOOMSDAY MACHINE'/
     *' ''DIST'' TO CALCULATE DISTANCE BETWEEN COORDINATES AND CALCULATE
     *'/'  PROB. OF A PHASER HIT WHEN FIRED AT THE GIVEN COORDINATES'/)
      GO TO 8

20    WRITE(L,21)
21    FORMAT(' IF WE GO WARP 10, PROB. OF ESCAPING WEB=14.2657142857%'/
     *' IF WE GO LESS THAN WARP 10, PROB. OF ESCAPE=0%'/
     *' IF WE FIRE A TORPEDO, PROB. THAT IT WILL PENETRATE WEB=25%'/5X,
     *' PROB. THAT IT WILL NOT PIERCE WEB=50%'/
     *5X,' PROB. THAT IT WILL BOUNCE BACK AND STRIKE US=25%')
      GO TO 2

23    I7=(MA(IT,20)+1)*5
      WRITE(L,22)I7
22    FORMAT( ' PROB. OF US LOSING STEERING CONTROL AND VEERING OFF COUR
     *SE=',I3,'%'/' IF YOUR NACELLES THREATEN TO RIP OFF IF YOU EXCEED A
     * CERTAIN SPEED, '/' PROB. THAT IT WILL RIP OFF=(AMOUNT BY WHICH LI
     *MIT IS EXCEEDED*10+10)%'/'      HOWEVER, IF THE LIMIT AT WHICH THE
     * NACELLES THREATEN TO RIP OFF IS WARP 1'/' (IE. THE NACELLE SUPPOR
     *T PYLON IS DESTROYED), THEN IF YOU EXCEED'/'    WARP 1, PROB. THAT
     * IT WILL RIP OFF=100%'/' IF WARP ENERGY GOES BELOW 0. 5, THE WARP
     * ENGINES WILL BE SHUT DOWN. '/' TO MOVE THEREAFTER YOU WILL HAVE
     * TO BOOST WARP ENERGY AND'/' WAIT A TURN TO RE-ENERGIZE THE ENGINE
     *S')
      GO TO 2

24    WRITE(L,25)
25    FORMAT(' PROB. OF TORPS/DISRUPTORS SHORT-CIRCUITING WHEN FIRED=7%',
     */' PROB. OF PHASER BANKS SHORT-CIRCUITING WHEN FIRED=5%'/
     *' PROB. OF A MAIN COIL BURNOUT WHEN PHASERS ARE FIRED=5%'/
     *10X, ' PROB. THAT MAIN COIL WILL BE REPAIRED=28.57%, 33.33%, 40%'/
     *10X,' DEPENDING ON REPAIR MODE')
      GO TO 2

26    WRITE(L,27)
27    FORMAT(' PROB. THAT A PHASER BEAM WILL BOUNCE OFF THE DOOMSDAY MAC
     *HINE=66. 66666667%'/' PROB. THAT A MINE WILL EXPLODE AND CAUSE DAMA
     *GE WHEN MACHINE EATS IT=71.4265714%'/' IF YOU GO CLOSER TO THE MAC
     *HINE THAN THE NEAREST STAR IT WILL EAT YOU'/' YOU CANNOT TRANSPORT
     * ONTO THE DOOMSDAY MACHINE'/' WHEN THE MACHINE IS DESTROYED, EVERY
     *THING WITHIN 7 UNITS IS DESTROYED AS WELL')
      GO TO 2

28    WRITE(L,29)
29    FORMAT(' ENTER THE COORDINATES IN THE FORM AABB,CCDD')
      READ(L,30,ERR=6)I7,I8,N,IV
30    FORMAT(2I2,1X,2I2)

      DISTP=DI(I7,I8,N,IV)
      AJUST=100.-(DISTP*2.5)
      IF(AJUST.LT.0.)AJUST=0
      WRITE(L,31)DISTP,AJUST
31    FORMAT(' DISTANCE=',F/' PROBABILITY OF A PHASER HIT AT THIS DISTAN
     *CE=',F8.4,'%')
      GO TO 2

6     WRITE(L,7)
7     FORMAT(' YOUR REQUEST FAILS TO FALL WITHIN LOGICAL PARAMETERS')
200   WRITE(L,3)

3     FORMAT(' SPOCK OUT ......')

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - MRESS -
C

CV PHASER FIRING ROUTINE
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV A      - PHASER STRENGTH WANTED
CV B      - TARGET COORDINATES
CV ICOIL  - PHASER COILS BURNOUT FLAG, 1=BURNOUT
CV ICOLA  - NEW COL POSITION OF TARGET
CV IENTC  - COL POSITION OF ACTING M-O SHIP
CV IENTR  - ROW POSITION OF ACTING M-O SHIP
CV IROWA  - NEW ROW POSITION OF TARGET
CV IT     - ACTING M-O SHIP INDEX
CV L      - ACTING M-O SHIP FORTRAN UNIT
CV LOCK   - PHASER LOCK FLAG
CV PHASR  - AVAILABLE PHASER ENERGY
CV ZAP    - NEW PHASER ENERGY TO USE FOR ATTACK (=A)
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV DISTP  - OLD PHASER ENERGY TO USE FOR ATTACK
CV I7     - OLD COL POSITION OF TARGET
CV I8     - OLD ROW POSITION OF TARGET
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV LOCK   - PHASER LOCK FLAG
CV PHASR  - AVAILABLE PHASER ENERGY
CV

      SUBROUTINE MRESS
      LOGICAL LOKI,CYRANO
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /E/PHASR(4),TWARP(4),IPHOT(4),NDEAD(4),ISLIRR(4)
      COMMON /G/ZAP(4),ICOLA(4),IROWA(4),LOCK(4),ICOIL(4)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES

CV IF PHASER ALREADY LOCKED: RETURN
11    IF(LOKI(LOCK(IT)))GO TO 12

CV IF NO COIL BURNOUT: SKIP BURNOUT HANDLING (400)
      IF(ICOIL(IT).EQ.0)GO TO 400

CV ELSE: COIL BURNOUT: MESSAGE AND RETURN
      WRITE(L,401)
401   FORMAT(' PHASERS INOPERATIVE - MAIN COIL BURNOUT UNDER REPAIR')
      GO TO 12

CV IF PHASER ENERGY LEFT: SKIP NO PHASER ENERGY LEFT HANDLING (21)
400   IF(PHASR(IT).GT.0)GO TO 21

CV ELSE: NO MORE PHASER ENERY LEFT: MASSAGE AND RETURN
      WRITE(L,22)
22    FORMAT(' YOUR PHASER BANKS ARE DEPLETED')
      GO TO 12

CV STORE OLD VALUES OF PHASER ENERGY TO USE AND TARGET POSITION FOR RE-USE
21    DISTP=ZAP(IT)
      I7=ICOLA(IT)
      I8=IROWA(IT)

CV IF EITHER OF PHASER POWER WANTED OR TARGET POSITION NOT GIVEN: ASK (210)
      IF(A.EQ.0.OR.B.EQ.0)GO TO 210

CV CALCULATE AND SET PHASER POWER WANTED AND TARGET POSITION
      ZAP(IT)=A
      ICOLA(IT)=B/100.
      IROWA(IT)=B-ICOLA(IT)*100

CV IF PHASER POWER WANTED < 0 OR PHASER POWER WANTED > AVAILABLE PHASER POWER:
CV GO TO "FINISH IF UNSUCCESSFUL" (1200)
      IF(ZAP(IT).LT.0.OR.ZAP(IT).GT.PHASR(IT))GO TO 1200

CV GO TO "CHECK TARGET"
      GO TO 240

CV WRITE AVAILABLE PHASER POWER AND ASK FOR AMOUNT TO USE
210   WRITE(L,23)PHASR(IT)
23    FORMAT(' YOU HAVE ',F13.7,' UNITS OF ENERGY IN YOUR PHASER BANKS
     * TYPE IN HOW MANY YOU WISH TO USE: '$)
27    READ(L,24,ERR=1201)ZAP(IT)
24    FORMAT(F7.0)

CV IF PHASER POWER WANTED < 0
CV OR PHASER POWER WANTED > AVAILABLE PHASER POWER (+ SMALL DELTA):
CV GO TO "FINISH IF UNSUCCESSFUL" (1200)
      IF(ZAP(IT).LE.0.OR.ZAP(IT).GT.PHASR(IT)+0.0001)GO TO 1200

CV ASK FOR POSITION OF TARGET
391   WRITE(L,758)
758   FORMAT(' PLEASE ENTER COORDINATES OF TARGET: '$)
      READ(L,507,ERR=1201)ICOLA(IT),IROWA(IT)
507   FORMAT(2I2)

CV CHECK TARGET

CV IF PHASER TARGET OUT OF 60X60: RESET AND RETURN
240   IF(CYRANO(IROWA(IT),ICOLA(IT)))GO TO 1200

CV IF PHASER TARGET = OWN COORDINATES: RESET AND RETURN
      IF(ICOLA(IT).EQ.IENTC(IT).AND.IROWA(IT).EQ.IENTR(IT))GO TO 1200

CV =====================
CV FINISH IF SUCCESSFUL
CV =====================

CV EVERYTHING OK, MESSAGE "PHASERS LOCKED ON TARGET"
      WRITE(L,504)ICOLA(IT),IROWA(IT)
504   FORMAT(' PHASERS LOCKED ON TARGET ',I2,','I2)

CV REDUCE AVAILABLE PHASER ENERGY BY AMOUNT TO USE
      PHASR(IT)=PHASR(IT)-ZAP(IT)

CV IF REMAINING PHASER ENERGY < 0: PHASER ENERGY = 0
CV (TO COPE WITH ROUNDING PROBLEMS, SEE: "SMALL DELTA" ABOVE?)
      IF(PHASR(IT).LT.0)PHASR(IT)=0

CV SET PHASER LOCK FLAG
      LOCK(IT)=1

12    RETURN

CV =======================
CV FINISH IF UNSUCCESSFUL
CV =======================

CV RESET TO OLD VALUES OF PHASER ENERGY TO USE AND TARGET POSITION
1200  ZAP(IT)=DISTP
      ICOLA(IT)=I7
      IROWA(IT)=I8

      CALL OOPS(L)
      GO TO 12

1201  CALL ILLDAT
      GO TO 1200

      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - SHADOW -
C- THE WEED OF CRIME BEARS BITTER FRUIT

CV ATTACK/CEASE COMMANDS FOR STARBASE / BOARDED C-O SHIP
CV
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV J      - CEASE FIRE / ATTACK COMMAND, 1=CEASE FIRE / 2=ATTACK
CV IFIB() - CEASE FIRE / ATTACK FLAG, 1=CEASE FIRE / 2=ATTACK
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV NA     - COMMANDED STARBASE/C-O SHIP (BOARDED) LETTER / * FOR STARBASE
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV
      SUBROUTINE SHADOW(J)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /B/NDEAB(2),IPHDB(2),IONB(2),IGOB(2),IFIB(2)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(6),ICHOB(2)

CV ASK FOR SHIP/STARBASE TO COMMAND, READ
      WRITE(L,1)
1     FORMAT(' ENTER SHIP LETTER (''*'' FOR STARBASE): '$)
      READ(L,2)NA
2     FORMAT(A1)

CV IF ADDRESSED VESSEL IS NOT A STARBASE: 100
      IF(NA.NE.ISTAR)GO TO 100

CV ASK FOR STARBASE NUMBER, READ
      WRITE(L,3)
3     FORMAT(' ENTER STARBASE NUMBER: '$)
      READ(L,4,ERR=500)I7
4     FORMAT(I)

CV LOOP OVER STARBASES FOR 1 TO 2
      DO 5 I=1,2

CV IF CALLER (I7) IS STARBASE PARTY: 6
      IF(I7.EQ.IBASE(I))GO TO 6

CV NEXT STARBASE
5     CONTINUE

CV NO STARBASE TO COMMAND FOUND, ERROR MESSAGE, RETURN (501)
      GO TO 501

C- WHO KNOWS WHAT EVIL LURKS IN THE HEARTS OF MEN?

CV IF ...
6     IF(IBPSS(I).NE.IS)GO TO 501

CV ELSE: SET "CEASE FIRE / ATTACK FLAG" (IFIB)
CV TO "CEASE FIRE / ATTACK COMMAND" (J)
      IFIB(I)=J

CV LOOP OVER M-O SHIPS FOR 1 TO 4
      DO 7 I8=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I8).EQ.0)GO TO 7

CV IF M-O SHIP TYPE (1=ENTERPRISE/POTEMPKIN / 2=HAVOC/CARNAGE) <> IS:
CV NEXT M-O SHIP
      IF((IBPSC(I8)+1)/2.NE.IS)GO TO 7

CV ELSE: ...

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      IV=IBPSC(I8)+4

CV IF "CONSIDERABLE DAMAGE FLAG" OF CURRENT M-O SHIP = 0: 8
      IF(J.EQ.0)GO TO 8

CV WRITE "STARBASE CEASED FIRE" MESSAGE
      WRITE(IV,9)(ISIDE(IQ0,I),IQ=1,3),I7
9     FORMAT(1X,3A4,' STARBASE',I3, ' HAS CEASED FIRING')

CV NEXT M-O SHIP
      GO TO 7

CV WRITE "STARBASE CEASED ATTACKING" MESSAGE
8     WRITE(IV,10)(ISIDE(IQ0,I),IQ=1,3),I7
10    FORMAT(1X,3A4,' STARBASE',I3,' ATTACKING')

CV NEXT M-O SHIP
7     CONTINUE

CV RETURN
      RETURN

CV =================================
CV FIND COMMANDED C-O SHIP (IF ANY)
CV =================================

CV LOOP OVER C-O SHIPS FOR 1 TO 8
100   DO 105 I=1,8

CV IF COMMANDED STARBASE/C-O SHIP LETTER = CURRENT C-O SHIP LETTER:
CV PROCESS COMMANDED C-O SHIP (106)
      IF(NA.EQ.IENM1(I))GO TO 106

CV NEXT C-O SHIP
105   CONTINUE

CV NEITHER COMMANDABLE STARBASE NOR COMMANDABLE BOARDED C-O SHIP FOUND

CV ERROR MESSAGE, RETURN (501)
      GO TO 501

CV ===========================
CV PROCESS COMMANDED C-O SHIP
CV ===========================

CV IF COMMANDING PARTY OF CURRENT C-O SHIP ? <> CALLING PARTY
CV (1=FED/2=KLIN/3=DOOMSDAY?) ? : ERROR MESSAGE, RETURN (501)
CV IBPSB(I) = SUCCESSFUL BOARDER INDEX (1-4) OF I (1-8)
106   IF(IBPSB(I).NE.IS)GO TO 501

CV IGOCO(I) = "CEASE FIRE / ATTACK COMMAND" (J)
      IGOCO(I)=J

CV LOOP OVER M-O SHIPS FOR 1 TO 4
      DO 107 I8=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I8).EQ.0)GO TO 107

CV IF ...: NEXT M-O SHIP
      IF((IBPSC(I8)+1)/2.NE.IS)GO TO 107

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      IV=IBPSC(I8)+4

CV
      IF(J.EQ.0)GO TO 108

CV
      WRITE(IV,109)(IENM2(N,I),N=1,4)
109   FORMAT(1X,4A4,' RETURNING TO NEAREST ALLIED VESSEL')
      GO TO 107

108   WRITE(IV,110)(IENM2(N,I),N=1,4)
110   FORMAT(1X,4A4,' ATTACKING')

CV NEXT M-O SHIP
107   CONTINUE
      RETURN

C- THE SHADOW KNOWS!!!

500   CALL ILLDAT

501   CALL OOPS(L)

      RETURN
      END
