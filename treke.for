C====================================================
C TREK7   MODULE E
C  CONVERTED TO PC BY: DAN GAHLINGER
C ENTIRE MODULE TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C  C-O SHIP OPERATIONS
C
C ATACK   MORDOR  PIKE    DOOMVE  EDIBLE  MNERVA
C ASIMOV  NIVEN   WODEN   ALPHA   SIMAK   LEGUIN
C
C====================================================

C              -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7
C
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C                 AAA     TTTTT   AAA   CCC K   K
C                A   A      T    A   A C    K  K
C                AAAAA      T    AAAAA C    KKK
C                A   A      T    A   A C    K  K
C                A   A      T    A   A  CCC K   K
C

CV COMPUTER-OPERATED ENEMIES ATTACK ROUTINE

CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE?
CV KOENIG - EAGLE PARTY ATTACK
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV I      - C-O SHIP INDEX
CV IVV    - INTERNAL FLAG FOR ??? (VALUES: 0/1/2)
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE?
CV J2     - COL OF NEAREST M-O SHIP TO EAGLE?
CV N      - ??? (4/2)
CV DIST   - CURRENT TURNS DISTANCE TO (NEAREST) VESSEL(INDEX)
CV KOENIG - EAGLE PARTY ATTACK FLAG
CV

      SUBROUTINE ATACK
      LOGICAL MORDOR
      INTEGER ITZRO,ITVL1
      REAL RTZRO,RTVL1
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)
      COMMON /TOM/ITOM

CV ========================
CV LOOP OVER C-O SHIPS (I)
CV ========================

CV LOOP OVER C-O SHIPS (I) FOR 1 TO 8
      DO 1000 I=1,8
      N=4
      DIST(I)=100.

CV IF C-O SHIP NOT IN GAME: CV NEXT C-O SHIP
      IF(ICHOS(I).NE.1)GO TO 1000

CV IF C-O SHIP CAUGHT IN WEB OF ...: CV NEXT C-O SHIP
      IF(IWEB(1).EQ.I+4)GO TO 1000

CV IF C-O SHIP CAUGHT IN WEB OF ...: CV NEXT C-O SHIP
      IF(IWEB(2).EQ.I+4)GO TO 1000

CV
      IF(IO.EQ.1)TYPE 1970,I
1970  FORMAT(' BEGIN ATACK I=',I)

CV IF NO RELEVANT C-O SHIP FOUND (MORDOR = TRUE): NEXT C-O SHIP
      IF(MORDOR(MM,MN,RAD,BERNG))GO TO 1000

CV ELSE:

CV IF C-O SHIP = ORION OR KZINTI: 10100 (SKIP N=4)
      IF(I.EQ.5.OR.I.EQ.6)GO TO 10100

CV GO TO 1010 (WHY GO TO???, 1010 IS NEXT ANYWAY!; CHECKED AGAINST SCAN)
      GO TO 1010

1010  N=4

CV CONVERT BEARING ANGLE FROM RADIAN TO DEGREES
10100 BERNG=BERNG*3.14159265/180.

      AJUST=0.0
      IGNORE=0
      IV=I+4
      IF(IONNO.EQ.1.AND.I.EQ.6)IGNORE=1
      ITZRO=0

CV
10101 CALL HORTA(IKLNR(I),IKLNC(I),MM,MN,RAD,BERNG,
     *ITZRO,AJUST,IGNORE,DIST(I),ITZRO)
      IF(IO.EQ.1)TYPE 1972,MIN,I7,I8,DISTP
1972  FORMAT(' MIN=',I,' I7=',I,' I8=',I,' DISTP=',F)

CV M-O SHIP
      IF(MIN.LT.5)GO TO 101

CV C-O SHIP, STARBASE, STAR OR EAGLE
      IF(MIN.LT.15)GO TO 100

CV MINE
      IF(MIN.LT.19)GO TO 103

CV ION STORM
      IF(MIN.EQ.19)GO TO 102

CV OUT OF RANGE
      IF(MIN.EQ.21)GO TO 108

CV IF C-0 SHIP IS NOT ANY OF (KLINGONS, ROMULANS, THOLIANS)
CV BUT (GORNS, ORIONS, KZINTI, DOOMSDAY, MOONBASE)
CV : 106

100   IF(I.GT.3)GO TO 106

CV INCREASE AJUST BY PI/12 (15 DEGREES)
      AJUST=AJUST+0.2617993

CV IF AJUST > 2PI (360 DEGREES): 107
      IF(AJUST.GT.6.283184)GO TO 107

      IONK(I)=0
      IGNORE=0

CV REPEAT HORTA
      GO TO 10101

CV
106   RAD=RAD-DISTP+1.42
      IVV=0

CV
      IF(IONNO.EQ.1.AND.I.EQ.6)IGNORE=1

1060  IVVV=N
      N=2

10801 I81=I8
      I71=I7
      RTZRO=0.0
      ITVL1=1
      RTVL1=1.5
      CALL HORTA(I71,I81,IKLNR(I),IKLNC(I),
     *RTVL1,RTZRO,ITZRO,RTZRO,ITVL1,RTZRO,ITZRO)

CV
      IF(MIN.NE.I+4.AND.MIN.NE.19.AND.MIN.LT.21)GO TO 10801

CV =====
CV MOVE
CV =====

CV SET POSTION "IKLNR(I),IKLNC(I)" TO "BLANK" (=EMPTY)
CV := MOVE C-O SHIP TO I7,I8, BUT NOT DISPLAYED IN MAP
1080  MAP(IKLNR(I),IKLNC(I))=IBLK
      IF(ISPOK(I).EQ.1)MAP(IKLNR(I),IKLNC(I))=III
      ISPOK(I)=0
      IKLNR(I)=I7
      IKLNC(I)=I8
      IF(MAP(I7,I8).EQ.III)ISPOK(I)=1
      IF(IVV.EQ.1)GO TO 10093

CV REPEAT HORTA
      IF(IVV.EQ.2)GO TO 10101
      N=IVVV
      AJUST=AJUST+0.785398163
CV                0.785398163

CV
      IF(AJUST.GT.10.)GO TO 10093

CV REPEAT HORTA
      GO TO 10101

CV M-O SHIP
101   IF(N.EQ.5)GO TO 106
      IF(N.EQ.6)GO TO 1061
      IVV=1
      GO TO 1060

CV ION-STORM
102   RAD=(RAD-DISTP)/2.
      IONK(I)=1
      IGNORE=1
      IVV=2
      GO TO 1080

CV
107   IVV=1
      GO TO 1060

CV C-O SHIP (I) - MINE COLLISION
103   CALL MNERVA(I)
      IVV=1
      MAP(I7,I8)=IBLK
      GO TO 1080

CV OUT OF RANGE
108   IVV=1
      GO TO 1080
1061  DO 535 IV=1,4
      IF(ICHOE(IV).EQ.0)GO TO 535
      L=IV+4
      WRITE(L,1062)(INAME(IQ0,MIN),IQ0=1,3)
1062  FORMAT(' THE KZINTI WARSHIP HAS RAMMED THE ',3A4)
535   CONTINUE
      MAP(I7,I8)=IBLK
      MAP(IKLNR(6),IKLNC(6))=IBLK
      IF(ISPOK(6).EQ.1)MAP(IKLNR(6),IKLNC(6))=III
      DFLCT(MIN)=-1.
      DFLCK(6)=-1.
      ISTAT=2
      RETURN
10093 IF(I.NE.6)GO TO 1063
      CALL NIVEN

CV NEXT C-O SHIP
      GO TO 1000

1063  CALL ASIMOV(MAP(IKLNR(I),IKLNC(I)),I)
      IF(I.NE.2)GO TO 1029
1205  N=DFLCK(I)/5.
      IF(N.EQ.0)GO TO 672
      CALL RANDO(J,1,N)
      IF(J.GT.1)GO TO 1029
672   DO 536 IV=1,4
      IF(ICHOE(IV).NE.1)GO TO 536
      L=IV+4
      INVIS(IV)=1
      WRITE(L,1030)
1030  FORMAT(' THERE HAS BEEN A BREAKDOWN IN THE ROMULAN WARSHIP''S CLO
     *AKNG DEVICE'/' AND THE SHIP CAN NOW BE PICKED UP BY OUR SENSORS')
536   CONTINUE
1029  MAP(I7,I8)=IENM1(I)

CV NEXT C-O SHIP
1000  CONTINUE

CV ===================================
CV PROCESS MOONBASE AND EAGLES IF ANY
CV ===================================

CV IF NO MOONBASE AND NO EAGLES OUT: RETURN
      IF(ICHOS(8).EQ.0.AND.NUMOUT.EQ.0)RETURN

CV ELSE:

CV SET EAGLE PARTY ATTACK FLAG TO 1
      KOENIG=1

CV MANAGE EAGLE LAUNCHING
      CALL ALPHA

      RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR        T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - MORDOR
C
C -WHERE THE SHADOWS LIE

CV C-O SHIP ACTIONS COMMON MAIN ROUTINE

      LOGICAL FUNCTION MORDOR(MM,MN,RAD,BERNG)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)
      COMMON /TOM/ITOM

CV SET DEFAULT TO TRUE
      MORDOR=.TRUE.

CV CALCULATE NEAREST "IBPSB(I)" ??? TO C-O SHIP
      CALL PIKE(IKLNR(I),IKLNC(I),IBPSB(I))

CV IF MIN=0 (NO NEAREST VESSEL): RETURN
      IF(MIN.EQ.0)GO TO 1000

CV ELSE: MIN<>0 THERE IS A NEAREST VESSEL
      DIST(I)=DISTP

CV SAVE NEAREST VESSEL INDEX TO "IWHO"
      IWHO(I)=MIN

CV IF I=8 (MOONBASE): RETURN
      IF(I.EQ.8)GO TO 1000

CV IF 6>=MIN>4 (STARBASE): 500
      IF(MIN.GT.4)GO TO 500

CV ==========
CV M-O SHIPS
CV ==========

CV ELSE: MIN<=4 (=> M-O SHIP(I7))

CV MM = M-O SHIP ROW
      MM=IENTR(MIN)

CV MN = M-O SHIP COL
      MN=IENTC(MIN)

CV A = M-O SHIP DEFLECTOR STRENGTH
      A=DFLCT(MIN)

CV SKIP OTHER OBJECT TYPES
      GO TO 501

CV ==============
CV M-O STARBASES
CV ==============

CV IF 14>=MIN>6: 502
500   IF(MIN.GT.6)GO TO 502

CV ELSE: 6>=MIN>4: (=> STARBASE(I7))

CV CALCULATE STARBASE INDEX I7
      I7=MIN-4

CV MM = STARBASE ROW
      MM=IBASR(I7)

CV MN = STARBASE COL
      MN=IBASC(I7)

CV A = STARBASE DEFLECTOR STRENGTH
      A=DFLCB(I7)

CV SKIP OTHER OBJECT TYPES
      GO TO 501

CV ==========
CV C-O SHIPS
CV ==========

CV IF MIN>14: 503
502   IF(MIN.GT.14)GO TO 503

CV ELSE: 14>=MIN>6 (=> C-O SHIP(I7))

CV CALCULATE C-O SHIP INDEX I7
      I7=MIN-6

CV MM = C-O SHIP ROW
      MM=IKLNR(I7)

CV MN = C-O SHIP COL
      MN=IKLNC(I7)

CV A = C-O SHIP DEFLECTOR STRENGTH
      A=DFLCK(I7)

CV SKIP OTHER OBJECT TYPES
      GO TO 501

CV ===========
CV C-O EAGLES
CV ===========

CV MIN>14: (=> EAGLE(I7))

CV CALCULATE EAGLE INDEX I7
503   I7=MIN-14

CV MM = EAGLE ROW
      MM=IGLER(I7)

CV MN = EAGLE COL
      MN=IGLEC(I7)

CV A = 0 (EAGLE DEFLECTOR STRENGTH)
      A=0

CV ====
CV ???
CV ====

CV ???
501   AJUST=0.

CV RESET ION STORM FLAG FOR C-O SHIP (?)
      IONK(I)=0

CV GO TO THE LABELS CORRESPONDUNG TO C-O SHIP INDEX (I)
      GO TO (1006,1001,1002,1007,1011,110,1012),I

CV ===============
CV I=1 (KLINGONS)
CV ===============

CV CALCULATE RANDOM MAX WARP J (7-9)
1006  CALL RANDO(J,7,9)

CV IF (DIST(I) (?) <=1.5: RETURN
      IF(DIST(I).LE.1.5)GO TO 1000

CV SET MAX WARP (RAD) TO FLOAT(J)
      RAD=FLOAT(J)

CV
1005  AJUST=0.0

CV =========================================
CV NOT BOARDED OR ??? CHECK FOR ALL VESSELS
CV =========================================

CV IF C-O SHIP (I) IS NOT BOARDED OR GO FLAG IS NOT SET?:
CV CALCULATE BEARING ANGLE (600)
1009  IF(IBPSB(I).EQ.0.OR.IGOCO(I).EQ.0)GO TO 600

CV ELSE:
      DISTP=100.

CV NO NEAREST SHIP
      IVV=0

CV ===============================================================
CV ITERATIVELY CALCULATE DISTANCE OF THE NEAREST M-O SHIP (DISTP)
CV ===============================================================

CV LOOP OVER ALL M-O SHIPS IV FOR 1 TO 4
      DO 601 IV=1,4

CV IF M-O SHIP IS NOT IN GAME
CV OR OWNER OF M-O SHIP IS NOT M-O SHIP PARTY (M-O SHIP IS BOARDED):
CV NEXT M-O SHIP
      IF(ICHOE(IV).NE.1.OR.(IBPSC(IV)+1)/2.NE.IBPSB(I))GO TO 601

CV CALCULATE DISTANCE (B) BETWEEN C-O SHIP (I) AND CURRENT M-O SHIP (IV)
      B=DI(IKLNR(I),IKLNC(I),IENTR(IV),IENTC(IV))

CV IF DISTANCE BETWEEN C-O SHIP AND M-O SHIP > DISTP: NEXT M-O SHIP
CV => CURRENT M-O SHIP IS FURTHER AWAY THAN THE NEAREST OF THE M-O SHIPS
CV BEFORE
      IF(B.GT.DISTP)GO TO 601

CV ELSE: CURRENT M-O SHIP IS NEARER THAN THE NEAREST OF THE M-O SHIPS BEFORE

CV SET IVV TO INDEX OF NEAREST M-O SHIP
      IVV=IV

CV SET DISTANCE OF THE NEAREST M-O SHIP TO DISTANCE OF CURRENT SHIP
      DISTP=B

CV NEXT M-O SHIP
601   CONTINUE

CV ===============================================================

CV IF NO NEAREST M-O SHIP (?): SKIP SETTING MM/MN TO POSITION
CV OF NEAREST M-O SHIP; CALCULATE BEARING ANGLE
      IF(IVV.EQ.0)GO TO 600

CV SET MM TO ROW OF NEAREST M-O SHIP
      MM=IENTR(IVV)

CV SET MN TO COL OF NEAREST M-O SHIP
      MN=IENTC(IVV)

CV SET ADJUSTMENT ANGLE TO 0
      AJUST=0.

CV SET N TO 4 (WHY?)
      N=4

CV ========================
CV CALCULATE BEARING ANGLE
CV ========================

CV SET IV TO ROW DISTANCE TO C-O SHIP
600   IV=MM-IKLNR(I)

CV SET IVV TO COL DISTANCE TO C-O SHIP
      IVV=MN-IKLNC(I)

CV CALCULATE BEARING ANGLE FOM IV/IVV
      BERNG=ANG(IV,IVV)

CV ADD ADJUSTMENT ANGLE TO BEARING ANGLE
1101  BERNG=BERNG+AJUST

CV CONVERT BEARING ANGLE TO RANGE 0 TO 360
      IF(BERNG.LT.0)BERNG=BERNG+360.
      IF(BERNG.GT.360.)BERNG=BERNG-360.

CV =============================
CV APPLY PUSH/PULL TO M-O SHIPS
CV =============================

CV LOOP OVER M-O SHIPS (I7) FOR 1 TO 4
      DO 504 I7=1,4

CV SKIP PUSH/PULL TO M-O SHIP IF M-O SHIP NOT IN GAME
      IF(ICHOE(I7).NE.1)GO TO 504

CV APPLY PUSH (DEFLECT) AND PULL (YANK) TO C-O SHIP
      CALL DUNSEL(IKLNR(I),IKLNC(I),RAD,BERNG)

CV NEXT M-O SHIP
504   CONTINUE

      MORDOR=.FALSE.

CV RETURN
1000  RETURN

CV ===============
CV I=2 (ROMULANS)
CV ===============

CV CALCULATE RANDOM MAX WARP J (7-9)
1001  CALL RANDO(J,7,9)

CV SET MAX WARP (RAD) TO FLOAT(J)
      RAD=FLOAT(J)

CV ROMULANS BEHAVIOR
CV KILLR = 1 => NEUTRAL
CV KILLR = 2 => ATTACK
CV KILLR = 3 => RETREAT

CV SET IV TO KILLR SO FAR (INITIALLY: 1)
      IV=KILLR

CV LOOP OVER ... ()
      DO 10010 J=1,4

CV
10010 INVIS(J)=0

CV IF DISTANCE TO OTHER SHIP <=10 OR KILLR<>1: ATTACK
      IF(DISTP.LE.10..OR.KILLR.NE.1)KILLR=2

CV IF DEFLEKTOR STRENGTH OF OTHER SHIP - ROMULAN DEFLEKTOR STRENGTH > 20:
CV RETREAT
      IF(A-DFLCK(2).GT.20.)KILLR=3

CV SET IV CHANGE OF KILLR - 0 = NO CHANGE
      IV=IV-KILLR

CV
      I71=MIN+4

CV GO TO KILLR DEPENDENT LABELS
      GO TO (1003,10031,1004),KILLR

CV ===================
CV KILLR=1 => NEUTRAL
CV ===================

CV CALCULATE RANDOM ANGLE BERNG (1-360)
1003  CALL RANDO(J,1,360)
      BERNG=FLOAT(J)

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV ==================
CV KILLR=2 => ATTACK
CV ==================

CV CALCULATE RANDOM ANGLE (?) AJUST (-90-+90)
10031 CALL RANDO(J,-90,90)
      AJUST=FLOAT(J)

CV IF OPPONENT = M-O SHIP AND CHANGE OF KILLR:
CV WRITE MESSAGE "ROMULAN SHIP ATTACKING"
      IF(MIN.LT.5.AND.IV.NE.0)WRITE(I71,10032)
10032 FORMAT(' ROMULAN SHIP ATTACKING')

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV ===================
CV KILLR=3 => RETREAT
CV ===================

CV CALCULATE RANDOM ANGLE (?) AJUST (90-270)
1004  CALL RANDO(J,90,270)
      AJUST=FLOAT(J)

CV IF OPPONENT = M-O SHIP AND CHANGE OF KILLR:
CV WRITE MESSAGE "ROMULAN SHIP RETREATING"
      IF(MIN.LT.5.AND.IV.NE.0)WRITE(I71,10033)
10033 FORMAT(' ROMULAN SHIP RETREATING')

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV ===============
CV I=3 (THOLIANS)
CV ===============

1002  IF(DISTP.LE.8.)GO TO 1000

CV CALCULATE RANDOM MAX WARP (J)
      CALL RANDO(J,5,10)

CV SET MAX WARP TO J
      RAD=FLOAT(J)

CV
      IF(DISTP-8..LT.RAD)RAD=DISTP-6.5
      GO TO 1005

CV ============
CV I=4 (GORNS)
CV ============

CV SET MAXIMUM WARP=11
1007  RAD=11.
      KILLG=1

CV
      IF(DFLCK(4)-A.LT.25.)KILLG=2

CV
      IF(KILLG.EQ.1)GO TO 1005
1008  AJUST=180.

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV =============
CV I=5 (ORIONS)
CV =============

CV SET MAXIMUM WARP=12
1011  RAD=12.

CV STRATEGY CLOSE PASSES
123   AJUST=ABS(ATAN(1.1/DISTP))*180./3.14159265
      N=5

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV =============
CV I=6 (KZINTI)
CV =============

CV SET MAXIMUM WARP (RAD) = PROGRMMED MAX WARP (IMAXZ)
110   RAD=IMAXZ
      N=4

CV IF KZINTI TYPE OF ENGINES = IONIC DRIVE (1): ISTAT = 11
      IF(IDRIZ.EQ.1)ISTAT=11

CV IF SET KZINTI NEUTRAL DISTANCE (KILLZ) = 100: 124
      IF(KILLZ.EQ.100)GO TO 124

CV IF DISTANCE OF THE NEAREST SHIP (DISTP)
CV <= KZINTI NEUTRAL DISTANCE (KILLZ): 125
      IF(DISTP.LE.KILLZ)GO TO 125

CV
      CALL RANDO(I7,1,360)
      AJUST=I7

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV SET KZINTI NEUTRAL DISTANCE (KILLZ) TO 100
125   KILLZ=100

CV GO TO LABELS ACCORDING TO KZINTI TYPE OF STRATEGY INDEX
124   GO TO (121,122,123),IPLANZ

CV STRATEGY ATTACK/RETREAT
121   AJUST=0.
      IF(A-DFLCK(6).GT.IRUNZ)AJUST=180.
      CALL RANDO(I7,-IDEVZ,IDEVZ)
      AJUST=AJUST+I7

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV STRATEGY KAMIKAZE
122   AJUST=0.
      N=6

CV RE-CALCULATE BEARING ANGLE (1009)
      GO TO 1009

CV ===============
CV I=7 (DOOMSDAY)
CV ===============

CV CALL DOOMSDAY ACTIONS FOR OBEJCTS AT MN/MM
1012  CALL DOOMVE(MM,MN)
      GO TO 1000
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - PIKE -
C

CV CALCULATE MIN (NEAREST VESSEL TO PIKE SHIP) FOR:
CV M-O SHIPS, STARBASES, C-O SHIPS AND EAGLES

CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV J1     - ROW OF PIKE (REQUESTING) SHIP
CV J2     - COL OF PIKE SHIP
CV J3     - REQUESTING SHIP OWNER INDEX (1-4)
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV MIN    - NEAREST VESSEL TO PIKE SHIP INDEX
CV          NEAREST = M-O SHIP: MIN=1,2,3,4
CV          NEAREST = STARBASE: MIN=5,6
CV          NEAREST = C-O SHIP: MIN=7,8,9,10,11,12,13,14
CV          NEAREST = EAGLE   : MIN=15,16,17,...
CV DISTP  - DISTANCE TO NEAREST VESSEL
CV

      SUBROUTINE PIKE(J1,J2,J3)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)

CV SET START VALUES FOR DISTP AND MIN (NEAREST VESSEL TO PIKE SHIP)
      DISTP=100.
      MIN=0

CV ==========
CV M-O SHIPS
CV ==========

CV LOOP OVER M-O SHIPS IN RANGE 1 TO 4
      DO 1 IVV=1,4

CV IF M-O SHIP NOT IN GAME OR SHIP = HAVOC: NEXT M-O SHIP
      IF(ICHOE(IVV).EQ.0.OR.ICHOE(IVV).EQ.3)GO TO 1

CV IF PIKE SHIP (J3) HAS THE SAME STARBASE AS M-O SHIP: NEXT M-O SHIP
      IF(J3.EQ.(IBPSC(IVV)+1)/2)GO TO 1

CV SET AJUST = DISTANCE BETWEEN PIKE SHIP (J1,J2) AND M-O SHIP POSITION
      AJUST=DI(J1,J2,IENTR(IVV),IENTC(IVV))

CV IF M-O SHIP DISTANCE >= DISTP: NEXT M-O SHIP
      IF(AJUST.GE.DISTP)GO TO 1

CV IF M-O SHIP DISTANCE = 0: NEXT M-O SHIP
      IF(AJUST.EQ.0)GO TO 1

CV ELSE: SET DISTP = M-O SHIP DISTANCE
      DISTP=AJUST

CV NEAREST VESSEL TO PIKE SHIP = IVV (1/2/3/4)
      MIN=IVV

CV NEXT M-O SHIP
1     CONTINUE

CV ==========
CV STARBASES
CV ==========

CV LOOP OVER STARBASES IN RANGE 1 TO 2
      DO 2 IVV=1,2

CV IF STARBASE NOT IN GAME: NEXT STARBASE
      IF(ICHOB(IVV).EQ.0)GO TO 2

CV IF PIKE SHIP (J3) HAS CURRENT STARBASE: NEXT STARBASE
      IF(J3.EQ.IBPSS(IVV))GO TO 2

CV SET AJUST = DISTANCE BETWEEN PIKE SHIP (J1,J2) AND STARBASE POSITION
      AJUST=DI(J1,J2,IBASR(IVV),IBASC(IVV))

CV IF STARBASE DISTANCE >= DISTP: NEXT STARBASE
      IF(AJUST.GE.DISTP)GO TO 2

CV IF STARBASE DISTANCE = 0: NEXT STARBASE
      IF(AJUST.EQ.0)GO TO 2

CV IF PIKE OWNER = 0 (NONE) AND STARBASE OWNER SHIP = 0: NEXT STARBASE
      IF(J3.EQ.0.AND.IJ(IBPSS(IVV)).EQ.0)GO TO 2

CV ELSE: SET DISTP = STARBASE DISTANCE
      DISTP=AJUST

CV NEAREST VESSEL TO PIKE SHIP = IVV+4 (5/6)
      MIN=IVV+4

CV NEXT STARBASE
2     CONTINUE

CV ==========
CV C-O SHIPS
CV ==========

CV LOOP OVER C-O SHIPS IN RANGE 1 TO 8
      DO 3 IVV=1,8

CV IF C-O SHIP <> KLINGON: NEXT C-O SHIP
      IF(ICHOS(IVV).NE.1)GO TO 3

CV IF PIKE SHIP (J3) HAS THE SAME STARBASE AS C-O SHIP: NEXT C-O SHIP
      IF(J3.EQ.IBPSB(IVV))GO TO 3

CV SET AJUST = DISTANCE BETWEEN PIKE SHIP (J1,J2) AND C-O SHIP POSITION
      AJUST=DI(J1,J2,IKLNR(IVV),IKLNC(IVV))

CV IF C-O SHIP DISTANCE >= DISTP: NEXT C-O SHIP
      IF(AJUST.GE.DISTP)GO TO 3

CV IF C-O SHIP DISTANCE = 0: NEXT C-O SHIP
      IF(AJUST.EQ.0)GO TO 3

CV IF C-O SHIP <> ROMULAN: 10
      IF(IVV.NE.2)GO TO 10

CV IF SUM OF INVISIBILITY FACTORS=0 OR C-O SHIP DISTANCE > 5: NEXT C-O SHIP
      IF(INVIS(2*J3-1)+INVIS(2*J3).EQ.0.OR.AJUST.GT.5)GO TO 3

CV SET DISTP = C-O SHIP DISTANCE
      GO TO 11

CV IF C-O SHIP IS NOT KZINTI OR KZINTI ARE NOT CLOAKED:
CV SET DISTP = C-O SHIP DISTANCE
10    IF(IVV.NE.6.OR.IARMZ(5).EQ.0)GO TO 11

CV IF SUM OF INVISIBILITY FACTORS=0 OR C-O SHIP DISTANCE > ICLOZ:
CV NEXT C-O SHIP
      IF(INVIZ(2*J3-1)+INVIZ(2*J3).EQ.0.OR.AJUST.GT.ICLOZ)GO TO 3

CV ELSE: SET DISTP = C-O SHIP DISTANCE
11    DISTP=AJUST

CV NEAREST VESSEL TO PIKE SHIP = IVV+6 (7/8/9/10/11/12/13/14)
      MIN=IVV+6

CV NEXT C-O SHIP
3     CONTINUE

CV =======
CV EAGLES
CV =======

CV IF NO EAGLES ARE OUT: RETURN
4     IF(NUMOUT.EQ.0)RETURN

CV ELSE: EAGLES ARE OUT

CV LOOP OVER EAGLES IVV FOR 1 TO LAUNCH
      DO 5 IVV=1,LAUNCH

CV IF EAGLE IVV NOT IN GAME: NEXT EAGLE
      IF(IGLER(IVV).EQ.0)GO TO 5

CV IF PIKE SHIP (J3) HAS THE SAME STARBASE AS EAGLE: NEXT EAGLE
      IF(J3.EQ.IBPSE(IVV))GO TO 5

CV SET AJUST = DISTANCE BETWEEN PIKE SHIP (J1,J2) AND EAGLE POSITION
      AJUST=DI(J1,J2,IGLER(IVV),IGLEC(IVV))

CV IF EAGLE DISTANCE >= DISTP: NEXT EAGLE
      IF(AJUST.GE.DISTP)GO TO 5

CV IF EAGLE DISTANCE = 0: NEXT EAGLE
      IF(AJUST.EQ.0)GO TO 5

CV ELSE: SET DISTP = EAGLE DISTANCE
      DISTP=AJUST

CV NEAREST VESSEL TO PIKE SHIP = IVV+14 (15/16/.../35)
      MIN=IVV+14

CV NEXT EAGLE
5     CONTINUE
      RETURN
      END


C          DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C              CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C                - DOOMVE -
C

CV DOOMSDAY MACHINE ACTIONS

CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV MM     - TARGET OBJECT ROW
CV MN     - TARGET OBJECT COL
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV IGNORE - INTEGER OF CURRENT DISTANCE TO NEAREST VESSEL
CV ISMINE - TRUE IF EDIBLE OBJECT IS A MINE
CV J      - EDIBILITY FACTOR OF OBJECT AT MM/MN
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV

      SUBROUTINE DOOMVE(MM,MN)
      INTEGER EDIBLE
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /K/IWHO(8),DIST(8),KILLZ,KILLR,KILLD,KILLG,IGOCO(8)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /V/IWEB(2),IWEBZ,INVIS(4)
      COMMON /TOM/ITOM
      LOGICAL ISMINE

CV SET IGNORE TO INTEGER OF CURRENT DISTANCE TO NEAREST VESSEL
1012  IGNORE=IFIX(DISTP)

CV ===========================
CV FIND NEAREST EDIBLE OBJECT
CV ===========================

CV LOOP OVER N (?) FROM 1 TO IGNORE (?)
      DO 506 N=1,IGNORE

CV IVVV = DOOMSDAY ROW-N+1
      IVVV=IKLNR(7)-N+1

CV IVV  = DOOMSDAY ROW-N1-1
      IVV=IKLNR(7)+N-1

CV I71 = DOOMSDAY COL-N
      I71=IKLNC(7)-N

CV I81 = DOOMSDAY COL+N
      I81=IKLNC(7)+N

CV IVVV MINIMUM=1
      IF(IVVV.LT.1)IVVV=1

CV I71 MINIMUM=1
      IF(I71.LT.1)I71=1

CV IVV MAXIMUM=60
      IF(IVV.GT.60)IVV=60

CV I81 MAXIMUM=60
      IF(I81.GT.60)I81=60

CV I7 = DOOMSDAY ROW-N
      I7=IKLNR(7)-N

CV IF I7 < 1: SKIP LOOP OVER I8
      IF(I7.LT.1)GO TO 507

CV LOOP OVER I8
      DO 508 I8=I71,I81

CV PUT EDIBILITY FACTOR OF OBJECT AT MM/MN INTO J
      J=EDIBLE(MM,MN)

CV IF OBJECT IS EDIBLE: 510
      IF(J.GT.0)GO TO 510

CV NEXT I8
508   CONTINUE

CV
507   I7=IKLNR(7)+N
      IF(I7.GT.60)GO TO 509
      DO 511 I8=I71,I81
      J=EDIBLE(MM,MN)
      IF(J.GT.0)GO TO 510
511   CONTINUE
509   I8=IKLNC(7)-N
      IF(I8.LT.1)GO TO 512
      DO 513 I7=IVVV,IVV
      J=EDIBLE(MM,MN)
      IF(J.GT.0)GO TO 510
513   CONTINUE
512   I8=IKLNC(7)+N
      IF(I8.GT.60)GO TO 506
      DO 515 I7=IVVV,IVV
      J=EDIBLE(MM,MN)
      IF(J.GT.0)GO TO 510
515   CONTINUE
506   CONTINUE
      I7=MM
      I8=MN
      GO TO 517

CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV
CV BEGIN OF FIX OF THE DOOMVE BUG:
CV "ALL STARS ARE MINES"
CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV

CV =======================================
CV CHECK WHETHER EATABLE OBJECT IS A MINE
CV =======================================

CV SET DEFAULT TO "NO MINE"
510   ISMINE=.FALSE.

CV GET TYPE OF EATABLE OBJECT INTO NA
      NA=MAP(I7,I8)

CV LOOP OVER M-O SHIPS IV FOR 1 TO 4
      DO 777 IV=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(IV).EQ.0)GO TO 777

CV IF EATABLE OBJECT IS A MINE OF M-O SHIP IV:
CV SET ISMINE TO "TRUE"
      IF(NA.EQ.IM(IV))ISMINE=.TRUE.

CV NEXT M-O SHIP
777   CONTINUE

CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV
CV END OF FIX OF THE DOOMVE BUG:
CV "ALL STARS ARE MINES"
CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV

CV ===========================
CV EAT EDIBLE OBJECT AT I7/I8
CV ===========================

CV PUT DOOMSDAY COLUMN POSITION INTO IV
      IV=IKLNC(7)

CV PUT DOOMSDAY ROW POSITION INTO IVV
      IVV=IKLNR(7)

CV PUT A BLANK IN THE POSITION OF THE DOOMSDAY
      MAP(IVV,IV)=IBLK

CV IF THERE WAS AN ION STORM, PUT THE ION STORM SYMBOL IN THE MAP
      IF(ISPOK(7).EQ.1)MAP(IVV,IV)=III

CV REMOVE THE ION STORM FLAG FROM DOOMSDAY
      ISPOK(7)=0

CV SET THE NEW POSITION OF DOOMSDAY TO COL=I8/ROW=I7
      IKLNC(7)=I8
      IKLNR(7)=I7

CV PUT DOOMSDAY SYMBOL INTO MAP
      MAP(I7,I8)=IENM1(7)

CV IF EDIBLE=1 (DILITHIUM STAR/STARBASE) GO TO 514
CV IF EDIBLE=2 (STAR/MINE) GO TO 516
CV IF EDIBLE=3 (M-O/C-O SHIP, EAGLE) GO TO 517
      GO TO (514,516,517),J

CV ==============================
CV DILITHIUM STARS AND STARBASES
CV ==============================
CV EDIBLE=1 (DILITHIUM STAR/STARBASE)

CV ================
CV DILITHIUM STARS
CV ================

CV LOOP OVER DILITHIUM STARS IV FOR 1 TO 5
514   DO 518 IV=1,5

CV IF DOOMSDAY ROW (I7) NOT ROW POSITION OF DILITHIUM STAR:
CV STARS AND MINES (516)
      IF(I7.NE.LI2R(IV))GO TO 516

CV IF DOOMSDAY COL (I8) NOT COL POSITION OF DILITHIUM STAR:
CV STARS AND MINES (516)
      IF(I8.NE.LI2C(IV))GO TO 516

CV ELSE: DOOMSDAY MACHINE EATS A DILITHIUM STAR, DELETE DILITHIUM STAR
      LI2C(IV)=0
      LI2R(IV)=0

CV RETURN
      GO TO 1000

CV NEXT DILITHIUM STAR
518   CONTINUE

CV ==========
CV STARBASES
CV ==========

CV LOOP OVER STARBASES IN RANGE 1 TO 2
      DO 519 IV=1,2

CV IF STARBASE NOT AT I7/I8 (DOOMSDAY MACHINE POSITION): NEXT STARBASE
      IF(I7.NE.IBASR(IV))GO TO 519
      IF(I8.NE.IBASC(IV))GO TO 519

CV SET STARBASE DEFLECTOR STRENGTH OF SHIP IV TO -1
CV SET STARBASE DESTRUCTION FLAG
529   DFLCB(IV)=-1.

CV ISTAT (?)
      ISTAT=2

CV INFORM M-O SHIPS

CV LOOP OVER M-O SHIPS IVV FOR 1 TO 4
      DO 5190 IVV=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(IVV).EQ.0)GO TO 5190

CV CALCULATE M-O SHIP FORTRAN UNIT NUMBER
      I71=IVV+4

CV WRITE MESSAGE TO M-O SHIPS IN GAME
CV "DOOMSDAY MACHINE HAS EATEN <OPPONENT SIDE NAME> STARBASE <NO>"
      WRITE(I71,521)(ISIDE(IQ0,IV),IQ0=1,3),IBASE(IV)
521   FORMAT(' THE DOOMSDAY MACHINE HAS EATEN ',3A4,' STARBASE',I3)

CV NEXT M-O SHIP
5190  CONTINUE

CV NEXT STARBASE
519   CONTINUE

CV RETURN
      GO TO 1000

CV ================
CV STARS AND MINES
CV ================
CV EDIBLE=2 (STAR/MINE)

CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV
CV BEGIN OF FIX OF THE DOOMVE BUG:
CV "ALL STARS ARE MINES"
CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV

CV ===========================================
CV MINE EATEN - POSSIBLE DOOMSDAY DESTRUCTION
CV ===========================================

CV NOT A MINE: SKIP POSSIBLE DOOMSDAY EXPLOSION
516   IF(ISMINE.EQ..FALSE.)GO TO 599

CV INFORM M-O SHIPS

CV LOOP OVER ALL M-O SHIPS
      DO 699 J=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(J).EQ.0)GO TO 699

CV CALCULATE FORTRAN UNIT NUMBER IV
      IV=J+4

CV WRITE MESSAGE TO M-O SHIPS IN GAME
      WRITE(IV,698)
698   FORMAT(' THE DOOMSDAY MACHINE HAS JUST EATEN A MINE')

CV NEXT M-O SHIP
699   CONTINUE

CV CALCULATE RANDOM DOOMSDAY EXPLOSION FACTOR IV IN RANGE 1 TO 7
      CALL RANDO(IV,1,7)

CV IF IV > 2 (1,2/3,4,5,6,7 = 5/7 = 71,4% PROBABILITY):
CV DOOMSDAY EXPLOSION CAUSED BY MINE
      IF(IV.GT.2) THEN

CV SET DESTRUCTION FLAG (NEGATIVE DEFLECTOR STRENGTH)
         DFLCK(7)=-1

CV RETURN
         GOTO 1000
      END IF

CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV
CV END OF FIX OF THE DOOMVE BUG:
CV "ALL STARS ARE MINES"
CVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCVCV

CV ===================================
CV STAR EATEN - NO DAMAGE TO DOOMSDAY
CV ===================================

CV INFORM M-O SHIPS

CV LOOP OVER ALL M-O SHIPS
599   DO 522 J=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(J).EQ.0)GO TO 522

CV CALCULATE FORTRAN UNIT NUMBER IV
      IV=J+4

CV WRITE MESSAGE TO M-O SHIPS IN GAME
CV "DOOMSDAY MACHINE HAS EATEN A STAR ...>"
      WRITE(IV,523)

523   FORMAT(' THE DOOMSDAY MACHINE HAS EATEN A STAR - NO DAMAGE')

CV NEXT M-O SHIP
522   CONTINUE

CV RETURN
      GO TO 1000

CV ======================
CV M-O/C-O SHIPS, EAGLES
CV ======================
CV EDIBLE=3 (M-O/C-O SHIP, EAGLE)

517   ISTAT=2

CV IF NOT AN M-O SHIP: 525
      IF(MIN.GT.4)GO TO 525

CV ==========
CV M-O SHIPS
CV ==========

CV SET M-O SHIP DESTRUCTION FLAG
      DFLCT(MIN)=-1.

CV INFORM M-O SHIPS
      DO 526 IVV=1,4
      IF(ICHOE(IVV).EQ.0)GO TO 526
      IV=IVV+4
      WRITE(IV,527)(INAME(IQ0,MIN),IQ0=1,3)
527   FORMAT(' THE DOOMSDAY MACHINE HAS EATEN THE ',3A4)
526   CONTINUE

CV RETURN
      GO TO 1000

CV IF NO M-O SHIP: 528
525   IF(MIN.GT.6)GO TO 528

CV SET IV TO INDEX OF M-O SHIP
      IV=MIN-4

CV PROCESS M-O SHIP
      GO TO 529

CV ==========
CV C-O SHIPS
CV ==========

CV IF EAGLE: EAGLE (530)
528   IF(MIN.GT.14)GO TO 530

CV SET MIN TO INDEX OF C-O SHIP
      MIN=MIN-6

CV SET C-O SHIP DESTRUCTION FLAG
      DFLCK(MIN)=-1.

CV INFORM M-O SHIPS
      DO 531 IVV=1,4
      IF(ICHOE(IVV).EQ.0)GO TO 531
      IV=IVV+4
      WRITE(IV,532)(IENM2(J,MIN),J=1,4)
532   FORMAT(' THE DOOMSDAY MACHINE HAS EATEN THE ',4A4)
531   CONTINUE

CV RETURN
      GO TO 1000

CV =======
CV EAGLES
CV =======

CV SET MIN TO INDEX OF EAGLE
530   MIN=MIN-14

CV DESTROY EAGLE
      CALL BOOM(MIN)

CV INFORM M-O SHIPS
      DO 533 IVV=1,4
      IF(ICHOE(IVV).EQ.0)GO TO 533
      IV=IVV+4
      WRITE(IV,534)MIN
534   FORMAT(' THE DOOMSDAY MACHINE HAS EATEN EAGLE',I3)
533   CONTINUE

CV RETURN (WHY HERE?)
      GO TO 1000

1000  RETURN
      END


C       -- DONALD ECCLESTONE SUBPROGRAM FOR     T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C                       - EDIBLE -
C

CV DOOMSDAY EDIBILITY

      INTEGER FUNCTION EDIBLE(MM,MN)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)

CV IF EDIBLE=1 (DILITHIUM STAR/STAR/STARBASE) GO TO 514
CV IF EDIBLE=2 (MINE) GO TO 516
CV IF EDIBLE=3 (M-O/C-O SHIP, EAGLE) GO TO 517

CV SET NOT EDIBLE
      EDIBLE=0

CV PUT WHATS AT COORDINATES I7/I8 IN NA
      NA=MAP(I7,I8)

CV IF NA IS EMPTY OR ION STORM: NOT EDIBLE, RETURN
      IF(NA.EQ.IBLK.OR.NA.EQ.III)RETURN

CV IF NA IS NOT A STAR/DILITHIUM STAR/STARBASE: 1
      IF(NA.NE.ISTAR)GO TO 1

CV ======================================
CV STAR/DILITHIUM STAR/STARBASE AT I7/I8
CV ======================================

CV LOOP OVER STAR IK IN RANGE 1 TO
      DO 3 IK=1,2

CV IF STAR AT COORDINATES I7/I8 AND IJ (STARBASE OWNER INDEX)=0: RETURN
CV ??? WHY NOT EAT (DESTROY) THIS KIND OF STAR ???
      IF(MM.EQ.IBASR(IK).AND.MN.EQ.IBASC(IK).AND.IJ(IBPSS(IK)).EQ.0)
     *RETURN

CV ELSE: NEXT STARBASE
3     CONTINUE

CV ALL OTHER STARS/DILITHIUM STARS/STARBASES ARE EDIBLE=1, RETURN
      EDIBLE=1
      RETURN

CV =========================================
CV NO STAR/DILITHIUM STAR/STARBASE AT I7/I8
CV =========================================

CV IF OBJECT AT I7/I8 IS NOT A MINE: 2
1     IF(NA.LT.'1'.OR.NA.GT.'4')GO TO 2

CV ELSE: OBJECT IS (A MINE), EDIBLE=2, RETURN
      EDIBLE=2
      RETURN

CV ELSE: NEITHER EMPTY/ION STORM, STAR/DILITHIUM STAR/STARBASE NOR MINE

CV IF COL OF OBJECT <> COL OF DOOMSDAY: RETURN
2     IF(MM.NE.I7)RETURN

CV IF ROW OF OBJECT = ROW OF DOOMSDAY: OBJECT IS EDIBLE=3, RETURN
      IF(MN.EQ.I8)EDIBLE=3
      RETURN

      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - MNERVA -
C

CV C-O SHIP - MINE COLLISION
CV
CV J = C-O SHIP INDEX

      SUBROUTINE MNERVA(J)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /TOM/ITOM

CV CALCULATE RANDOM DAMAGE FACTOR IV (10-100)
      CALL RANDO(IV,10,100)


CV CALCULATE DAMAGE NUMBER IVV FROM DEFLECTOR STRENGTH AND DAMAGE FACTOR IV
      IVV=IFIX(ALOG((101.-DFLCK(J))*IV+10.)/0.700619195-1.8185)

CV LOOP OVER ALL M-O SHIPS (NOW IV IS THE M-O SHIP INDEX!)
      DO 141 IV=1,4

CV IF M-O SHIP IS NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(IV).EQ.0)GO TO 141

CV CALCULATE FORTRAN UNIT NUMBER L
      L=IV+4

CV WRITE COLLISION MESSAGE
      WRITE(L,401)(IENM2(N,J),N=1,4)
401   FORMAT(1X,4A4,' HAS COLLIDED WITH A MINE - DAMAGE REPORT-')

CV NEXT M-O SHIP
141   CONTINUE

CV DAMAGE MANAGEMENT FOR C-O SHIPS
      CALL GRUP3(IVV,J)

CV DECREASE NUMBER OF ACTIVE MINES BY 1
      MINES=MINES-1

CV RETURN
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - ASIMOV -
C

CV SET ION STORM FLAGS: IONK & ISPOK

      SUBROUTINE ASIMOV(NA,K)
      COMMON /I/IONK(8),ISPOK(8),ION(4),ISPOT(4)
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR

      IF(NA.NE.III)RETURN
      IONK(K)=1
      ISPOK(K)=1

      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - NIVEN -
C

CV KZINTI FALSE IMAGES?

      SUBROUTINE NIVEN
      LOGICAL WODEN
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /Q/IARMZ(6),INDUZ,IXRYZ,IMAGZ,IMAGRZ,IABSZ,ISTAZ,INVIZ(4),
     *ICLOZ,IONNO,IPLANZ,IRUNZ,IDEVZ,IDRIZ,IMAXZ
      COMMON /TOM/ITOM


85    IF(IARMZ(4).EQ.0)GO TO 81
      IF(IMAGZ.EQ.0)GO TO 81
      MIN=0
      DO 86 N=1,IMAGZ
87    CALL RANDO(IV,-IMAGRZ,IMAGRZ)
      CALL RANDO(IVV,-IMAGRZ,IMAGRZ)
      MIN=MIN+1
      IF(MIN.GT.20)GO TO 81
      IV=IKLNR(6)+IV
      IVV=IKLNC(6)+IVV
      IF(.NOT.WODEN(IV,IVV,MAP(IV,IVV)))GO TO 87
      MIN=0
86    MAP(IV,IVV)=IENM1(6)
      DO 83 MIN = 1,20
      CALL RANDO(IV,IKLNR(6)-3,IKLNR(6)+3)
      CALL RANDO(IVV,IKLNC(6)-3,IKLNC(6)+3)
      IF(.NOT.WODEN(IV,IVV,MAP(IV,IVV)))GO TO 83
      IKLNR(6)=IV
      IKLNC(6)=IVV
      GO TO 88
83    CONTINUE
88    CALL ASIMOV(MAP(IKLNR(6),IKLNC(6)),6)
81    MAP(IKLNR(6),IKLNC(6))=IENM1(6)
      RETURN
      END

C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - WODEN -
C

CV KZINTI???

      LOGICAL FUNCTION WODEN(I,J,NA)
      LOGICAL CYRANO
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      WODEN=.FALSE.
      IF(CYRANO(I,J))RETURN
      IF(NA.NE.IBLK.AND.NA.NE.III.AND.NA.NE.IENM1(6))RETURN
      WODEN=.TRUE.
      RETURN
      END

C       -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7
C  CONVERTED TO PC BY: DAN GAHLINGER
C CHECKED TYPE-EXACT 04/24/2000 BY DG
C
C               - ALPHA -
C

CV MOVE EAGLES?
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV -- NOT YET DOCUMENTED --
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE?
CV J2     - COL OF NEAREST M-O SHIP TO EAGLE?
CV N      - ??? (4/2)
CV

      SUBROUTINE ALPHA
      INTEGER ITZRO,ITVL1
      REAL RTZRO,RTVL1
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)

CV CALCULATE POSITION (J1/J2) OF NEAREST M-O SHIP TO EAGLE
      CALL SIMAK(J1,J2)

CV ???
      ISTAT=0
      I=0
      IV=0

CV CALCULATE DISTANCE BETWEEN STARBASE AND NEAREST M-O SHIP TO EAGLE (BDIS)
      BDIS=DI(J1,J2,IKLNR(8),IKLNC(8))

      IF(IO.EQ.1)TYPE 1978,J1,J2,BDIS
1978  FORMAT(' BEGIN ALPHA J1=',I5,' J2=',I5,' BDIS=',F)

CV LOOP OVER EAGLE (IVV) FOR 1 TO LAUNCH
      DO 2 IVV=1,LAUNCH

CV IF EAGLE IVV NO LONGER IN GAME: NEXT EAGLE
      IF(IGLER(IVV).EQ.0)GO TO 2

CV
      RAD=2.9

CV CALCULATE EAGLE ROW DISTANCE I7 = J1 - EAGLE ROW POSITION
      I7=J1-IGLER(IVV)

CV CALCULATE EAGLE COL DISTANCE I7 = J2 - EAGLE COL POSITION
      I8=J2-IGLEC(IVV)

CV IF DISTANCE TO ... <=5: 18
      IF(BDIS.LE.5.)GO TO 18

CV IF ABS(ROW DIST) <=3 AND ABS(COL DIST) <=3:  NEXT EAGLE
      IF(IABS(I7).LE.3.AND.IABS(I8).LE.3)GO TO 2

CV CALCULATE BEARING ANGLE (IN DEGREES) FROM ROW AND COL DIFFERENCES
18    BERNG=ANG(I7,I8)*3.14159265/180.

CV
      AJUST=0.0

CV =====================================

7     N=4
      IGNORE=0
      ITZRO=0

      CALL HORTA(IGLER(IVV),IGLEC(IVV),
     *ITZRO,ITZRO,RAD,BERNG,ITZRO,AJUST,IGNORE,ITZRO,ITZRO)

CV
      IF(IO.EQ.1)TYPE 1979,IVV,MIN,I7,I8

1979  FORMAT(' =#=',I3,' MIN=',I5,' I7=',I5,' I8=',I5)


      IF(MIN.GE.15.AND.MIN.LE.18)GO TO 5


      IF(MIN.EQ.21)GO TO 10


      I=1


      RAD=RAD-DISTP+1.42


      AJUST=AJUST+0.785398163

CV IF ANGLE (AJUST) > 7:  NEXT EAGLE
      IF(AJUST.GT.7.)GO TO 2

      N=2
      I4=0

CV LOOP OVER I4 UNTIL IF AT 1981
6     I71=I7
      I81=I8
      IGNORE=0
      I4=I4+1
      RTZRO=0.0
      ITZRO=0
      RTVL1=1.5


      CALL HORTA(I71,I81,IGLER(IVV),IGLEC(IVV),
     *RTVL1,RTZRO,ITZRO,RTZRO,IGNORE,ITZRO,ITZRO)

CV IF NEAREST XX = MOONBASE AND
CV EAGLE IS AT TARGET I7/I8 (WHY MOVE IF IT IS ALREADY THERE ???):
CV MOVE EAGLE IVV TO I7/I8 (11)
1981  IF(MIN.EQ.14.AND.I7.EQ.IGLER(IVV).AND.I8.EQ.IGLEC(IVV))GO TO 11

CV IF ...: NEXT I4
      IF(MIN.LT.21)GO TO 6

CV ========================
CV MOVE EAGLE IVV TO I7/I8
CV ========================

11    MAP(IGLER(IVV),IGLEC(IVV))=IBLK
      MAP(I7,I8)=IGLE
      IGLER(IVV)=I7
      IGLEC(IVV)=I8


      IF(I.EQ.1)GO TO 7

CV NEXT EAGLE
      GO TO 2

CV
5     DO 12 I71=1,4


      IF(ICHOE(I71).EQ.0)GO TO 12
      I81=I71+4
      WRITE(I81,8)IVV
8     FORMAT(' EAGLE',I3,' DESTROYED ON COLLISION WITH A MINE')
12    CONTINUE


      MAP(I7,I8)=IBLK


      CALL BOOM(IVV)


      MINES=MINES-1

CV NEXT EAGLE
      GO TO 2
10    I=0
      GO TO 11

CV NEXT EAGLE
2     CONTINUE

CV ============================

CV IF NOT ALL EAGLES (25) LAUNCHED AND MOONBASE STILL IN GAME:
CV CALL LEGUIN
      IF(LAUNCH.LT.25.AND.ICHOS(8).NE.0)CALL LEGUIN(J1,J2)
      RETURN
      END


C DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - SIMAK -
C

CV FIND NEAREST M-O SHIP TO EAGLE OR MOONBASE IF NO MORE EAGLES
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE
CV J2     - COL OF NEAREST M-O SHIP TO EAGLE
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV -- NOT YET DOCUMENTED --
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE
CV J2     - COL OF NEAREST M-O SHIP TO EAGLE
CV

      SUBROUTINE SIMAK(J1,J2)
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON/T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)

CV ===============================
CV JUST IN CASE NO/NO MORE EAGLES
CV ===============================

CV SET I71 TO MOONBASE ROW
      I71=IKLNR(8)

CV SET I81 TO MOONBASE COL
      I81=IKLNC(8)

CV ==============================================
CV IF THERE ARE ANY EAGLES (LEFT), REPLACE I7/I8
CV ==============================================

CV THERE IS SOMETHING STRANGE HERE:
CV THE LOOP OVER EAGLES I FOR 1 TO LAUNCH
CV WILL NEVER GET FURTHER THAN THE FIRST EAGLE
CV BECAUSE INSTRUCTION "GO TO 14" JUMPS OUT OF THE
CV LOOP WITHOUT ANY RETURN INTO THE LOOP

CV LOOP OVER EAGLES I FOR 1 TO LAUNCH
      DO 13 I=1,LAUNCH

CV IF EAGLE NOT IN GAME: NEXT EAGLE
      IF(IGLER(I).EQ.0)GO TO 13

CV SET I71 TO EAGLE ROW
      I71=IGLER(I)

CV SET I81 TO EAGLE COL
      I81=IGLEC(I)

CV FIND NEAREST M-O SHIP (14)
      GO TO 14

CV NEXT EAGLE
13    CONTINUE

CV ======================
CV FIND NEAREST M-O SHIP
CV ======================

CV SET SMALLEST DISTANCE (AJUST) START VALUE TO "100."
14    AJUST=100.

CV SET NEAREST M-O SHIP INDEX START VALUE TO "0"
      JTK=0

CV LOOP OVER M-O SHIP I7 FOR 1 TO 4
      DO 15 I7=1,4

CV IF M-O SHIP NOT IN GAME: NEXT M-O SHIP
      IF(ICHOE(I7).EQ.0)GO TO 15

CV CALCULATE DISTANCE BETWEEN M-O SHIP AND EAGLE
      DISTP=DI(IENTR(I7),IENTC(I7),I71,I81)

CV IF DISTANCE BETWEEN M-O SHIP AND EAGLE > SMALLEST DISTANCE:
CV NEXT M-O SHIP
      IF(DISTP.GT.AJUST)GO TO 15

CV ELSE: DISTANCE BETWEEN M-O SHIP AND EAGLE <= SMALLEST DISTANCE
      AJUST=DISTP

CV SET NEAREST M-O SHIP INDEX TO LOOPED M-O SHIP
      JTK=I7

CV NEXT M-O SHIP
15    CONTINUE

CV SET J1 TO ROW OF NEAREST M-O SHIP
CV UNUSED LABEL "16" HERE (?)
16    J1=IENTR(JTK)

CV SET J2 TO COL OF NEAREST M-O SHIP
      J2=IENTC(JTK)

CV RETURN
      RETURN
      END


C -- DONALD ECCLESTONE SUBPROGRAM FOR T R E K 7 --
C  CONVERTED TO PC BY: DAN GAHLINGER
C TYPE-EXACT CHECK 04/27/2000 BY: D.G.
C
C - LEGUIN -
C

C - LEGUIN -
C
CV AUTOMATIC EAGLE TAKE-OFF AND RESULTS THEREOF?
CV ==========================
CV INPUT TRANSFER PARAMETERS
CV ==========================
CV J3     - ROW OF NEAREST M-O SHIP TO EAGLE
CV J4     - COL OF NEAREST M-O SHIP TO EAGLE
CV J3/J4 = 0/0 =>
CV NUMOUT - NUMBER OF EAGLES STILL OUT (NOT DESTROYED)
CV LAUNCH - TOTAL NUMBER OF EAGLES LAUNCHED (DISREGARDING LATER DESTRUCTION)
CV
CV ===================
CV INTERNAL VARIABLES
CV ===================
CV J1     - ROW OF NEAREST M-O SHIP TO EAGLE
CV J2     - COL OF NEAREST M-O SHIP TO EAGLE
CV I71    - ROW DISTANCE (MOONBASE - NEAREST M-O SHIP TO EAGLE)
CV IVV    - COL DISTANCE (MOONBASE - NEAREST M-O SHIP TO EAGLE)
CV I71    - ROW POSITION OF NEW EAGLE
CV IVV    - COL POSITION OF NEW EAGLE
CV I81    - NUMBER OF EAGLES LAUNCHED THIS TURN
CV DISTP  - RAW ANGLE BETWEEN MOONBASE AND NEAREST M-O SHIP TO EAGLE
CV AJUST  - EAGLE ANGLE ADJUSTMENT
CV
CV ==================
CV OUTPUT PARAMETERS
CV ==================
CV NUMOUT - NUMBER OF EAGLES STILL OUT (NOT DESTROYED)
CV LAUNCH - TOTAL NUMBER OF EAGLES LAUNCHED (DISREGARDING DESTRUCTION)
CV

      SUBROUTINE LEGUIN(J3,J4)
      COMMON /A/IT,IS,II(2),IJ(2),I3,JS,ISHAK,NOSTOP
      COMMON /C/L,A,B,I,NA,IV,I7,I8,N,DISTP,AJUST,MIN,ISTAT,JTK,KOENIG,
     *IGNORE,IO,IGOL(80)
      COMMON /D/DFLCT(4),DFLCK(8),DFLCB(2)
      COMMON /L/IENTR(4),IENTC(4),IKLNR(8),IKLNC(8),IGLER(25),IGLEC(25),
     *IBASR(2),IBASC(2),LI2(4),LI2R(5),LI2C(5),IGO(4),MINES
      COMMON /M/MAP(60,60),IBLK,IENM1(8),IEE(4),IGLE,IM(4),III,ISTAR
      COMMON /N/INAME(3,4),IENM2(4,8),ISIDE(3,2),IBASE(2)
      COMMON /R/IBPSC(4),IBPSB(8),IBPSS(2),IBPSE(25)
      COMMON /S/IBPOB(8),IBPOE(25)
      COMMON /T/ICHOE(4),ICHOS(8),ICHOB(2)
      COMMON /U/LAUNCH,NUMOUT,NUME(2)
      COMMON /TOM/ITOM

CV SET J1/J2 TO ROW/COL OF NEAREST M-O SHIP TO EAGLE
      J1=J3
      J2=J4

CV IF J1=0 (?): CALCULATE POSITION OF NEAREST M-O SHIP TO EAGLE
      IF(J1.EQ.0)CALL SIMAK(J1,J2)

CV SET I71 TO ROW DISTANCE (MOONBASE - NEAREST M-O SHIP TO EAGLE)
      I71=J1-IKLNR(8)

CV SET IVV TO COL DISTANCE (MOONBASE - NEAREST M-O SHIP TO EAGLE)
      IVV=J2-IKLNC(8)

CV SET DISTP = PI/4 = RADIAN OF 45 DEGREES
      DISTP=0.785398163

CV IF ROW DISTANCE = 0: ANGLE=0
      IF(I71.EQ.0)DISTP=0.

CV IF COL DISTANCE = 0: ANGLE = 2PI/4 = 90 DEGREES
      IF(IVV.EQ.0)DISTP=2.0*DISTP

CV IF COL DISTANCE = NEGATIVE: ANGLE = 3/4 PI = 135 DEGREES
      IF(IVV.LT.0)DISTP=3.14159265-DISTP

CV IF ROW DISTANCE = NEGATIVE: ANGLE = -1/4 PI = -45 DEGREES
      IF(I71.LT.0)DISTP=-DISTP


CV SET EAGLE ANGLE ADJUSTMENT TO 0.0
      AJUST=0.0

CV SET NUMBER OF EAGLES LAUNCHED THIS TURN (I81) TO 1
      I81=1
      I8=LAUNCH+1

CV ====================
CV LAUNCH (NEXT) EAGLE
CV ====================

CV IF TOTAL NUMBER OF EAGLES LAUNCHED > 25: LAUNCHING FINISHED (113)
107   IF(I8.GT.25)GO TO 113

CV CALCULATE ROW POSITION OF NEW EAGLE
      I71=IFIX(1.8*SIN(DISTP+AJUST))+IKLNR(8)

CV CALCULATE COL POSITION OF NEW EAGLE
      IVV=IFIX(1.8*COS(DISTP+AJUST))+IKLNC(8)

CV IF POSITION OF NEW EAGLE IS EMPTY: 105
      IF(MAP(I71,IVV).EQ.IBLK)GO TO 105

CV LOOP OVER M-O SHIP INDEX (JTK) FOR 1 TO 4
CV UNUSED LABEL "101" (?)
101   DO 122 JTK=1,4

CV IF POSITION OF NEW EAGLE IS OCCUPIED BY M-O SHIP:
CV EAGLE TAKE-OFF CRASH (123)
      IF(MAP(I71,IVV).EQ.IEE(JTK))GO TO 123

CV IF THERE IS A MINE IN THE POSITION OF NEW EAGLE:
CV EAGLE COLLISION WITH A MINE (102)
      IF(MAP(I71,IVV).EQ.IM(JTK))GO TO 102

CV NEXT M-O SHIP
122   CONTINUE

      GO TO 110

CV =====================
CV EAGLE TAKE-OFF CRASH
CV =====================

123   DO 124 MIN=1,4
      IF(ICHOE(MIN).EQ.0)GO TO 124
      N=MIN+4
      WRITE(N,103)I8,(INAME(IQ0,JTK),IQ0=1,3),I8,
     *(INAME(IQ0,JTK),IQ0=1,3)
103   FORMAT(' EAGLE',I3, ' CRASHED INTO ',3A4, ' ON TAKE-OFF'/
     *' EAGLE',I3,' DESTROYED'/1X,3A4,' DAMAGE REPORT-')
124   CONTINUE

CV CALCULATE RANDOM DAMAGE FACTOR IV (1-100)
      CALL RANDO(IV,1,100)

CV CALCULATE DAMAGE NUMBER J1 FROM DEFLECTOR STRENGTH AND DAMAGE FACTOR IV
      J1=ALOG((101.-DFLCT(JTK))*IV+10.)/0.700619195-1.8185

CV DAMAGE REPORT
      CALL GRUP1(J1,JTK)

CV REDUCE NUMBER OF EAGLES STILL OUT BY ONE
      NUMOUT=NUMOUT-1

CV PUT EAGLE I8 OUT OF GAME (DESTROYED)
      IGLER(I8)=0
      IGLEC(I8)=0

CV SKIP PUT NEW EAGLE IN CALCULATED POSITION (106)
      GO TO 106

CV ============================
CV EAGLE COLLISION WITH A MINE
CV ============================

102   DO 125 J1=1,4
      IF(ICHOE(J1).EQ.0)GO TO 125
      J2=J1+4
      WRITE(J2,104)I8
104   FORMAT(' EAGLE',I3,' DESTROYED ON COLLISION WITH A MINE')
125   CONTINUE
      MAP(I71,IVV)=IBLK

CV REDUCE NUMBER OF MINES BY ONE
      MINES=MINES-1

CV REDUCE NUMBER OF EAGLES STILL OUT BY ONE
      NUMOUT=NUMOUT-1


      IGLER(I8)=0
      IGLEC(I8)=0

CV SKIP PUT NEW EAGLE IN CALCULATED POSITION (106)
      GO TO 106

CV ======================
CV LAUNCH NEW EAGLE (I8)
CV ======================

CV PUT NEW EAGLE (I8) IN CALCULATED POSITION (I71/IVV)
105   MAP(I71,IVV)=IGLE
      IGLER(I8)=I71
      IGLEC(I8)=IVV

CV IF MOONBASE HAS NO MORE CREW: ADJUST COUNTERS (1060)
      IF(IBPOB(8).EQ.0)GO TO 1060

CV REDUCE MOONBASE CREW BY 2
      IBPOB(8)=IBPOB(8)-2

CV INCREMENT NUMBER OF EAGLES OF OWNER PARTY OF MOONBASE
      NUME(IBPSB(8))=NUME(IBPSB(8))+1

CV INCREMENT II OF OWNER PARTY OF MOONBASE
      II(IBPSB(8))=II(IBPSB(8))+1

CV SET NUMBER OF CREW ON EAGLE (I8) TO 2
      IBPOE(I8)=2

CV SET OWNER PARTY OF EAGLE (I8) TO OWNER PARTY OF MOONBASE
      IBPSE(I8)=IBPSB(8)

CV SKIP INCREMENT I3
      GO TO 106

CV ================
CV ADJUST COUNTERS
CV ================

CV INCREMENT I3
1060  I3=I3+1

CV INCREMENT NUMBER OF EAGLES LAUNCHED THIS TURN (I81)
106   I81=I81+1

CV INCREMENT I8
      I8=I8+1

CV ========================
CV EAGLE ANGLE FINE TUNING
CV ========================

CV AJUST ANGLE FINE TUNING FOR EAGLE I8 RESULTS IN:
CV 1ST EAGLE: AJUST =  0.0         =   0 DEGREES
CV 2ND EAGLE: AJUST = +0.785398163 = +45 DEGREES
CV 3RD EAGLE: AJUST = -0.785398163 = -45 DEGREES
CV 4TH EAGLE: AJUST = +1.570796    = +90 DEGREES
CV 5TH EAGLE: AJUST = -1.570796    = -90 DEGREES

CV IF AJUST > 0: NEGATE AJUST
110   IF(AJUST.GT.0)GO TO 111

CV ELSE: AJUST <=0: AJUST = PI/4 - AJUST (90 DEGREES - AJUST)
      AJUST=0.785398163-AJUST

CV SKIP NEGATE AJUST
      GO TO 112

CV SET AJUST = -AJUST (NEGATE)
111   AJUST=-AJUST

CV IF AJUST > -2PI AND NUMBER OF EAGLES LAUNCHED THIS TURN (I81) <=5:
CV LAUNCH (NEXT) EAGLE (107)
112   IF(AJUST.GT.-6.28.AND.I81.LE.5)GO TO 107

CV =========================
CV ELSE: LAUNCHING FINISHED
CV =========================

CV NEW TOTAL NUMBER OF LAUNCHED EAGLES =
CV OLD TOTAL NUMBER OF LAUNCHED EAGLES + NUMBER OF EAGLES
CV LAUNCHED THIS TURN (I81-1)
113   LAUNCH=LAUNCH+I81-1

CV CALCULATE NEW NUMBER OF EAGLES STILL OUT (NOT DESTROYED)
      NUMOUT=NUMOUT+I81-1

120   RETURN
      END
